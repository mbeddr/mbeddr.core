apply plugin: 'java'
apply plugin: 'ivy-publish'

ant.property(name: 'build.Dir', location: projectDir )
def CleanGeneratedCode_Task = "cleanSources"
def CleanPlugins_Task = "clean"
def GenerateCode_Task = "generate"
def BuildPlugin_Task = "assemble"
def RunTests_Task = "check"
String mpsMajor = "3.3"
String mpsMinor = "4"
String mpsBuild = mpsMajor + "." + mpsMinor
String mbeddrMajor = "0.9"
String mbeddrMinor = "1"
String mbeddrBuild = mbeddrMajor + "." + mbeddrMinor
String mbeddrMpsDir = "MPS-mbeddr"
ant.property(name: 'mbeddr.github.core.home', location: projectDir)
ant.property(name: 'mps.home', location: "$projectDir" + "/MPS/"+mbeddrMpsDir+"/" )
def sllAllTasks = file(projectDir.absolutePath + "/scripts/sl-all").exists() ? ['sl-all_'+GenerateCode_Task, 'sl-all_'+BuildPlugin_Task] : []
String mbeddrScripts_basePath = ant.properties['mbeddr.github.core.home'] + "/build"
String allScripts_buildFileLocation = mbeddrScripts_basePath + "/" + "com.mbeddr.allScripts"

configurations {
    mps {
        description = 'compile mps'
    }
    allScripts {
        description = 'mbeddr.allScripts script'
    }
}

task resolveMPS(type: Copy) {
    from configurations.mps
    into "MPS"
}

task resolveAllScripts(type: Copy) {
    into "dependencies/allScripts"
    fileTree("dependencies/allScripts/allScripts-0.9.1.zip").each {
        from zipTree(it)
        into "scripts"
    }
}

task load_allScripts(dependsOn: resolveMPS) {
    println("mps location: " + "$projectDir" + "/MPS/"+mbeddrMpsDir+"/")
    ant.importBuild( allScripts_buildFileLocation + "/" + "build.xml") { antTargetName ->
        'allScripts_' + antTargetName
    }
}

task build_allScripts(type: Zip, dependsOn: ['load_allScripts', 'allScripts_'+GenerateCode_Task, 'allScripts_'+BuildPlugin_Task ]) {
    from projectDir.absolutePath + "/artifacts/com.mbeddr.allScripts.build/"
    from fileTree(dir: projectDir.absolutePath + "/build", include: '**/*.xml')
    from fileTree(dir: projectDir.absolutePath + "/code/plugins", include: '**/*.xml')
}

dependencies {
    mps 'com.jetbrains:mps:3.3.1'
    allScripts 'com.mbeddr:allScripts:0.9.1'
}

task download << {
    String mpsBaseUrl = "http://download.jetbrains.com/mps/33/"
    ant.mkdir(dir: "./MPS/")
    ant.get(src: mpsBaseUrl + "MPS-" + mpsBuild + ".zip", dest: "./MPS/MPS-" + mpsBuild + ".zip")
    ant.unzip(src: "./MPS/MPS-" + mpsBuild + ".zip", dest: "./MPS/")
    ant.move(file: "./MPS/MPS " + mpsMajor, toFile: "./MPS/" + mbeddrMpsDir)
}

task mpsZip(type: Zip, dependsOn: download) {
    from "./MPS/" + mbeddrMpsDir
}
repositories {
    ivy {
        // change to point to your repo, e.g. http://my.org/repo
        url "$buildDir/repo"
    }
}
publishing {
    publications {
        mps(IvyPublication) {
            organisation 'com.jetbrains'
            module 'mps'
            revision mpsBuild
            artifact(mpsZip) {

            }
        }
        allScripts(IvyPublication) {
            organisation 'com.mbeddr'
            module 'allScripts'
            revision mbeddrBuild
            artifact(build_allScripts) {

            }
        }
    }
    repositories {
        ivy {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}
