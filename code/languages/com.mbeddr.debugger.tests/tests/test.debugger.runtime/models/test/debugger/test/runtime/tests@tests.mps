<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:c7de79e6-86cc-49eb-a914-846b56256894(test.debugger.test.runtime.tests@tests)">
  <persistence version="9" />
  <languages>
    <use id="f61473f9-130f-42f6-b98d-6c438812c2f6" name="jetbrains.mps.baseLanguage.unitTest" version="0" />
    <use id="8585453e-6bfb-4d80-98de-b16074f1d86c" name="jetbrains.mps.lang.test" version="2" />
    <use id="443f4c36-fcf5-4eb6-9500-8d06ed259e3e" name="jetbrains.mps.baseLanguage.classifiers" version="0" />
    <use id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core" version="1" />
    <use id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections" version="0" />
    <use id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel" version="8" />
    <use id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage" version="5" />
  </languages>
  <imports>
    <import index="mhbf" ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34/java:org.jetbrains.mps.openapi.model(MPS.OpenAPI/)" />
    <import index="u02k" ref="r:d7313444-c0c4-49ce-a33f-924d6b925b1b(com.mbeddr.core.debug.test.runtime.m1)" />
    <import index="w1kc" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.smodel(MPS.Core/)" />
    <import index="3v5a" ref="498d89d2-c2e9-11e2-ad49-6cf049e62fe5/java:com.intellij.execution(MPS.IDEA/)" />
    <import index="4nm9" ref="498d89d2-c2e9-11e2-ad49-6cf049e62fe5/java:com.intellij.openapi.project(MPS.IDEA/)" />
    <import index="hr7j" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.binder(Eclipse.Debugger/)" />
    <import index="x30c" ref="r:04a32be8-7074-4c9c-b2f8-77d4a01a19dc(com.mbeddr.core.debug.debugger)" />
    <import index="guwi" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.io(JDK/)" />
    <import index="pry4" ref="r:0a0d7eec-6e5a-412b-8e16-e3ee5ed7fb95(jetbrains.mps.debug.api.programState)" />
    <import index="33ny" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util(JDK/)" />
    <import index="2334" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.name(Eclipse.Debugger/)" />
    <import index="ez3t" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject(Eclipse.Debugger/)" />
    <import index="drde" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.multibindings(Eclipse.Debugger/)" />
    <import index="2gv2" ref="r:055bac8c-a50b-42ec-a317-e20a256152b4(com.mbeddr.core.debug.structure)" />
    <import index="i5cy" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util.concurrent.atomic(JDK/)" />
    <import index="5zyv" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util.concurrent(JDK/)" />
    <import index="z1c3" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.project(MPS.Core/)" />
    <import index="rgba" ref="fa1d9f5d-d5ce-44c5-94ac-ba5f1a1fba8e/java:org.easymock(test.debugger.core/)" />
    <import index="wyt6" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)" implicit="true" />
  </imports>
  <registry>
    <language id="8585453e-6bfb-4d80-98de-b16074f1d86c" name="jetbrains.mps.lang.test">
      <concept id="5097124989038916362" name="jetbrains.mps.lang.test.structure.TestInfo" flags="ng" index="2XOHcx">
        <property id="5097124989038916363" name="projectPath" index="2XOHcw" />
      </concept>
      <concept id="1216913645126" name="jetbrains.mps.lang.test.structure.NodesTestCase" flags="lg" index="1lH9Xt">
        <child id="1216993439383" name="methods" index="1qtyYc" />
        <child id="1217501895093" name="testMethods" index="1SL9yI" />
      </concept>
      <concept id="1225978065297" name="jetbrains.mps.lang.test.structure.SimpleNodeTest" flags="ng" index="1LZb2c" />
    </language>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1215693861676" name="jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression" flags="nn" index="d038R">
        <child id="1068498886297" name="rValue" index="37vLTx" />
        <child id="1068498886295" name="lValue" index="37vLTJ" />
      </concept>
      <concept id="1202948039474" name="jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation" flags="nn" index="liA8E" />
      <concept id="1239714755177" name="jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation" flags="nn" index="2$Kvd9">
        <child id="1239714902950" name="expression" index="2$L3a6" />
      </concept>
      <concept id="1153952380246" name="jetbrains.mps.baseLanguage.structure.TryStatement" flags="nn" index="2GUZhq">
        <child id="1153952416686" name="body" index="2GV8ay" />
        <child id="1153952429843" name="finallyBody" index="2GVbov" />
        <child id="1164903700860" name="catchClause" index="TEXxN" />
      </concept>
      <concept id="1224848483129" name="jetbrains.mps.baseLanguage.structure.IBLDeprecatable" flags="ng" index="IEa8$">
        <property id="1224848525476" name="isDeprecated" index="IEkAT" />
      </concept>
      <concept id="1154032098014" name="jetbrains.mps.baseLanguage.structure.AbstractLoopStatement" flags="nn" index="2LF5Ji">
        <child id="1154032183016" name="body" index="2LFqv$" />
      </concept>
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1164879751025" name="jetbrains.mps.baseLanguage.structure.TryCatchStatement" flags="nn" index="SfApY">
        <child id="1164879758292" name="body" index="SfCbr" />
        <child id="1164903496223" name="catchClause" index="TEbGg" />
      </concept>
      <concept id="1145552977093" name="jetbrains.mps.baseLanguage.structure.GenericNewExpression" flags="nn" index="2ShNRf">
        <child id="1145553007750" name="creator" index="2ShVmc" />
      </concept>
      <concept id="1164903280175" name="jetbrains.mps.baseLanguage.structure.CatchClause" flags="nn" index="TDmWw">
        <child id="1164903359218" name="catchBody" index="TDEfX" />
        <child id="1164903359217" name="throwable" index="TDEfY" />
      </concept>
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1182160077978" name="jetbrains.mps.baseLanguage.structure.AnonymousClassCreator" flags="nn" index="YeOm9">
        <child id="1182160096073" name="cls" index="YeSDq" />
      </concept>
      <concept id="1081236700937" name="jetbrains.mps.baseLanguage.structure.StaticMethodCall" flags="nn" index="2YIFZM">
        <reference id="1144433194310" name="classConcept" index="1Pybhc" />
      </concept>
      <concept id="1081256982272" name="jetbrains.mps.baseLanguage.structure.InstanceOfExpression" flags="nn" index="2ZW3vV">
        <child id="1081256993305" name="classType" index="2ZW6by" />
        <child id="1081256993304" name="leftExpression" index="2ZW6bz" />
      </concept>
      <concept id="1070533707846" name="jetbrains.mps.baseLanguage.structure.StaticFieldReference" flags="nn" index="10M0yZ">
        <reference id="1144433057691" name="classifier" index="1PxDUh" />
      </concept>
      <concept id="1070534058343" name="jetbrains.mps.baseLanguage.structure.NullLiteral" flags="nn" index="10Nm6u" />
      <concept id="1070534370425" name="jetbrains.mps.baseLanguage.structure.IntegerType" flags="in" index="10Oyi0" />
      <concept id="1070534644030" name="jetbrains.mps.baseLanguage.structure.BooleanType" flags="in" index="10P_77" />
      <concept id="1070534934090" name="jetbrains.mps.baseLanguage.structure.CastExpression" flags="nn" index="10QFUN">
        <child id="1070534934091" name="type" index="10QFUM" />
        <child id="1070534934092" name="expression" index="10QFUP" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <property id="1176718929932" name="isFinal" index="3TUv4t" />
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="1068498886292" name="jetbrains.mps.baseLanguage.structure.ParameterDeclaration" flags="ir" index="37vLTG" />
      <concept id="1068498886294" name="jetbrains.mps.baseLanguage.structure.AssignmentExpression" flags="nn" index="37vLTI" />
      <concept id="1225271177708" name="jetbrains.mps.baseLanguage.structure.StringType" flags="in" index="17QB3L" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123132" name="jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration" flags="ng" index="3clF44">
        <property id="1181808852946" name="isFinal" index="DiZV1" />
        <child id="1068580123133" name="returnType" index="3clF45" />
        <child id="1068580123134" name="parameter" index="3clF46" />
        <child id="1068580123135" name="body" index="3clF47" />
      </concept>
      <concept id="1068580123165" name="jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration" flags="ig" index="3clFb_">
        <property id="1178608670077" name="isAbstract" index="1EzhhJ" />
      </concept>
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123157" name="jetbrains.mps.baseLanguage.structure.Statement" flags="nn" index="3clFbH" />
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068580123137" name="jetbrains.mps.baseLanguage.structure.BooleanConstant" flags="nn" index="3clFbT">
        <property id="1068580123138" name="value" index="3clFbU" />
      </concept>
      <concept id="1068580320020" name="jetbrains.mps.baseLanguage.structure.IntegerConstant" flags="nn" index="3cmrfG">
        <property id="1068580320021" name="value" index="3cmrfH" />
      </concept>
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6">
        <child id="1068581517676" name="expression" index="3cqZAk" />
      </concept>
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242867" name="jetbrains.mps.baseLanguage.structure.LongType" flags="in" index="3cpWsb" />
      <concept id="1068581242869" name="jetbrains.mps.baseLanguage.structure.MinusExpression" flags="nn" index="3cpWsd" />
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1068581517677" name="jetbrains.mps.baseLanguage.structure.VoidType" flags="in" index="3cqZAl" />
      <concept id="1079359253375" name="jetbrains.mps.baseLanguage.structure.ParenthesizedExpression" flags="nn" index="1eOMI4">
        <child id="1079359253376" name="expression" index="1eOMHV" />
      </concept>
      <concept id="1081506762703" name="jetbrains.mps.baseLanguage.structure.GreaterThanExpression" flags="nn" index="3eOSWO" />
      <concept id="1081506773034" name="jetbrains.mps.baseLanguage.structure.LessThanExpression" flags="nn" index="3eOVzh" />
      <concept id="1160998861373" name="jetbrains.mps.baseLanguage.structure.AssertStatement" flags="nn" index="1gVbGN">
        <child id="1160998896846" name="condition" index="1gVkn0" />
      </concept>
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
        <child id="1068499141038" name="actualArgument" index="37wK5m" />
      </concept>
      <concept id="1212685548494" name="jetbrains.mps.baseLanguage.structure.ClassCreator" flags="nn" index="1pGfFk">
        <child id="1212687122400" name="typeParameter" index="1pMfVU" />
      </concept>
      <concept id="1107461130800" name="jetbrains.mps.baseLanguage.structure.Classifier" flags="ng" index="3pOWGL">
        <property id="521412098689998745" name="nonStatic" index="2bfB8j" />
        <child id="5375687026011219971" name="member" index="jymVt" unordered="true" />
      </concept>
      <concept id="7812454656619025412" name="jetbrains.mps.baseLanguage.structure.LocalMethodCall" flags="nn" index="1rXfSq" />
      <concept id="1107535904670" name="jetbrains.mps.baseLanguage.structure.ClassifierType" flags="in" index="3uibUv">
        <reference id="1107535924139" name="classifier" index="3uigEE" />
        <child id="1109201940907" name="parameter" index="11_B2D" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="1214918800624" name="jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression" flags="nn" index="3uNrnE" />
      <concept id="1178549954367" name="jetbrains.mps.baseLanguage.structure.IVisible" flags="ng" index="1B3ioH">
        <child id="1178549979242" name="visibility" index="1B3o_S" />
      </concept>
      <concept id="1144230876926" name="jetbrains.mps.baseLanguage.structure.AbstractForStatement" flags="nn" index="1DupvO">
        <child id="1144230900587" name="variable" index="1Duv9x" />
      </concept>
      <concept id="1144231330558" name="jetbrains.mps.baseLanguage.structure.ForStatement" flags="nn" index="1Dw8fO">
        <child id="1144231399730" name="condition" index="1Dwp0S" />
        <child id="1144231408325" name="iteration" index="1Dwrff" />
      </concept>
      <concept id="1146644602865" name="jetbrains.mps.baseLanguage.structure.PublicVisibility" flags="nn" index="3Tm1VV" />
      <concept id="1146644641414" name="jetbrains.mps.baseLanguage.structure.ProtectedVisibility" flags="nn" index="3Tmbuc" />
      <concept id="1116615150612" name="jetbrains.mps.baseLanguage.structure.ClassifierClassExpression" flags="nn" index="3VsKOn">
        <reference id="1116615189566" name="classifier" index="3VsUkX" />
      </concept>
      <concept id="1170345865475" name="jetbrains.mps.baseLanguage.structure.AnonymousClass" flags="ig" index="1Y3b0j">
        <reference id="1170346070688" name="classifier" index="1Y3XeK" />
      </concept>
    </language>
    <language id="443f4c36-fcf5-4eb6-9500-8d06ed259e3e" name="jetbrains.mps.baseLanguage.classifiers">
      <concept id="1205752633985" name="jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression" flags="nn" index="2WthIp" />
      <concept id="1205756064662" name="jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation" flags="ng" index="2WEnae">
        <reference id="1205756909548" name="member" index="2WH_rO" />
      </concept>
      <concept id="1205769003971" name="jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration" flags="ng" index="2XrIbr" />
      <concept id="1205769149993" name="jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation" flags="nn" index="2XshWL">
        <child id="1205770614681" name="actualArgument" index="2XxRq1" />
      </concept>
    </language>
    <language id="f61473f9-130f-42f6-b98d-6c438812c2f6" name="jetbrains.mps.baseLanguage.unitTest">
      <concept id="7080278351417106679" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNotNull" flags="nn" index="2Hmddi">
        <child id="7080278351417106681" name="expression" index="2Hmdds" />
      </concept>
      <concept id="1171981022339" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue" flags="nn" index="3vwNmj">
        <child id="1171981057159" name="condition" index="3vwVQn" />
      </concept>
      <concept id="1171983834376" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse" flags="nn" index="3vFxKo">
        <child id="1171983854940" name="condition" index="3vFALc" />
      </concept>
      <concept id="1172028177041" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull" flags="nn" index="3ykFI1">
        <child id="1172028236559" name="expression" index="3ykU8v" />
      </concept>
      <concept id="1172069869612" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows" flags="nn" index="3$NI$W">
        <child id="1172070029086" name="statement" index="3$Oloe" />
        <child id="1172070532815" name="exceptionType" index="3$Qgvv" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1143226024141" name="jetbrains.mps.lang.smodel.structure.SModelType" flags="in" index="H_c77" />
      <concept id="1145383075378" name="jetbrains.mps.lang.smodel.structure.SNodeListType" flags="in" index="2I9FWS" />
      <concept id="1145567426890" name="jetbrains.mps.lang.smodel.structure.SNodeListCreator" flags="nn" index="2T8Vx0">
        <child id="1145567471833" name="createdType" index="2T96Bj" />
      </concept>
      <concept id="1180636770613" name="jetbrains.mps.lang.smodel.structure.SNodeCreator" flags="nn" index="3zrR0B">
        <child id="1180636770616" name="createdType" index="3zrR0E" />
      </concept>
      <concept id="1138055754698" name="jetbrains.mps.lang.smodel.structure.SNodeType" flags="in" index="3Tqbb2">
        <reference id="1138405853777" name="concept" index="ehGHo" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
        <child id="5169995583184591170" name="smodelAttribute" index="lGtFl" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
      <concept id="4222318806802425298" name="jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation" flags="ng" index="15s5l7" />
      <concept id="709746936026466394" name="jetbrains.mps.lang.core.structure.ChildAttribute" flags="ng" index="3VBwX9">
        <property id="709746936026609031" name="linkId" index="3V$3ak" />
        <property id="709746936026609029" name="linkRole" index="3V$3am" />
      </concept>
      <concept id="4452961908202556907" name="jetbrains.mps.lang.core.structure.BaseCommentAttribute" flags="ng" index="1X3_iC">
        <child id="3078666699043039389" name="commentedNode" index="8Wnug" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="540871147943773365" name="jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation" flags="nn" index="25WWJ4">
        <child id="540871147943773366" name="argument" index="25WWJ7" />
      </concept>
      <concept id="1151688443754" name="jetbrains.mps.baseLanguage.collections.structure.ListType" flags="in" index="_YKpA">
        <child id="1151688676805" name="elementType" index="_ZDj9" />
      </concept>
      <concept id="1153943597977" name="jetbrains.mps.baseLanguage.collections.structure.ForEachStatement" flags="nn" index="2Gpval">
        <child id="1153944400369" name="variable" index="2Gsz3X" />
        <child id="1153944424730" name="inputSequence" index="2GsD0m" />
      </concept>
      <concept id="1153944193378" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariable" flags="nr" index="2GrKxI" />
      <concept id="1153944233411" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference" flags="nn" index="2GrUjf">
        <reference id="1153944258490" name="variable" index="2Gs0qQ" />
      </concept>
      <concept id="1237721394592" name="jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator" flags="nn" index="HWqM0">
        <child id="1237721435807" name="elementType" index="HW$YZ" />
      </concept>
      <concept id="1160600644654" name="jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit" flags="nn" index="Tc6Ow" />
      <concept id="1160612413312" name="jetbrains.mps.baseLanguage.collections.structure.AddElementOperation" flags="nn" index="TSZUe" />
      <concept id="1162934736510" name="jetbrains.mps.baseLanguage.collections.structure.GetElementOperation" flags="nn" index="34jXtK" />
    </language>
  </registry>
  <node concept="2XOHcx" id="1f0gqNzAccm">
    <property role="2XOHcw" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/" />
  </node>
  <node concept="1lH9Xt" id="30gDo8BMhFW">
    <property role="TrG5h" value="TestRuntime" />
    <property role="3GE5qa" value="integration" />
    <node concept="1LZb2c" id="30gDo8BMhFZ" role="1SL9yI">
      <property role="TrG5h" value="validateDependencies" />
      <node concept="3cqZAl" id="30gDo8BMhG0" role="3clF45" />
      <node concept="3clFbS" id="30gDo8BMhG1" role="3clF47">
        <node concept="3cpWs8" id="30gDo8BMpIQ" role="3cqZAp">
          <node concept="3cpWsn" id="30gDo8BMpIR" role="3cpWs9">
            <property role="TrG5h" value="testRuntime" />
            <node concept="3uibUv" id="30gDo8BMpIS" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIbxX" resolve="TestRuntime" />
            </node>
            <node concept="2ShNRf" id="30gDo8BMpIU" role="33vP2m">
              <node concept="1pGfFk" id="30gDo8BMpIW" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIbxZ" resolve="TestRuntime" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="1ZspCbdiaYZ" role="3cqZAp">
          <node concept="3cpWsn" id="1ZspCbdiaZ0" role="3cpWs9">
            <property role="TrG5h" value="executionExceptionThrown" />
            <node concept="10P_77" id="1ZspCbdiaZ1" role="1tU5fm" />
            <node concept="3clFbT" id="1ZspCbdiaZ3" role="33vP2m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="1ZspCbdiaYQ" role="3cqZAp">
          <node concept="3clFbS" id="1ZspCbdiaYR" role="SfCbr">
            <node concept="3clFbF" id="65KmIn8sMea" role="3cqZAp">
              <node concept="2OqwBi" id="30gDo8BMpJ6" role="3clFbG">
                <node concept="37vLTw" id="4WqJ5Sh63qB" role="2Oq$k0">
                  <ref role="3cqZAo" node="30gDo8BMpIR" resolve="testRuntime" />
                </node>
                <node concept="liA8E" id="30gDo8BMpJc" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:30gDo8BIbyp" resolve="createSession" />
                  <node concept="2ShNRf" id="58boHs0Hz$9" role="37wK5m">
                    <node concept="YeOm9" id="58boHs0H$zb" role="2ShVmc">
                      <node concept="1Y3b0j" id="58boHs0H$ze" role="YeSDq">
                        <property role="2bfB8j" value="true" />
                        <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                        <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                        <node concept="3Tm1VV" id="58boHs0H$zf" role="1B3o_S" />
                        <node concept="3clFb_" id="58boHs0H$zg" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getProject" />
                          <node concept="3uibUv" id="58boHs0H$zh" role="3clF45">
                            <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                          </node>
                          <node concept="3Tm1VV" id="58boHs0H$zi" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zk" role="3clF47">
                            <node concept="3clFbF" id="58boHs0MqWj" role="3cqZAp">
                              <node concept="2YIFZM" id="58boHs0NT7d" role="3clFbG">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="58boHs0NTr6" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zm" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getBinary" />
                          <node concept="3uibUv" id="58boHs0H$zn" role="3clF45">
                            <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                          </node>
                          <node concept="3Tm1VV" id="58boHs0H$zo" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zq" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_2U" role="3cqZAp">
                              <node concept="10Nm6u" id="58boHs0H_2V" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zs" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getModel" />
                          <node concept="H_c77" id="58boHs0H$zt" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$zu" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zw" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_7k" role="3cqZAp">
                              <node concept="10Nm6u" id="58boHs0H_7l" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zy" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getModules" />
                          <node concept="2I9FWS" id="58boHs0H$zz" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$z$" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zA" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_bI" role="3cqZAp">
                              <node concept="10Nm6u" id="58boHs0H_bJ" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zC" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getTracePath" />
                          <node concept="17QB3L" id="58boHs0H$zD" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$zE" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zG" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_g8" role="3cqZAp">
                              <node concept="10Nm6u" id="58boHs0H_g9" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="4jk7wJwghhW" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="showUnmappedVariables" />
                          <node concept="10P_77" id="4jk7wJwghhX" role="3clF45" />
                          <node concept="3Tm1VV" id="4jk7wJwghhY" role="1B3o_S" />
                          <node concept="3clFbS" id="4jk7wJwghi1" role="3clF47">
                            <node concept="3clFbF" id="4jk7wJwghi3" role="3cqZAp">
                              <node concept="3clFbT" id="4jk7wJwghi2" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zI" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getBinaryPath" />
                          <node concept="17QB3L" id="58boHs0H$zJ" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$zK" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zM" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_ky" role="3cqZAp">
                              <node concept="10Nm6u" id="58boHs0H_kz" role="3clFbG" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zO" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getLaunchTimeout" />
                          <node concept="10Oyi0" id="58boHs0H$zP" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$zQ" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zS" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_AJ" role="3cqZAp">
                              <node concept="3cmrfG" id="58boHs0H_AI" role="3clFbG">
                                <property role="3cmrfH" value="-1" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFb_" id="58boHs0H$zU" role="jymVt">
                          <property role="1EzhhJ" value="false" />
                          <property role="TrG5h" value="getCommandTimeout" />
                          <node concept="10Oyi0" id="58boHs0H$zV" role="3clF45" />
                          <node concept="3Tm1VV" id="58boHs0H$zW" role="1B3o_S" />
                          <node concept="3clFbS" id="58boHs0H$zY" role="3clF47">
                            <node concept="3clFbF" id="58boHs0H_y4" role="3cqZAp">
                              <node concept="3cmrfG" id="58boHs0H_y3" role="3clFbG">
                                <property role="3cmrfH" value="-1" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="1ZspCbdiaYT" role="TEbGg">
            <node concept="3clFbS" id="1ZspCbdiaYW" role="TDEfX">
              <node concept="3clFbF" id="1ZspCbdiaZ4" role="3cqZAp">
                <node concept="37vLTI" id="1ZspCbdiaZc" role="3clFbG">
                  <node concept="3clFbT" id="1ZspCbdiaZf" role="37vLTx">
                    <property role="3clFbU" value="true" />
                  </node>
                  <node concept="37vLTw" id="4WqJ5Sh63$8" role="37vLTJ">
                    <ref role="3cqZAo" node="1ZspCbdiaZ0" resolve="executionExceptionThrown" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="1ZspCbdinK9" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="29so9Vcljr3" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~ExecutionException" resolve="ExecutionException" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="7W4QWPKDz91" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63r8" role="3vFALc">
            <ref role="3cqZAo" node="1ZspCbdiaZ0" resolve="executionExceptionThrown" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4DNo">
    <property role="TrG5h" value="Stepper" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF4DXI" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF4DXL" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4DXK" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF4DXM" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4DXO" role="3clFbG">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="7C_wgEF4DXP" role="37wK5m">
              <node concept="YeOm9" id="7C_wgEF4DXV" role="2ShVmc">
                <node concept="1Y3b0j" id="7C_wgEF4DXW" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="7C_wgEF4DXX" role="1B3o_S" />
                  <node concept="3clFb_" id="7C_wgEF4DXY" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="7C_wgEF4DXZ" role="1B3o_S" />
                    <node concept="3cqZAl" id="7C_wgEF4DY0" role="3clF45" />
                    <node concept="3clFbS" id="7C_wgEF4DY1" role="3clF47">
                      <node concept="3clFbF" id="7C_wgEF4DY4" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4DYp" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh62Xe" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="69Byf55PgYq" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4DYx" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4DYz" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="69Byf55PgYw" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF4DYE" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4DYX" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh62ZZ" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF4DYH" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4DZ6" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="7C_wgEF4DZ8" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIb_8" resolve="TRStepperImpl" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF4E0G" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4E0H" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF4E0I" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62W7" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4E0K" role="37wK5m">
                                <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4E0L" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF4E0M" role="37wK5m">
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <node concept="Xl_RD" id="7C_wgEF4E0N" role="37wK5m">
                                  <property role="Xl_RC" value="timeout" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4E0O" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="3cmrfG" id="7C_wgEF4E0P" role="37wK5m">
                              <property role="3cmrfH" value="300" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="4ktgw6PNG_P" role="3cqZAp">
                        <node concept="2OqwBi" id="4ktgw6PNG_Q" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh6368" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="4ktgw6PNG_S" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                            </node>
                          </node>
                          <node concept="liA8E" id="4ktgw6PNG_T" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="4ktgw6PNG_U" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="4ktgw6PNG_V" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLWY" role="lGtFl" />
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4DXE" role="1SL9yI">
      <property role="TrG5h" value="createInstance" />
      <node concept="3cqZAl" id="7C_wgEF4DXF" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4DXG" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF4E0U" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4E1a" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4E0V" role="2Oq$k0">
              <node concept="2WthIp" id="7C_wgEF4E0W" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4E0X" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4E1g" role="2OqNvi">
              <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
              <node concept="3VsKOn" id="7C_wgEF4E1i" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4EYa" role="1SL9yI">
      <property role="TrG5h" value="performStepOver" />
      <node concept="3cqZAl" id="7C_wgEF4EYb" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4EYc" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4EYJ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4EYK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4EYL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4EYN" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4EYO" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4EYP" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4EYB" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4EYC" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4EYD" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4EZ5" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63_a" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4EYK" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4EZb" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4EYF" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4EZk" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4EZl" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="69Byf55PgYC" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4EZp" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Kj" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4EYK" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4EZr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PgYO" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmWoHK" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmWoHL" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="2pJszzmWoHM" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="2pJszzmWoHO" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63V5" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4EYK" resolve="injector" />
              </node>
              <node concept="liA8E" id="2pJszzmWoHQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="2pJszzmWoHZ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2pJszzmWoHF" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuKux" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuKtY" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh637g" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4EZl" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuKu4" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
              <node concept="2YIFZM" id="7W4QWPKuKu7" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuKu9" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuKtE" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuKuQ" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuKuz" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuKuW" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuKuX" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuKtD" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4F0h" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4F0i" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7C_wgEF4F0j" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4F0k" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4F0l" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F0m" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F0n" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4F0o" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4F0p" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63LL" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4F0i" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4F0r" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F0s" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7C_wgEF4F0t" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F0u" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F0v" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4F0w" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4F0x" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63n7" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4F0i" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4F0z" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F0$" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7C_wgEF4F0_" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F0A" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F0B" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4F0C" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4F0D" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63y3" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4F0i" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4F0F" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F0G" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7C_wgEF4F0H" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4F0I" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4F0J" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4F0K" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7C_wgEF4F0L" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4F0M" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4F0N" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F0O" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F0P" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4F0Q" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF4F0R" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4F0S" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63zs" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4F0K" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4F0U" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4F0V" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63t0" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4F0i" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F0X" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4F0Y" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4F0Z" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4F10" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7C_wgEF4F11" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7C_wgEF4F12" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7C_wgEF4F13" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF4F14" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7C_wgEF4F15" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F16" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F17" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Tk" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4F10" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7C_wgEF4F19" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63ij" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4F0K" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4F1b" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4F1c" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4F1d" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4F1e" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4F1f" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4F1g" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F1h" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F1i" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4F1j" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF4F1k" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4F1l" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63E2" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4F1d" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4F1n" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4F1o" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63uJ" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4F10" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F1q" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2pJszzmWoI$" role="3cqZAp">
          <node concept="2OqwBi" id="2pJszzmWoIT" role="3clFbG">
            <node concept="2YIFZM" id="2pJszzmWoIA" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="2pJszzmWoIq" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63_O" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmWoHL" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="2pJszzmWoIy" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2pJszzmWoIY" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63JY" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4F1d" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2pJszzmWoI5" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4F1K" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4F1L" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63RX" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4F0i" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F1N" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4F1O" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63pe" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4F0K" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F1T" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4F1U" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Kd" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4F1d" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2pJszzmWoJ0" role="3cqZAp">
          <node concept="2YIFZM" id="2pJszzmWoJ1" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63bR" role="37wK5m">
              <ref role="3cqZAo" node="2pJszzmWoHL" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuKYD" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuKYE" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63AY" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4EZl" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4F1W" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4F1X" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F1Y" role="3clFbG">
            <node concept="1eOMI4" id="7C_wgEF4F1Z" role="2Oq$k0">
              <node concept="10QFUN" id="7C_wgEF4F20" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63DQ" role="10QFUP">
                  <ref role="3cqZAo" node="7C_wgEF4EYC" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7C_wgEF4HNp" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F23" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F2Z" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F3u" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF4F30" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF4F33" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF4F34" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF4F39" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF4F3a" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="7C_wgEF4F3b" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF4F3c" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF4F3d" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF4F3e" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF4F3f" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF4F3O" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF4F3P" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF4F3I" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF4F3K" role="3clFbG">
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <node concept="3cmrfG" id="7C_wgEF4F3M" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF4F51" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF4F52" role="3clFbG">
                                  <node concept="1eOMI4" id="7C_wgEF4F53" role="2Oq$k0">
                                    <node concept="10QFUN" id="7C_wgEF4F54" role="1eOMHV">
                                      <node concept="37vLTw" id="4WqJ5Sh63DK" role="10QFUP">
                                        <ref role="3cqZAo" node="7C_wgEF4EYC" resolve="stepper" />
                                      </node>
                                      <node concept="3uibUv" id="7C_wgEF4JgU" role="10QFUM">
                                        <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF4F57" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF4F3R" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF4F3S" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF4F3V" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF4F3U" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF4F3W" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF4F4a" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF4F3X" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF4F4f" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF4F4t" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63Ik" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF4F3S" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF4F4C" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4F3H" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4F2q" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4F2D" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63vP" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4EYC" resolve="stepper" />
            </node>
            <node concept="liA8E" id="7C_wgEF4F2J" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BIaME" resolve="stepOver" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuKt4" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuKt8" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuKta" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63lo" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4EZl" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuKvs" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuKvt" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63lW" role="37wK5m">
              <ref role="3cqZAo" node="2pJszzmWoHL" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuKt7" role="3cqZAp" />
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuM1l" role="1SL9yI">
      <property role="TrG5h" value="performStepOut" />
      <node concept="3cqZAl" id="7W4QWPKuM1m" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuM1n" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuM1o" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM1p" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuM1q" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM1r" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuM1s" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuM1t" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM1u" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM1v" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuM1w" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM1x" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63kk" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM1p" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM1z" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM1$" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM1_" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM1A" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuM1B" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM1C" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Az" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM1p" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM1E" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM1F" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM1G" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM1H" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="7W4QWPKuM1I" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM1J" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63s4" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM1p" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM1L" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM1M" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM1N" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM1O" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM1P" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63yi" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM1A" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM1R" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
              <node concept="2YIFZM" id="7W4QWPKuM1S" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuM1T" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM1U" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM1V" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM1W" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM1X" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuM1Y" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM1Z" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM20" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM21" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuM22" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM23" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM24" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM25" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM26" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM27" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM28" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63FH" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM21" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM2a" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM2b" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuM2c" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM2d" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM2e" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM2f" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM2g" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63aq" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM21" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM2i" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM2j" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuM2k" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM2l" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM2m" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM2n" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM2o" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Jh" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM21" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM2q" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM2r" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuM2s" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM2t" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM2u" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM2v" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuM2w" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM2x" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM2y" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM2z" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM2$" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuM2_" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuM2A" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuM2B" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Jz" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuM2v" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuM2D" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuM2E" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh639W" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuM21" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM2G" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM2H" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM2I" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM2J" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuM2K" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuM2L" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuM2M" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuM2N" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuM2O" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM2P" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM2Q" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63mY" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM2J" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM2S" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63sX" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuM2v" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM2U" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM2V" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM2W" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuM2X" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM2Y" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM2Z" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM30" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM31" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuM32" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuM33" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuM34" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63oM" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuM2W" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuM36" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuM37" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Hr" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuM2J" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM39" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3a" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM3b" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM3c" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM3d" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63xv" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM1H" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM3f" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM3g" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63Uf" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuM2W" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM3i" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM3j" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM3k" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Cr" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM21" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3m" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM3n" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63sj" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM2v" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3p" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM3q" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63AD" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM2W" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3s" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM3t" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63wS" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM1H" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3v" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM3w" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Qu" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM1A" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM3y" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM3z" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM3$" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuM3_" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuM3A" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63QS" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuM1v" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuM3C" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM3D" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM3E" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM3F" role="3clFbG">
            <node concept="2ShNRf" id="7W4QWPKuM3G" role="2Oq$k0">
              <node concept="1pGfFk" id="7W4QWPKuM3H" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7W4QWPKuM3I" role="37wK5m">
                  <node concept="YeOm9" id="7W4QWPKuM3J" role="2ShVmc">
                    <node concept="1Y3b0j" id="7W4QWPKuM3K" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7W4QWPKuM3L" role="1B3o_S" />
                      <node concept="3clFb_" id="7W4QWPKuM3M" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7W4QWPKuM3N" role="1B3o_S" />
                        <node concept="3cqZAl" id="7W4QWPKuM3O" role="3clF45" />
                        <node concept="3clFbS" id="7W4QWPKuM3P" role="3clF47">
                          <node concept="SfApY" id="7W4QWPKuM3Q" role="3cqZAp">
                            <node concept="3clFbS" id="7W4QWPKuM3R" role="SfCbr">
                              <node concept="3clFbF" id="7W4QWPKuM3S" role="3cqZAp">
                                <node concept="2YIFZM" id="7W4QWPKuM3T" role="3clFbG">
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <node concept="3cmrfG" id="7W4QWPKuM3U" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7W4QWPKuM3V" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKuM3W" role="3clFbG">
                                  <node concept="1eOMI4" id="7W4QWPKuM3X" role="2Oq$k0">
                                    <node concept="10QFUN" id="7W4QWPKuM3Y" role="1eOMHV">
                                      <node concept="37vLTw" id="4WqJ5Sh63wV" role="10QFUP">
                                        <ref role="3cqZAo" node="7W4QWPKuM1v" resolve="stepper" />
                                      </node>
                                      <node concept="3uibUv" id="7W4QWPKuM40" role="10QFUM">
                                        <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKuM41" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7W4QWPKuM42" role="TEbGg">
                              <node concept="3cpWsn" id="7W4QWPKuM43" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7W4QWPKuM44" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7W4QWPKuM45" role="TDEfX">
                                <node concept="3clFbF" id="7W4QWPKuM46" role="3cqZAp">
                                  <node concept="2OqwBi" id="7W4QWPKuM47" role="3clFbG">
                                    <node concept="10M0yZ" id="7W4QWPKuM48" role="2Oq$k0">
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                    </node>
                                    <node concept="liA8E" id="7W4QWPKuM49" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7W4QWPKuM4a" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63QP" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7W4QWPKuM43" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7W4QWPKuM4c" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM4d" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM4e" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM4f" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Mc" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM1v" resolve="stepper" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM4h" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BIaMO" resolve="stepOut" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM4i" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM4j" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM4k" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh638_" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM1A" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM4m" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM4n" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63qW" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM1H" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM4p" role="3cqZAp" />
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuM4F" role="1SL9yI">
      <property role="TrG5h" value="performStepInto" />
      <node concept="3cqZAl" id="7W4QWPKuM4G" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuM4H" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuM4I" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM4J" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuM4K" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM4L" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuM4M" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuM4N" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM4O" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM4P" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuM4Q" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM4R" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh6390" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM4J" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM4T" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM4U" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM4V" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM4W" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuM4X" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM4Y" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63rS" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM4J" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM50" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM51" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuM52" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM53" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="7W4QWPKuM54" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuM55" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63xg" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuM4J" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM57" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuM58" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM59" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM5a" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5b" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63nv" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM4W" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM5d" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
              <node concept="2YIFZM" id="7W4QWPKuM5e" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuM5f" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM5g" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5h" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM5i" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM5j" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuM5k" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM5l" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM5m" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM5n" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuM5o" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM5p" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM5q" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM5r" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5s" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM5t" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM5u" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63f0" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM5n" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM5w" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM5x" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuM5y" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM5z" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5$" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM5_" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM5A" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh6380" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM5n" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM5C" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM5D" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuM5E" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM5F" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5G" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM5H" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM5I" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63cZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM5n" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM5K" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM5L" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuM5M" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM5N" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM5O" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM5P" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuM5Q" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM5R" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM5S" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM5T" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM5U" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuM5V" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuM5W" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuM5X" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63pk" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuM5P" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuM5Z" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuM60" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63MQ" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuM5n" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM62" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM63" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM64" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM65" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuM66" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuM67" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuM68" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuM69" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuM6a" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6b" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM6c" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63vd" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM65" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM6e" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh6396" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuM5P" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM6g" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM6h" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM6i" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuM6j" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM6k" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM6l" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6m" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM6n" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuM6o" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuM6p" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuM6q" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Lp" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuM6i" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuM6s" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuM6t" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63OI" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuM65" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM6v" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6w" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM6x" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuM6y" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuM6z" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Du" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuM53" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="7W4QWPKuM6_" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM6A" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63TX" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuM6i" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM6C" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM6D" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM6E" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Hu" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM5n" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6G" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM6H" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63wG" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM5P" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6J" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM6K" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63kI" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM6i" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6M" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM6N" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63kn" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM53" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM6P" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM6Q" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63SZ" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM4W" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM6S" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM6T" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM6U" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuM6V" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuM6W" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63N8" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuM4P" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuM6Y" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM6Z" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM70" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM71" role="3clFbG">
            <node concept="2ShNRf" id="7W4QWPKuM72" role="2Oq$k0">
              <node concept="1pGfFk" id="7W4QWPKuM73" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7W4QWPKuM74" role="37wK5m">
                  <node concept="YeOm9" id="7W4QWPKuM75" role="2ShVmc">
                    <node concept="1Y3b0j" id="7W4QWPKuM76" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="7W4QWPKuM77" role="1B3o_S" />
                      <node concept="3clFb_" id="7W4QWPKuM78" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7W4QWPKuM79" role="1B3o_S" />
                        <node concept="3cqZAl" id="7W4QWPKuM7a" role="3clF45" />
                        <node concept="3clFbS" id="7W4QWPKuM7b" role="3clF47">
                          <node concept="SfApY" id="7W4QWPKuM7c" role="3cqZAp">
                            <node concept="3clFbS" id="7W4QWPKuM7d" role="SfCbr">
                              <node concept="3clFbF" id="7W4QWPKuM7e" role="3cqZAp">
                                <node concept="2YIFZM" id="7W4QWPKuM7f" role="3clFbG">
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <node concept="3cmrfG" id="7W4QWPKuM7g" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7W4QWPKuM7h" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKuM7i" role="3clFbG">
                                  <node concept="1eOMI4" id="7W4QWPKuM7j" role="2Oq$k0">
                                    <node concept="10QFUN" id="7W4QWPKuM7k" role="1eOMHV">
                                      <node concept="37vLTw" id="4WqJ5Sh63n1" role="10QFUP">
                                        <ref role="3cqZAo" node="7W4QWPKuM4P" resolve="stepper" />
                                      </node>
                                      <node concept="3uibUv" id="7W4QWPKuM7m" role="10QFUM">
                                        <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKuM7n" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7W4QWPKuM7o" role="TEbGg">
                              <node concept="3cpWsn" id="7W4QWPKuM7p" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7W4QWPKuM7q" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7W4QWPKuM7r" role="TDEfX">
                                <node concept="3clFbF" id="7W4QWPKuM7s" role="3cqZAp">
                                  <node concept="2OqwBi" id="7W4QWPKuM7t" role="3clFbG">
                                    <node concept="10M0yZ" id="7W4QWPKuM7u" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7W4QWPKuM7v" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7W4QWPKuM7w" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63R1" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7W4QWPKuM7p" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7W4QWPKuM7y" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM7z" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM7$" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM7_" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63ME" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM4P" resolve="stepper" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM7B" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BIaMJ" resolve="stepInto" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM7C" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM7D" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM7E" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63x7" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM4W" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM7G" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM7H" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63w4" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM53" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM7J" role="3cqZAp" />
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4FUE" role="1SL9yI">
      <property role="TrG5h" value="stepOverWithoutSuspendedResponse" />
      <node concept="3cqZAl" id="7C_wgEF4FUF" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4FUG" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuOoA" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOoB" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuOoC" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOoD" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuOoE" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuOoF" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOoG" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOoH" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOoI" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOoJ" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63oA" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOoB" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOoL" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOoM" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOoN" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOoO" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuOoP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOoQ" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh639Z" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOoB" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOoS" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOoT" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOoU" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOoV" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="7W4QWPKuOoW" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOoX" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63zL" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOoB" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOoZ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOp0" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOp1" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOp2" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOp3" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63wY" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOoO" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOp5" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
              <node concept="2YIFZM" id="7W4QWPKuOp6" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuOp7" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOp8" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOp9" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOpa" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOpb" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuOpc" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOpd" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOpe" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOpf" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuOpg" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOph" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOpi" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOpj" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOpk" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOpl" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOpm" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Jw" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOpf" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOpo" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOpp" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOpq" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOpr" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOps" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOpt" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOpu" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63j9" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOpf" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOpw" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOpx" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOpy" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOpz" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOp$" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOp_" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOpA" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63eI" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOpf" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOpC" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOpD" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuOpE" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOpF" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOpG" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOpH" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuOpI" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOpJ" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOpK" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOpL" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOpM" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOpN" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOpO" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOpP" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Hc" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOpH" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOpR" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOpS" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63na" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOpf" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOpU" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOpV" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOpW" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOpX" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuOpY" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuOpZ" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuOq0" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuOq1" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuOq2" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOq3" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOq4" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63xm" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOpX" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOq6" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh637y" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOpH" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOq8" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOq9" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOqa" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOqb" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOqc" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOqd" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOqe" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOqf" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOqg" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOqh" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOqi" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63yJ" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOqa" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOqk" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOql" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh638v" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOpX" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOqn" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOqo" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOqp" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOqq" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOqr" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Wh" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOoV" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOqt" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOqu" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63sF" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOqa" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOqw" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOqx" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOqy" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63fB" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOpf" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOq$" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOq_" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Ve" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOpH" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOqB" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOqC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Bx" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOqa" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOqE" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOqF" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63qx" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOoV" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOqH" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOqI" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63aM" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOoO" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOqK" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOqL" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOqM" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuOqN" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuOqO" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63ej" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuOoH" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuOqQ" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOqR" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOrw" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKuOt8" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuOtb" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuOrs" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuOrt" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63sR" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOoH" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOrv" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaME" resolve="stepOver" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOt6" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOrx" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOry" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63eU" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOoO" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOr$" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOr_" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63l9" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOoV" resolve="programStatePovider" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuM1d" role="1SL9yI">
      <property role="TrG5h" value="stepIntoWithoutSuspendedResponse" />
      <node concept="3cqZAl" id="7W4QWPKuM1e" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuM1f" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuOtc" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOtd" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuOte" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOtf" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuOtg" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuOth" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOti" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOtj" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOtk" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOtl" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63vx" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOtd" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOtn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOto" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOtp" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOtq" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuOtr" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOts" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63mh" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOtd" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOtu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOtv" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOtw" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOtx" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="7W4QWPKuOty" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOtz" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63m2" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOtd" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOt_" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOtA" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOtB" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOtC" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOtD" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh638b" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOtq" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOtF" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
              <node concept="2YIFZM" id="7W4QWPKuOtG" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuOtH" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOtI" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOtJ" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOtK" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOtL" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuOtM" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOtN" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOtO" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOtP" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuOtQ" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOtR" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOtS" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOtT" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOtU" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOtV" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOtW" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63mA" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOtP" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOtY" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOtZ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOu0" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOu1" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOu2" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOu3" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOu4" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh6399" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOtP" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOu6" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOu7" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOu8" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOu9" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOua" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOub" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOuc" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63zI" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOtP" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOue" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOuf" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuOug" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOuh" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOui" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOuj" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuOuk" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOul" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOum" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOun" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOuo" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOup" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOuq" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOur" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63qT" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOuj" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOut" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOuu" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63vu" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOtP" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOuw" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOux" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOuy" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOuz" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuOu$" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuOu_" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuOuA" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuOuB" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuOuC" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOuD" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOuE" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Ur" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOuz" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOuG" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63Nh" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOuj" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOuI" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOuJ" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOuK" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOuL" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOuM" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOuN" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOuO" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOuP" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOuQ" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOuR" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOuS" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63U6" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOuK" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOuU" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOuV" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63D4" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOuz" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOuX" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOuY" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOuZ" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOv0" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOv1" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63SN" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOtx" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOv3" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOv4" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63kF" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOuK" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOv6" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOv7" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOv8" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63lf" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOtP" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOva" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOvb" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63S$" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOuj" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOvd" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOve" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63JP" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOuK" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOvg" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOvh" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63zO" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOtx" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOvj" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOvk" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63M3" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOtq" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOvm" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOvn" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOvo" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuOvp" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuOvq" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63gs" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuOtj" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuOvs" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOvt" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOvu" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKuOvv" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuOvw" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuOvx" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuOvy" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63mP" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOtj" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOv$" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMJ" resolve="stepInto" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOv_" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOvA" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOvB" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63pt" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOtq" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOvD" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOvE" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63PJ" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOtx" resolve="programStatePovider" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuM1h" role="1SL9yI">
      <property role="TrG5h" value="stepOutWithoutSuspendedResponse" />
      <node concept="3cqZAl" id="7W4QWPKuM1i" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuM1j" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuOvV" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOvW" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuOvX" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOvY" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuOvZ" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuOw0" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOw1" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOw2" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOw3" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOw4" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63rV" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOvW" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOw6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOw7" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOw8" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOw9" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuOwa" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOwb" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63dG" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOvW" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOwd" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOwe" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuOwf" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOwg" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="7W4QWPKuOwh" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuOwi" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Hl" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOvW" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOwk" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuOwl" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOwm" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOwn" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOwo" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63db" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOw9" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOwq" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
              <node concept="2YIFZM" id="7W4QWPKuOwr" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuOws" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOwt" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOwu" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOwv" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOww" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7W4QWPKuOwx" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOwy" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOwz" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOw$" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuOw_" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOwA" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOwB" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOwC" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOwD" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOwE" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOwF" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63_1" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOw$" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOwH" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOwI" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOwJ" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOwK" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOwL" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOwM" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOwN" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63sm" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOw$" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOwP" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOwQ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuOwR" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOwS" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOwT" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOwU" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOwV" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63$S" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOw$" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOwX" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOwY" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuOwZ" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOx0" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOx1" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOx2" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuOx3" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOx4" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOx5" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOx6" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOx7" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOx8" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOx9" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOxa" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63rq" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOx2" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOxc" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOxd" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63uz" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOw$" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOxf" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOxg" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOxh" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOxi" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuOxj" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuOxk" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuOxl" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuOxm" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuOxn" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxo" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOxp" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63va" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuOxi" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuOxr" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63Jq" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOx2" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOxt" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuOxu" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuOxv" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuOxw" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuOxx" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuOxy" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxz" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOx$" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuOx_" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuOxA" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuOxB" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63CH" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuOxv" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuOxD" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuOxE" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh639i" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuOxi" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOxG" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxH" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOxI" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuOxJ" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuOxK" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63AG" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuOwg" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="7W4QWPKuOxM" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOxN" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63zm" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuOxv" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOxP" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOxQ" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOxR" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63VW" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOw$" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxT" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOxU" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh638s" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOx2" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxW" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOxX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63z_" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOxv" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOxZ" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOy0" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63qE" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOwg" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOy2" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOy3" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63y9" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOw9" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOy5" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOy6" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuOy7" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuOy8" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuOy9" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63AP" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuOw2" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuOyb" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuOyc" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOyd" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKuOye" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuOyf" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuOyg" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuOyh" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Ka" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuOw2" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuOyj" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMO" resolve="stepOut" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuOyk" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuOyl" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOym" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63by" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOw9" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuOyo" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuOyp" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63xU" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuOwg" resolve="programStatePovider" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4FV4" role="1SL9yI">
      <property role="TrG5h" value="stepOverFailsInMapper" />
      <node concept="3cqZAl" id="7C_wgEF4FV5" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4FV6" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4FZp" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4FZq" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4FZr" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4FZs" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4FZt" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4FZu" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4FZv" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4FZw" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4FZx" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4FZy" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63q9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4FZq" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4FZ$" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4FZ_" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55PgYS" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55PgYT" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="69Byf55PgYU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="69Byf55PgYV" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63LX" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4FZq" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55PgYX" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PgYY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G0b" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4G0d" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G03" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63DT" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55PgYT" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4G09" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
              <node concept="2YIFZM" id="7C_wgEF4G0m" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4G0o" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4FZN" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G0_" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4G0a" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4G18" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="7C_wgEF4G1i" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4G1n" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2PERJElsJb6" resolve="DebuggerException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G0L" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4G1v" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4G1w" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7C_wgEF4G1x" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4G1y" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4G1z" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G1$" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G1_" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4G1A" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4G1B" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63im" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4G1w" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4G1D" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G1E" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7C_wgEF4G1F" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G1G" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G1H" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4G1I" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4G1J" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63GX" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4G1w" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4G1L" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G1M" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7C_wgEF4G1N" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G1O" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G1P" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4G1Q" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4G1R" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63oD" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4G1w" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4G1T" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G1U" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7C_wgEF4G1V" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G1W" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4G1X" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4G1Y" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7C_wgEF4G1Z" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4G20" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4G21" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G22" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G23" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4G24" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF4G25" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4G26" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Mi" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4G1Y" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4G28" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4G29" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63S3" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4G1w" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G2b" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G2c" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4G2d" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4G2e" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7C_wgEF4G2f" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7C_wgEF4G2g" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7C_wgEF4G2h" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF4G2i" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7C_wgEF4G2j" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G2k" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G2l" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63BH" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4G2e" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7C_wgEF4G2n" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63a5" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4G1Y" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G2p" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4G2q" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4G2r" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4G2s" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4G2t" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4G2u" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G2v" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G2w" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4G2x" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF4G2y" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4G2z" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63f3" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4G2r" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4G2_" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4G2A" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Vk" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4G2e" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G2C" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G2D" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4G2E" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4G2F" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63yl" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4G1w" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G2H" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4G2I" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63_d" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4G1Y" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G2K" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4G2L" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63iI" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4G2r" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4G0H" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4G0J" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63RL" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PgYT" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4G2N" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4G2O" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4G2P" role="3clFbG">
            <node concept="1eOMI4" id="7C_wgEF4G2Q" role="2Oq$k0">
              <node concept="10QFUN" id="7C_wgEF4G2R" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63mD" role="10QFUP">
                  <ref role="3cqZAo" node="7C_wgEF4FZw" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7C_wgEF4HNq" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4G2U" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4G3t" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4G3S" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4G3T" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4G3j" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Gs" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4FZw" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7C_wgEF4G3q" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaME" resolve="stepOver" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuLYJ" role="1SL9yI">
      <property role="TrG5h" value="stepIntoFailsInMapper" />
      <node concept="3cqZAl" id="7W4QWPKuLYK" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuLYL" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuLYM" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLYN" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuLYO" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLYP" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuLYQ" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuLYR" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLYS" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLYT" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuLYU" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLYV" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63dw" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLYN" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLYX" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLYY" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLYZ" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLZ0" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuLZ1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLZ2" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63qK" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLYN" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLZ4" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLZ5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLZ6" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuLZ7" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZ8" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63W5" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuLZ0" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuLZa" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
              <node concept="2YIFZM" id="7W4QWPKuLZb" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuLZc" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLZd" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZe" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLZf" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuLZg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="7W4QWPKuLZh" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7W4QWPKuLZi" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2PERJElsJb6" resolve="DebuggerException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLZj" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLZk" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLZl" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuLZm" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuLZn" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuLZo" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLZp" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZq" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLZr" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLZs" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63fc" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLZl" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLZu" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLZv" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuLZw" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLZx" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZy" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLZz" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLZ$" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63IN" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLZl" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLZA" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLZB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuLZC" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLZD" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZE" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLZF" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLZG" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Dj" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLZl" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLZI" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLZJ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuLZK" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLZL" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLZM" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLZN" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuLZO" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuLZP" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuLZQ" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLZR" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLZS" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuLZT" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuLZU" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuLZV" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63m5" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuLZN" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuLZX" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuLZY" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63HW" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuLZl" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM00" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM01" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM02" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM03" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuM04" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuM05" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuM06" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuM07" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuM08" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM09" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM0a" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63cx" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuM03" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuM0c" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63id" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuLZN" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM0e" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuM0f" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuM0g" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuM0h" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuM0i" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuM0j" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM0k" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM0l" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuM0m" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuM0n" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuM0o" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63rk" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuM0g" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuM0q" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuM0r" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63dM" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuM03" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM0t" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM0u" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM0v" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM0w" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63vV" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLZl" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM0y" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM0z" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63QJ" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLZN" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM0_" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM0A" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63jl" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuM0g" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuM0C" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuM0D" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Fi" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLZ0" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuM0F" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuM0G" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuM0H" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuM0I" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuM0J" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63uG" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuLYT" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuM0L" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuM0M" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7W4QWPKuM0N" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuM0O" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuM0P" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuM0Q" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63bC" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLYT" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuM0S" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMJ" resolve="stepInto" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuLWo" role="1SL9yI">
      <property role="TrG5h" value="stepOutFailsInMapper" />
      <node concept="3cqZAl" id="7W4QWPKuLWp" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuLWq" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuLWr" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLWs" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuLWt" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLWu" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuLWv" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuLWw" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLWx" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLWy" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuLWz" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLW$" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63M0" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLWs" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLWA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLWB" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLWC" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLWD" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <node concept="3uibUv" id="7W4QWPKuLWE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLWF" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63mS" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLWs" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLWH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLWI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLWJ" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuLWK" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLWL" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63JA" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuLWD" resolve="stepperMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKuLWN" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
              <node concept="2YIFZM" id="7W4QWPKuLWO" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKuLWP" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLWQ" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLWR" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLWS" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7W4QWPKuLWT" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="7W4QWPKuLWU" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7W4QWPKuLWV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2PERJElsJb6" resolve="DebuggerException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLWW" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLWX" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLWY" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="7W4QWPKuLWZ" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuLX0" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuLX1" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLX2" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLX3" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLX4" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLX5" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63FY" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLWY" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLX7" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLX8" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuLX9" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLXa" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLXb" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLXc" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLXd" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63TR" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLWY" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLXf" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLXg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKuLXh" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLXi" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLXj" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKuLXk" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKuLXl" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63yA" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKuLWY" resolve="locationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKuLXn" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLXo" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKuLXp" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLXq" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLXr" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLXs" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="7W4QWPKuLXt" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuLXu" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuLXv" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLXw" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLXx" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuLXy" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuLXz" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuLX$" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63BQ" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuLXs" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuLXA" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuLXB" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63MW" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuLWY" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLXD" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLXE" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLXF" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLXG" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7W4QWPKuLXH" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7W4QWPKuLXI" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKuLXJ" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKuLXK" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7W4QWPKuLXL" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLXM" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLXN" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Kg" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKuLXG" resolve="stackFrames" />
            </node>
            <node concept="liA8E" id="7W4QWPKuLXP" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63lH" role="37wK5m">
                <ref role="3cqZAo" node="7W4QWPKuLXs" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLXR" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKuLXS" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLXT" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuLXU" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKuLXV" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKuLXW" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLXX" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLXY" role="3clFbG">
            <node concept="2OqwBi" id="7W4QWPKuLXZ" role="2Oq$k0">
              <node concept="2YIFZM" id="7W4QWPKuLY0" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7W4QWPKuLY1" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Q7" role="2Oq$k0">
                    <ref role="3cqZAo" node="7W4QWPKuLXT" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7W4QWPKuLY3" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPKuLY4" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63z4" role="37wK5m">
                  <ref role="3cqZAo" node="7W4QWPKuLXG" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLY6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLY7" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuLY8" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuLY9" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Qm" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLWY" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLYb" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuLYc" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63re" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLXs" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLYe" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuLYf" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63B9" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLXT" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKuLYh" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKuLYi" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63f$" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKuLWD" resolve="stepperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLYk" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKuLYl" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKuLYm" role="3clFbG">
            <node concept="1eOMI4" id="7W4QWPKuLYn" role="2Oq$k0">
              <node concept="10QFUN" id="7W4QWPKuLYo" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63e4" role="10QFUP">
                  <ref role="3cqZAo" node="7W4QWPKuLWy" resolve="stepper" />
                </node>
                <node concept="3uibUv" id="7W4QWPKuLYq" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKuLYr" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7W4QWPKuLYs" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuLYt" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuLYu" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuLYv" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63q$" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLWy" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLYx" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMO" resolve="stepOut" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4FVY" role="1SL9yI">
      <property role="TrG5h" value="stepOverWithoutProgramState" />
      <node concept="3cqZAl" id="7C_wgEF4FVZ" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4FW0" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4FWj" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4FWk" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4FWl" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4FWm" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4FWn" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4FWo" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4FWp" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4FWq" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4FWr" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4FWs" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63hw" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4FWk" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4FWu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4FWv" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4FXW" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4FZ3" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4FZo" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4FZ6" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4FYF" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63S9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4FWq" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7C_wgEF4FYH" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaME" resolve="stepOver" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuLVx" role="1SL9yI">
      <property role="TrG5h" value="stepIntoWithoutProgramState" />
      <node concept="3cqZAl" id="7W4QWPKuLVy" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuLVz" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuLV$" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLV_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuLVA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLVB" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuLVC" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuLVD" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLVE" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLVF" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuLVG" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLVH" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Ee" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLV_" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLVJ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLVK" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLVL" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKuLVM" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuLVN" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuLVO" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuLVP" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63e_" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLVF" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLVR" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMJ" resolve="stepInto" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKuLVW" role="1SL9yI">
      <property role="TrG5h" value="stepOutWithoutProgramState" />
      <node concept="3cqZAl" id="7W4QWPKuLVX" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKuLVY" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKuLVZ" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLW0" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7W4QWPKuLW1" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLW2" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKuLW3" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKuLW4" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4DXI" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKuLW5" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKuLW6" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKuLW7" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKuLW8" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63RC" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLW0" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLWa" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKuLWb" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKuLWc" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKuLWd" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKuLWe" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBP" resolve="TRExecutingDebugCommandFailedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKuLWf" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKuLWg" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63t3" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKuLW6" resolve="stepper" />
              </node>
              <node concept="liA8E" id="7W4QWPKuLWi" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaMO" resolve="stepOut" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF3DrS">
    <property role="TrG5h" value="BreakpointLocation" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="1LZb2c" id="7C_wgEF3Ds6" role="1SL9yI">
      <property role="TrG5h" value="createInvalidLocations" />
      <node concept="3cqZAl" id="7C_wgEF3Ds7" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3Ds8" role="3clF47">
        <node concept="3$NI$W" id="7C_wgEF3Dso" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3Dss" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3Dsr" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3Dsd" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3Dsf" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaPR" resolve="TRBreakpointLocationImpl" />
                <node concept="10Nm6u" id="7C_wgEF3Dsg" role="37wK5m" />
                <node concept="10Nm6u" id="7C_wgEF3Dsm" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3Dsu" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3Dsv" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3Dsw" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3Dsx" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3Dsy" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaPR" resolve="TRBreakpointLocationImpl" />
                <node concept="Xl_RD" id="7C_wgEF3DsG" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="10Nm6u" id="7C_wgEF3Ds$" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3Ds_" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3DsA" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3DsB" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3DsC" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3DsD" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaPR" resolve="TRBreakpointLocationImpl" />
                <node concept="10Nm6u" id="7C_wgEF3DsE" role="37wK5m" />
                <node concept="Xl_RD" id="7C_wgEF3DsH" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF3DsL" role="1SL9yI">
      <property role="TrG5h" value="creaValidLocation" />
      <node concept="3cqZAl" id="7C_wgEF3DsM" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3DsN" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF3DDB" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3DDC" role="3cpWs9">
            <property role="TrG5h" value="modelName" />
            <node concept="17QB3L" id="7C_wgEF3DDD" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF3DDF" role="33vP2m">
              <property role="Xl_RC" value="a" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3DDG" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3DDH" role="3cpWs9">
            <property role="TrG5h" value="nodeID" />
            <node concept="17QB3L" id="7C_wgEF3DDI" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF3DDJ" role="33vP2m">
              <property role="Xl_RC" value="b" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3DDU" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3DDV" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocation" />
            <node concept="3uibUv" id="7C_wgEF3DDW" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaLK" resolve="ITRBreakpointLocation" />
            </node>
            <node concept="2ShNRf" id="7C_wgEF3DsP" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF3DsQ" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaPR" resolve="TRBreakpointLocationImpl" />
                <node concept="37vLTw" id="4WqJ5Sh63$3" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF3DDC" resolve="modelName" />
                </node>
                <node concept="37vLTw" id="4WqJ5Sh63Qp" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF3DDH" resolve="nodeID" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="7C_wgEF3DDP" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3DEi" role="1gVkn0">
            <node concept="2OqwBi" id="7C_wgEF3DE5" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63Gj" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3DDV" resolve="breakpointLocation" />
              </node>
              <node concept="liA8E" id="7C_wgEF3DEb" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaLQ" resolve="getFQModelName" />
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF3DEo" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63dV" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF3DDC" resolve="modelName" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="7C_wgEF3DEq" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3DEr" role="1gVkn0">
            <node concept="2OqwBi" id="7C_wgEF3DEs" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63Vt" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3DDV" resolve="breakpointLocation" />
              </node>
              <node concept="liA8E" id="7C_wgEF3DEu" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaLM" resolve="getNodeID" />
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF3DEv" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63Ux" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF3DDH" resolve="nodeID" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF3DK5">
    <property role="TrG5h" value="Breakpoint" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="1LZb2c" id="7C_wgEF3DKg" role="1SL9yI">
      <property role="TrG5h" value="invalidOperations" />
      <node concept="3cqZAl" id="7C_wgEF3DKh" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3DKi" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF3DKq" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3DKr" role="3cpWs9">
            <property role="TrG5h" value="breakpoint" />
            <node concept="3uibUv" id="7C_wgEF3DKs" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaO1" resolve="TRBreakpointImpl" />
            </node>
            <node concept="2ShNRf" id="7C_wgEF3DKu" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF3DKw" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaO3" resolve="TRBreakpointImpl" />
                <node concept="2ShNRf" id="7C_wgEF3DKx" role="37wK5m">
                  <node concept="3zrR0B" id="7C_wgEF3DL1" role="2ShVmc">
                    <node concept="3Tqbb2" id="7C_wgEF3DL2" role="3zrR0E">
                      <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                    </node>
                  </node>
                </node>
                <node concept="2YIFZM" id="7C_wgEF3DLg" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="7C_wgEF3DLm" role="37wK5m">
                    <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                  </node>
                </node>
                <node concept="Xl_RD" id="7C_wgEF3DLy" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3DQ5" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF3DQ9" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3DQn" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63jB" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3DKr" resolve="breakpoint" />
              </node>
              <node concept="liA8E" id="7C_wgEF3DQx" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaOl" resolve="addToRunningSessions" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF3DQ8" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3DQ_" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF3DQA" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3DQB" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63JS" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3DKr" resolve="breakpoint" />
              </node>
              <node concept="liA8E" id="7C_wgEF3DQD" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BIaOh" resolve="removeFromRunningSessions" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF3DQE" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF3DQK" role="1SL9yI">
      <property role="TrG5h" value="invalidParameters" />
      <node concept="3cqZAl" id="7C_wgEF3DQL" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3DQM" role="3clF47">
        <node concept="3$NI$W" id="7C_wgEF3DRe" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3DRf" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="65KmIn8sMee" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3DRj" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3DRk" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaO3" resolve="TRBreakpointImpl" />
                <node concept="2ShNRf" id="7C_wgEF3DRQ" role="37wK5m">
                  <node concept="3zrR0B" id="7C_wgEF3DRR" role="2ShVmc">
                    <node concept="3Tqbb2" id="7C_wgEF3DRS" role="3zrR0E">
                      <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                    </node>
                  </node>
                </node>
                <node concept="10Nm6u" id="7C_wgEF3DRm" role="37wK5m" />
                <node concept="10Nm6u" id="7C_wgEF3DRn" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3DRo" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3DRp" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="65KmIn8sMeg" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3DRt" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3DRu" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaO3" resolve="TRBreakpointImpl" />
                <node concept="2ShNRf" id="7C_wgEF3DRT" role="37wK5m">
                  <node concept="3zrR0B" id="7C_wgEF3DRU" role="2ShVmc">
                    <node concept="3Tqbb2" id="7C_wgEF3DRV" role="3zrR0E">
                      <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                    </node>
                  </node>
                </node>
                <node concept="10Nm6u" id="7C_wgEF3DRw" role="37wK5m" />
                <node concept="Xl_RD" id="7C_wgEF3DRW" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3DRy" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3DRz" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="65KmIn8sMei" role="3$Oloe">
            <node concept="2ShNRf" id="7C_wgEF3DRB" role="3clFbG">
              <node concept="1pGfFk" id="7C_wgEF3DRC" role="2ShVmc">
                <ref role="37wK5l" to="u02k:30gDo8BIaO3" resolve="TRBreakpointImpl" />
                <node concept="2ShNRf" id="7C_wgEF3DRX" role="37wK5m">
                  <node concept="3zrR0B" id="7C_wgEF3DRY" role="2ShVmc">
                    <node concept="3Tqbb2" id="7C_wgEF3DRZ" role="3zrR0E">
                      <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                    </node>
                  </node>
                </node>
                <node concept="2YIFZM" id="7C_wgEF3DS7" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="7C_wgEF3DS8" role="37wK5m">
                    <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                  </node>
                </node>
                <node concept="10Nm6u" id="7C_wgEF3DRF" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF3Ed5">
    <property role="TrG5h" value="BreakpointManager" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="1LZb2c" id="7C_wgEF3EyE" role="1SL9yI">
      <property role="TrG5h" value="createInstance" />
      <node concept="3cqZAl" id="7C_wgEF3EyF" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3EyG" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF3EyJ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3EyK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF3EyL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF3EyR" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF3EyS" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF3EyY" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF3EyZ" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                    <ref role="1Y3XeK" to="ez3t:~Module" resolve="Module" />
                    <node concept="3Tm1VV" id="7C_wgEF3Ez0" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF3Ez1" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tm1VV" id="7C_wgEF3Ez2" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF3Ez3" role="3clF45" />
                      <node concept="37vLTG" id="7C_wgEF3Ez4" role="3clF46">
                        <property role="TrG5h" value="binder" />
                        <node concept="3uibUv" id="7C_wgEF3Ez5" role="1tU5fm">
                          <ref role="3uigEE" to="ez3t:~Binder" resolve="Binder" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="7C_wgEF3Ez6" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF3Ez9" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3EzJ" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3Ezn" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3Eza" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3Ez4" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3Ezt" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3Ezv" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3EzS" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7C_wgEF3EYv" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7C_wgEF3EYw" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF3EYA" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3EZc" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3EYO" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3EYB" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3Ez4" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3EYU" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3EYW" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3EZl" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="65KmIn8sMe3" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIbHf" resolve="TRBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMdW" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7W4QWPKDza6" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKDza7" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKDza8" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKDza9" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3Ez4" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKDzaa" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKDzav" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKDzac" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKDzJR" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKDzaI" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKEF33" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKEF34" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKEF35" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKEF36" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3Ez4" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKEF37" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKEF38" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKEF39" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKEF3a" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKEF3b" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF3KdX" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3KdY" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3KdZ" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3Ke0" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3Ez4" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3Ke1" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="lbcyKS9H8H" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3Ke3" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7C_wgEF3Ke4" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="lbcyKS9Fsr" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sMdX" role="lGtFl" />
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF3J_F" role="1SL9yI">
      <property role="TrG5h" value="invalidParametersWhenAddingBreakpoint" />
      <node concept="3cqZAl" id="7C_wgEF3J_G" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3J_H" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF3J_J" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3J_K" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF3J_L" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF3J_M" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="7C_wgEF3J_N" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF3J_O" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF3J_P" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                    <ref role="1Y3XeK" to="ez3t:~Module" resolve="Module" />
                    <node concept="3Tm1VV" id="7C_wgEF3J_Q" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF3J_R" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tm1VV" id="7C_wgEF3J_S" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF3J_T" role="3clF45" />
                      <node concept="37vLTG" id="7C_wgEF3J_U" role="3clF46">
                        <property role="TrG5h" value="binder" />
                        <node concept="3uibUv" id="7C_wgEF3J_V" role="1tU5fm">
                          <ref role="3uigEE" to="ez3t:~Binder" resolve="Binder" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="7C_wgEF3J_W" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF3J_X" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3J_Y" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3J_Z" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3JA0" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3J_U" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3JA1" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3JA2" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3JA3" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7C_wgEF3JA4" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7C_wgEF3JA5" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF3JA6" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3JA7" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3JA8" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3JA9" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3J_U" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3JAa" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3JAb" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3JAc" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF3JAd" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIbHf" resolve="TRBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKEF2Q" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKEF2R" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKEF2S" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKEF2T" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3J_U" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKEF2U" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKEF2V" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKEF2W" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKEF2X" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKEF2Y" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKDzK3" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKDzK4" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKDzK5" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKDzK6" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3J_U" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKDzK7" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKDzK8" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKDzK9" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKDzKa" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKDzKb" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="29so9VcmA1J" role="3cqZAp">
                          <node concept="2OqwBi" id="29so9VcmA1K" role="3clFbG">
                            <node concept="2OqwBi" id="29so9VcmA1L" role="2Oq$k0">
                              <node concept="37vLTw" id="29so9VcmA1M" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3J_U" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="29so9VcmA1N" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="lbcyKS9HU$" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="29so9VcmA1P" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="29so9VcmA1Q" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="lbcyKS9HFB" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3JAe" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JAf" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="7C_wgEF3JAg" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF3JAh" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63We" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3J_K" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF3JAj" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF3JAk" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3JAU" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3JAX" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3JAY" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3JAJ" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Pn" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JAf" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="7C_wgEF3JAP" role="2OqNvi">
                <ref role="37wK5l" to="u02k:4r78KUskfL_" resolve="add" />
                <node concept="10Nm6u" id="7C_wgEF3JAQ" role="37wK5m" />
                <node concept="10Nm6u" id="7C_wgEF3JAS" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3JB0" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3JB1" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3JB2" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3JB3" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63hS" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JAf" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="7C_wgEF3JB5" role="2OqNvi">
                <ref role="37wK5l" to="u02k:4r78KUskfL_" resolve="add" />
                <node concept="10Nm6u" id="7C_wgEF3JB6" role="37wK5m" />
                <node concept="Xl_RD" id="7C_wgEF3JBg" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3JB8" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3JB9" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3JBa" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3JBb" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63CK" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JAf" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="7C_wgEF3JBd" role="2OqNvi">
                <ref role="37wK5l" to="u02k:4r78KUskfL_" resolve="add" />
                <node concept="2ShNRf" id="7C_wgEF3JBh" role="37wK5m">
                  <node concept="1pGfFk" id="7C_wgEF3JBj" role="2ShVmc">
                    <ref role="37wK5l" to="u02k:30gDo8BIaPR" resolve="TRBreakpointLocationImpl" />
                    <node concept="Xl_RD" id="7C_wgEF3JBk" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                    <node concept="Xl_RD" id="7C_wgEF3JBs" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                </node>
                <node concept="10Nm6u" id="7C_wgEF3JBf" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF3JBT" role="1SL9yI">
      <property role="TrG5h" value="addValidBreakpoint" />
      <node concept="3cqZAl" id="7C_wgEF3JBU" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3JBV" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF3JCb" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JCc" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF3JCd" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF3JCe" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF3JCf" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF3JCg" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF3JCh" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                    <ref role="1Y3XeK" to="ez3t:~Module" resolve="Module" />
                    <node concept="3Tm1VV" id="7C_wgEF3JCi" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF3JCj" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tm1VV" id="7C_wgEF3JCk" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF3JCl" role="3clF45" />
                      <node concept="37vLTG" id="7C_wgEF3JCm" role="3clF46">
                        <property role="TrG5h" value="binder" />
                        <node concept="3uibUv" id="7C_wgEF3JCn" role="1tU5fm">
                          <ref role="3uigEE" to="ez3t:~Binder" resolve="Binder" />
                        </node>
                      </node>
                      <node concept="3clFbS" id="7C_wgEF3JCo" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF3JCp" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3JCq" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3JCr" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3JCs" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3JCm" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3JCt" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3JCu" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3JCv" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7C_wgEF3JCw" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7C_wgEF3JCx" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF3JCy" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF3JCz" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF3JC$" role="2Oq$k0">
                              <node concept="37vLTw" id="7C_wgEF3JC_" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3JCm" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7C_wgEF3JCA" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF3JCB" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF3JCC" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF3JCD" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIbHf" resolve="TRBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMtk" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="29so9VcmDZ8" role="3cqZAp">
                          <node concept="2OqwBi" id="29so9VcmDZ9" role="3clFbG">
                            <node concept="2OqwBi" id="29so9VcmDZa" role="2Oq$k0">
                              <node concept="37vLTw" id="29so9VcmDZb" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3JCm" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="29so9VcmDZc" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="lbcyKS9Itu" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="29so9VcmDZe" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="29so9VcmDZf" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="lbcyKS9J9a" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKEBtp" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKEBtq" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKEBtr" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKEBts" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3JCm" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKEBtt" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKEBtG" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKEBtv" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKEBtw" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKEBtQ" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKDzKg" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKDzKh" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKDzKi" role="2Oq$k0">
                              <node concept="37vLTw" id="7W4QWPKDzKj" role="2Oq$k0">
                                <ref role="3cqZAo" node="7C_wgEF3JCm" resolve="binder" />
                              </node>
                              <node concept="liA8E" id="7W4QWPKDzKk" role="2OqNvi">
                                <ref role="37wK5l" to="ez3t:~Binder.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKDzKl" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKDzKm" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKDzKn" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKDzKo" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sMtl" role="lGtFl" />
        </node>
        <node concept="3clFbH" id="7W4QWPKEBuv" role="3cqZAp" />
        <node concept="3clFbH" id="7C_wgEF3JO3" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF3JKp" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JKq" role="3cpWs9">
            <property role="TrG5h" value="repositoryAccessorMock" />
            <node concept="3uibUv" id="7C_wgEF3JKr" role="1tU5fm">
              <ref role="3uigEE" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF3JKG" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63fo" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JCc" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF3JKM" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF3JKR" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF3Ed9" resolve="ITRRepositoryAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF3JLD" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3JLZ" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF3JLI" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF3JLh" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63dD" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF3JKq" resolve="repositoryAccessorMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF3JLn" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:7C_wgEF3EdL" resolve="getNode" />
                  <node concept="2YIFZM" id="7C_wgEF3JV3" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF3JV4" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF3JV5" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF3JV6" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF3JM4" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="2ShNRf" id="7W4QWPKECKe" role="37wK5m">
                <node concept="1pGfFk" id="7W4QWPKECKi" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:57r6BQpGnfH" resolve="TNodeProxy" />
                  <node concept="2ShNRf" id="7C_wgEF3JMw" role="37wK5m">
                    <node concept="3zrR0B" id="7C_wgEF3JMy" role="2ShVmc">
                      <node concept="3Tqbb2" id="7C_wgEF3JMz" role="3zrR0E">
                        <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3JRG" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JRH" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationMock" />
            <node concept="3uibUv" id="7C_wgEF3JRI" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaLK" resolve="ITRBreakpointLocation" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF3JJa" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF3JJc" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaLK" resolve="ITRBreakpointLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF3JRO" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3JSZ" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF3JSr" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF3JRT" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF3JS7" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63rz" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF3JRH" resolve="breakpointLocationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF3JSe" role="2OqNvi">
                    <ref role="37wK5l" to="u02k:30gDo8BIaLQ" resolve="getFQModelName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF3JSw" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF3JSx" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF3JT6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF3JSy" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3JTj" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF3JSz" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF3JS$" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF3JS_" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63gC" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF3JRH" resolve="breakpointLocationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF3JSB" role="2OqNvi">
                    <ref role="37wK5l" to="u02k:30gDo8BIaLM" resolve="getNodeID" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF3JSC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF3JSD" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF3JTn" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF3JSJ" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKEBu$" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKEBu_" role="3cpWs9">
            <property role="TrG5h" value="traceWrapperMock" />
            <node concept="3uibUv" id="7W4QWPKEBuA" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKEBuV" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Q$" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JCc" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKEBv1" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKEBv3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKEBwb" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKEBz5" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKEBz6" role="3cpWs9">
            <property role="TrG5h" value="temporalBreakpointCreatorMock" />
            <node concept="3uibUv" id="7W4QWPKEBz7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKEBzt" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh639E" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3JCc" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKEBzz" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKEBzI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEBzS" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKEB$e" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63mJ" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKEBz6" resolve="temporalBreakpointCreatorMock" />
            </node>
            <node concept="liA8E" id="7W4QWPKEB$k" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
              <node concept="2YIFZM" id="7W4QWPKEB$m" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7W4QWPKEB$o" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                </node>
              </node>
              <node concept="2YIFZM" id="7W4QWPKEB$_" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKEBzM" role="3cqZAp" />
        <node concept="3cpWs8" id="7W4QWPKEBwP" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKEBwQ" role="3cpWs9">
            <property role="TrG5h" value="lineLocationMock" />
            <node concept="3uibUv" id="7W4QWPKEBwR" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7W4QWPKD_wn" resolve="ILineLocation" />
            </node>
            <node concept="2YIFZM" id="7W4QWPKEBwV" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7W4QWPKEBwX" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7W4QWPKD_wn" resolve="ILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2cOIoslapbG" role="3cqZAp">
          <node concept="3cpWsn" id="2cOIoslapbH" role="3cpWs9">
            <property role="TrG5h" value="lineLoc" />
            <node concept="_YKpA" id="2cOIoslapbI" role="1tU5fm">
              <node concept="3uibUv" id="2cOIoslapbK" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7W4QWPKD_wn" resolve="ILineLocation" />
              </node>
            </node>
            <node concept="2ShNRf" id="2cOIoslapbM" role="33vP2m">
              <node concept="Tc6Ow" id="2cOIoslapbO" role="2ShVmc">
                <node concept="3uibUv" id="2cOIoslapbQ" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:7W4QWPKD_wn" resolve="ILineLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2cOIoslapbS" role="3cqZAp">
          <node concept="2OqwBi" id="2cOIoslapca" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63UQ" role="2Oq$k0">
              <ref role="3cqZAo" node="2cOIoslapbH" resolve="lineLoc" />
            </node>
            <node concept="TSZUe" id="2cOIoslapcg" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63EX" role="25WWJ7">
                <ref role="3cqZAo" node="7W4QWPKEBwQ" resolve="lineLocationMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEBy8" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKEByu" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKEByb" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKEBxo" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63tK" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKEBwQ" resolve="lineLocationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKEBy5" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:7W4QWPKD_wp" resolve="getFileName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKEByz" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="7W4QWPKEBy$" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEBy_" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKEByA" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKEByB" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKEByC" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63P0" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKEBwQ" resolve="lineLocationMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKEByE" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:7W4QWPKD_wu" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKEByF" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKEByK" role="37wK5m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEBvC" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKEBw2" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKEBvF" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKEBvv" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63mz" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKEBu_" resolve="traceWrapperMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKEBv_" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2cOIosl6Wco" resolve="getLineLocations" />
                  <node concept="2YIFZM" id="7W4QWPKEBvH" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7W4QWPKEBvJ" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="42zGBUYh_f6" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="42zGBUYhD6h" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SNode" resolve="SNode" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKEBwa" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63sy" role="37wK5m">
                <ref role="3cqZAo" node="2cOIoslapbH" resolve="lineLoc" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKEBv7" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF3JVu" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF3JVz" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63t9" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF3JKq" resolve="repositoryAccessorMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF3JTo" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF3JVC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Qd" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF3JRH" resolve="breakpointLocationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF3JF7" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF3JFa" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63bO" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKEBwQ" resolve="lineLocationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEB$C" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKEB$D" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63$D" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKEBz6" resolve="temporalBreakpointCreatorMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEByO" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKEByP" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh637_" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKEBu_" resolve="traceWrapperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF3JVE" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF3JJN" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JJO" role="3cpWs9">
            <property role="TrG5h" value="MARKER_ID" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF3JJP" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF3JJT" role="33vP2m">
              <property role="Xl_RC" value="M1" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3JCE" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3JCF" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="7C_wgEF3JDB" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIbHf" resolve="TRBreakpointManagerImpl" />
            </node>
            <node concept="10QFUN" id="7C_wgEF3JDE" role="33vP2m">
              <node concept="3uibUv" id="7C_wgEF3JDK" role="10QFUM">
                <ref role="3uigEE" to="u02k:30gDo8BIbHf" resolve="TRBreakpointManagerImpl" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF3JCH" role="10QFUP">
                <node concept="37vLTw" id="4WqJ5Sh63xO" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF3JCc" resolve="injector" />
                </node>
                <node concept="liA8E" id="7C_wgEF3JCJ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="7C_wgEF3JCK" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKEzuP" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKEAPN" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF3JIH" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63lN" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF3JCF" resolve="breakpointManager" />
            </node>
            <node concept="liA8E" id="7C_wgEF3JIN" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BIbIl" resolve="add" />
              <node concept="37vLTw" id="4WqJ5Sh63vp" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF3JRH" resolve="breakpointLocationMock" />
              </node>
              <node concept="37vLTw" id="4WqJ5Sh63Et" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF3JJO" resolve="MARKER_ID" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF3JCY" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF3JHZ" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF3JI2" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63az" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKEBu_" resolve="traceWrapperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKEByV" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKEByW" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh637I" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKEBz6" resolve="temporalBreakpointCreatorMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4DNq">
    <property role="TrG5h" value="MapperListener" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="1LZb2c" id="7C_wgEF4JKo" role="1SL9yI">
      <property role="TrG5h" value="createInstance" />
      <node concept="3cqZAl" id="7C_wgEF4JKp" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4JKq" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF4JKr" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4JKF" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4JKs" role="2Oq$k0">
              <node concept="2WthIp" id="7C_wgEF4JKt" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4JKu" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4JHf" resolve="injectDependencies" />
                <node concept="2OqwBi" id="7C_wgEF4JXo" role="2XxRq1">
                  <node concept="2WthIp" id="7C_wgEF4JXp" role="2Oq$k0" />
                  <node concept="2XshWL" id="7C_wgEF4JXq" role="2OqNvi">
                    <ref role="2WH_rO" node="7C_wgEF4JL6" resolve="createListenerMocks" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4JKL" role="2OqNvi">
              <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
              <node concept="3VsKOn" id="69Byf55Pjk0" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4JKU" role="1SL9yI">
      <property role="TrG5h" value="verifyEventsReceived" />
      <node concept="3cqZAl" id="7C_wgEF4JKV" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4JKW" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4JYi" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4JYj" role="3cpWs9">
            <property role="TrG5h" value="listenerMocks" />
            <node concept="3uibUv" id="7C_wgEF4JYk" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7C_wgEF4JYm" role="11_B2D">
                <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
              </node>
            </node>
            <node concept="2OqwBi" id="7C_wgEF4JYo" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4JYp" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4JYq" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4JL6" resolve="createListenerMocks" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4JKZ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4JL0" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4JL1" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4JYt" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4JYu" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4JYv" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4JHf" resolve="injectDependencies" />
                <node concept="37vLTw" id="4WqJ5Sh63uA" role="2XxRq1">
                  <ref role="3cqZAo" node="7C_wgEF4JYj" resolve="listenerMocks" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4K0b" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4K0c" role="3cpWs9">
            <property role="TrG5h" value="mapperListener" />
            <node concept="3uibUv" id="69Byf55OYJI" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4K0y" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Af" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4JL0" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4K0C" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55OYJO" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="7C_wgEF4JYC" role="3cqZAp">
          <node concept="2GrKxI" id="7C_wgEF4JYD" role="2Gsz3X">
            <property role="TrG5h" value="listenerMock" />
          </node>
          <node concept="37vLTw" id="4WqJ5Sh63jK" role="2GsD0m">
            <ref role="3cqZAo" node="7C_wgEF4JYj" resolve="listenerMocks" />
          </node>
          <node concept="3clFbS" id="7C_wgEF4JYF" role="2LFqv$">
            <node concept="3clFbF" id="7C_wgEF4JYQ" role="3cqZAp">
              <node concept="2OqwBi" id="7C_wgEF4JZa" role="3clFbG">
                <node concept="2GrUjf" id="7C_wgEF4JYR" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="7C_wgEF4JYD" resolve="listenerMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4JZg" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:2FRp1z37KTe" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7C_wgEF4JZi" role="3cqZAp">
              <node concept="2OqwBi" id="7C_wgEF4JZB" role="3clFbG">
                <node concept="2YIFZM" id="7C_wgEF4JZk" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                </node>
                <node concept="liA8E" id="7C_wgEF4JZH" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                  <node concept="3cmrfG" id="7C_wgEF4JZI" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7C_wgEF4JZK" role="3cqZAp">
              <node concept="2YIFZM" id="7C_wgEF4JZM" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="2GrUjf" id="7C_wgEF4JZN" role="37wK5m">
                  <ref role="2Gs0qQ" node="7C_wgEF4JYD" resolve="listenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4K0I" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4K12" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63at" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4K0c" resolve="mapperListener" />
            </node>
            <node concept="liA8E" id="7C_wgEF4K19" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="7C_wgEF4JZQ" role="3cqZAp">
          <node concept="2GrKxI" id="7C_wgEF4JZR" role="2Gsz3X">
            <property role="TrG5h" value="listenerMock" />
          </node>
          <node concept="37vLTw" id="4WqJ5Sh63N2" role="2GsD0m">
            <ref role="3cqZAo" node="7C_wgEF4JYj" resolve="listenerMocks" />
          </node>
          <node concept="3clFbS" id="7C_wgEF4JZT" role="2LFqv$">
            <node concept="3clFbF" id="7C_wgEF4K03" role="3cqZAp">
              <node concept="2YIFZM" id="7C_wgEF4K06" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
                <node concept="2GrUjf" id="7C_wgEF4K07" role="37wK5m">
                  <ref role="2Gs0qQ" node="7C_wgEF4JZR" resolve="listenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="7C_wgEF4JHf" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="7C_wgEF4JWk" role="3clF46">
        <property role="TrG5h" value="listeners" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="7C_wgEF4JWx" role="1tU5fm">
          <ref role="3uigEE" to="33ny:~List" resolve="List" />
          <node concept="3uibUv" id="7C_wgEF4JWy" role="11_B2D">
            <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="7C_wgEF4JHj" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4JHh" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF4JHk" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4JHm" role="3clFbG">
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <node concept="2ShNRf" id="7C_wgEF4JHn" role="37wK5m">
              <node concept="YeOm9" id="7C_wgEF4JHt" role="2ShVmc">
                <node concept="1Y3b0j" id="7C_wgEF4JHu" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="7C_wgEF4JHv" role="1B3o_S" />
                  <node concept="3clFb_" id="7C_wgEF4JHw" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="7C_wgEF4JHx" role="1B3o_S" />
                    <node concept="3cqZAl" id="7C_wgEF4JHy" role="3clF45" />
                    <node concept="3clFbS" id="7C_wgEF4JHz" role="3clF47">
                      <node concept="3clFbF" id="7C_wgEF4JHB" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4JHZ" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh633b" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="69Byf55OYJC" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4JI5" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="7C_wgEF4JIi" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaNk" resolve="TRMapperListener" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmWnFy" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmWnFZ" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh632Q" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="69Byf55PinF" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmWnG8" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmWnGa" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="69Byf55PinM" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs8" id="4iuDOPeNwTz" role="3cqZAp">
                        <node concept="3cpWsn" id="4iuDOPeNwT$" role="3cpWs9">
                          <property role="TrG5h" value="multibinder" />
                          <node concept="3uibUv" id="4iuDOPeNwT_" role="1tU5fm">
                            <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
                            <node concept="3uibUv" id="7C_wgEF3$Ni" role="11_B2D">
                              <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                            </node>
                          </node>
                          <node concept="2YIFZM" id="4iuDOPeNwTB" role="33vP2m">
                            <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
                            <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
                            <node concept="1rXfSq" id="4WqJ5Sh62Wj" role="37wK5m">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
                            </node>
                            <node concept="3VsKOn" id="7C_wgEF3$Nw" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="2Gpval" id="7C_wgEF4JXe" role="3cqZAp">
                        <node concept="2GrKxI" id="7C_wgEF4JXf" role="2Gsz3X">
                          <property role="TrG5h" value="listener" />
                        </node>
                        <node concept="37vLTw" id="7C_wgEF4JXi" role="2GsD0m">
                          <ref role="3cqZAo" node="7C_wgEF4JWk" resolve="listeners" />
                        </node>
                        <node concept="3clFbS" id="7C_wgEF4JXh" role="2LFqv$">
                          <node concept="3clFbF" id="7C_wgEF3$NE" role="3cqZAp">
                            <node concept="2OqwBi" id="7C_wgEF3$Qy" role="3clFbG">
                              <node concept="2OqwBi" id="7C_wgEF3$NU" role="2Oq$k0">
                                <node concept="37vLTw" id="4WqJ5Sh63PY" role="2Oq$k0">
                                  <ref role="3cqZAo" node="4iuDOPeNwT$" resolve="multibinder" />
                                </node>
                                <node concept="liA8E" id="7C_wgEF3$Pb" role="2OqNvi">
                                  <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF3$QC" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2GrUjf" id="7C_wgEF4JXm" role="37wK5m">
                                  <ref role="2Gs0qQ" node="7C_wgEF4JXf" resolve="listener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="7C_wgEF4JL6" role="1qtyYc">
      <property role="TrG5h" value="createListenerMocks" />
      <node concept="3uibUv" id="7C_wgEF4JL9" role="3clF45">
        <ref role="3uigEE" to="33ny:~List" resolve="List" />
        <node concept="3uibUv" id="7C_wgEF4JLb" role="11_B2D">
          <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
        </node>
      </node>
      <node concept="3clFbS" id="7C_wgEF4JL8" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4JLq" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4JLr" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="3uibUv" id="7C_wgEF4JLs" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7C_wgEF4JLu" role="11_B2D">
                <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
              </node>
            </node>
            <node concept="2ShNRf" id="7C_wgEF4JLw" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF4JLy" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7C_wgEF4JL$" role="1pMfVU">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="7C_wgEF4JLF" role="3cqZAp">
          <node concept="3clFbS" id="7C_wgEF4JLG" role="2LFqv$">
            <node concept="3clFbF" id="7C_wgEF4JMi" role="3cqZAp">
              <node concept="2OqwBi" id="7C_wgEF4JMw" role="3clFbG">
                <node concept="37vLTw" id="4WqJ5Sh63Lg" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4JLr" resolve="result" />
                </node>
                <node concept="liA8E" id="7C_wgEF4JMA" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                  <node concept="2YIFZM" id="7C_wgEF4JMD" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="7C_wgEF4JWf" role="37wK5m">
                      <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="7C_wgEF4JLI" role="1Duv9x">
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="7C_wgEF4JLJ" role="1tU5fm" />
            <node concept="3cmrfG" id="7C_wgEF4JLL" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="7C_wgEF4JLZ" role="1Dwp0S">
            <node concept="3cmrfG" id="7C_wgEF4JM2" role="3uHU7w">
              <property role="3cmrfH" value="5" />
            </node>
            <node concept="37vLTw" id="4WqJ5Sh63RU" role="3uHU7B">
              <ref role="3cqZAo" node="7C_wgEF4JLI" resolve="index" />
            </node>
          </node>
          <node concept="3uNrnE" id="7C_wgEF4JMg" role="1Dwrff">
            <node concept="37vLTw" id="4WqJ5Sh63yt" role="2$L3a6">
              <ref role="3cqZAo" node="7C_wgEF4JLI" resolve="index" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF4JLC" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63C2" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF4JLr" resolve="result" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4$DT">
    <property role="TrG5h" value="ProgramState" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF4$RC" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF4$RF" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4$RE" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF4$RG" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4$RI" role="3clFbG">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="7C_wgEF4$RJ" role="37wK5m">
              <node concept="YeOm9" id="7C_wgEF4$RP" role="2ShVmc">
                <node concept="1Y3b0j" id="7C_wgEF4$RQ" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="7C_wgEF4$RR" role="1B3o_S" />
                  <node concept="3clFb_" id="7C_wgEF4$RS" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="7C_wgEF4$RT" role="1B3o_S" />
                    <node concept="3cqZAl" id="7C_wgEF4$RU" role="3clF45" />
                    <node concept="3clFbS" id="7C_wgEF4$RV" role="3clF47">
                      <node concept="3clFbF" id="7C_wgEF4$RY" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4$Sm" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh635c" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF4$S5" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4$Su" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4$Sw" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4$S_" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF4$SF" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4$SY" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh62Vn" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF4$SI" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4$T4" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="65KmIn8suFO" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BMpMo" resolve="TRPogramStateImpl" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="4ktgw6PNEea" role="3cqZAp">
                        <node concept="2OqwBi" id="4ktgw6PNEeb" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh62RX" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="69Byf55Pim$" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                            </node>
                          </node>
                          <node concept="liA8E" id="4ktgw6PNEee" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="4ktgw6PNEef" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="69Byf55PimI" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLEn" role="lGtFl" />
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4$Rj" role="1SL9yI">
      <property role="TrG5h" value="retrieveCurrentNode" />
      <node concept="3cqZAl" id="7C_wgEF4$Rk" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4$Rl" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDsqsnk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4$Tg" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4$Th" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="7C_wgEF4$Ti" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4$Tk" role="33vP2m">
                <node concept="2WthIp" id="7C_wgEF4$Tl" role="2Oq$k0" />
                <node concept="2XshWL" id="7C_wgEF4$Tm" role="2OqNvi">
                  <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4$Tr" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4$Ts" role="3cpWs9">
              <property role="TrG5h" value="programState" />
              <node concept="3uibUv" id="7C_wgEF4$Tt" role="1tU5fm">
                <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4$TG" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63CQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4$Th" resolve="injector" />
                </node>
                <node concept="liA8E" id="7C_wgEF4$TM" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="7C_wgEF4$TO" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4$TX" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4$TY" role="3cpWs9">
              <property role="TrG5h" value="traceAccessorMock" />
              <node concept="3uibUv" id="7C_wgEF4$TZ" role="1tU5fm">
                <ref role="3uigEE" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4$Uf" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63Bo" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4$Th" resolve="injector" />
                </node>
                <node concept="liA8E" id="7C_wgEF4$Ul" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="7C_wgEF4$Un" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1ZspCbdiUfh" role="8Wnug">
            <node concept="3cpWsn" id="1ZspCbdiUfi" role="3cpWs9">
              <property role="TrG5h" value="programStatePovider" />
              <node concept="3uibUv" id="69Byf55Pge2" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
              </node>
              <node concept="2OqwBi" id="1ZspCbdiUfk" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63aJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4$Th" resolve="injector" />
                </node>
                <node concept="liA8E" id="1ZspCbdiUfm" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="69Byf55Pge8" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsno" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmWCMG" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4_Ve" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4_Vf" role="3cpWs9">
              <property role="TrG5h" value="locationMock" />
              <node concept="3uibUv" id="7C_wgEF4_Vg" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4_Vl" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4_Vq" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_VB" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4_We" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4_VH" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4_VV" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63lc" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4_Vf" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4_W1" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4_Wj" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF4_Wk" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_Wo" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4_Wp" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4_Wq" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4_Wr" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63pF" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4_Vf" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4_Wt" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4_Wu" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF4_Wv" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsns" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_Wy" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4_Wz" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4_W$" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4_W_" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Ww" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4_Vf" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4_WB" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4_WC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="7C_wgEF4_WK" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4_Wl" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4_X2" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4_X3" role="3cpWs9">
              <property role="TrG5h" value="stackFrameMock" />
              <node concept="3uibUv" id="7C_wgEF4_X4" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4_X9" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4_YL" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_XE" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4_Yp" role="3clFbG">
              <node concept="2OqwBi" id="7C_wgEF4_XX" role="2Oq$k0">
                <node concept="2YIFZM" id="7C_wgEF4_XK" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="7C_wgEF4_Xw" role="37wK5m">
                    <node concept="37vLTw" id="4WqJ5Sh63Cx" role="2Oq$k0">
                      <ref role="3cqZAo" node="7C_wgEF4_X3" resolve="stackFrameMock" />
                    </node>
                    <node concept="liA8E" id="7C_wgEF4_XA" role="2OqNvi">
                      <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7C_wgEF4_Y2" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="4WqJ5Sh63nd" role="37wK5m">
                    <ref role="3cqZAo" node="7C_wgEF4_Vf" resolve="locationMock" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4_Yv" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4_Y4" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4_UB" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4_UC" role="3cpWs9">
              <property role="TrG5h" value="stackFrames" />
              <node concept="3uibUv" id="7C_wgEF4_UD" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3uibUv" id="7C_wgEF4_UH" role="11_B2D">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
              <node concept="2ShNRf" id="7C_wgEF4_UJ" role="33vP2m">
                <node concept="1pGfFk" id="7C_wgEF4_UL" role="2ShVmc">
                  <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                  <node concept="3uibUv" id="7C_wgEF4_UZ" role="1pMfVU">
                    <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsny" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_YR" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4_Z7" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63H3" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4_UC" resolve="stackFrames" />
              </node>
              <node concept="liA8E" id="7C_wgEF4_Zd" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                <node concept="37vLTw" id="4WqJ5Sh63JD" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4_X3" resolve="stackFrameMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4_Zf" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsn$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4$WC" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4$WD" role="3cpWs9">
              <property role="TrG5h" value="threadMock" />
              <node concept="3uibUv" id="7C_wgEF4$WE" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4$WJ" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4$WL" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsn_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_ZC" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4A0w" role="3clFbG">
              <node concept="2OqwBi" id="7C_wgEF4A0d" role="2Oq$k0">
                <node concept="2YIFZM" id="7C_wgEF4_ZE" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="7C_wgEF4_ZU" role="37wK5m">
                    <node concept="37vLTw" id="4WqJ5Sh63l6" role="2Oq$k0">
                      <ref role="3cqZAo" node="7C_wgEF4$WD" resolve="threadMock" />
                    </node>
                    <node concept="liA8E" id="7C_wgEF4A00" role="2OqNvi">
                      <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7C_wgEF4A0i" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="4WqJ5Sh63KV" role="37wK5m">
                    <ref role="3cqZAo" node="7C_wgEF4_UC" resolve="stackFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4A0A" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4_Z_" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4A2q" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4A2r" role="3cpWs9">
              <property role="TrG5h" value="someNode" />
              <node concept="3Tqbb2" id="7C_wgEF4A2s" role="1tU5fm" />
              <node concept="2ShNRf" id="7C_wgEF4$VC" role="33vP2m">
                <node concept="3zrR0B" id="7C_wgEF4$VE" role="2ShVmc">
                  <node concept="3Tqbb2" id="7C_wgEF4$VF" role="3zrR0E">
                    <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4$Vh" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4$Vy" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4$Vl" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4$UI" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Vh" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4$TY" resolve="traceAccessorMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4$UO" role="2OqNvi">
                    <ref role="37wK5l" to="u02k:7C_wgEF4$O$" resolve="getNode" />
                    <node concept="2YIFZM" id="7C_wgEF4$UQ" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4$US" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4$V0" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4$V1" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4$Vd" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4$VB" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Gd" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4A2r" resolve="someNode" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1ZspCbdiUhp" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmWCNR" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmWCOe" role="3clFbG">
              <node concept="2YIFZM" id="2pJszzmWCNV" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="2pJszzmWCNI" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh637O" role="2Oq$k0">
                    <ref role="3cqZAo" node="1ZspCbdiUfi" resolve="programStatePovider" />
                  </node>
                  <node concept="liA8E" id="2pJszzmWCNO" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmWCOj" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63kU" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4$WD" resolve="threadMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmWCNn" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_WT" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4_WY" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63Gv" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4_Vf" resolve="locationMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4_Y7" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4_Y8" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63uM" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4_X3" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4$VI" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4$VM" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63Jn" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4$TY" resolve="traceAccessorMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4Blz" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4Bl_" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63WJ" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4$WD" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmWCOo" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmWCOr" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63vj" role="37wK5m">
                <ref role="3cqZAo" node="1ZspCbdiUfi" resolve="programStatePovider" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4$VO" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4A1q" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4A2g" role="3clFbG">
              <node concept="1eOMI4" id="7C_wgEF4A23" role="2Oq$k0">
                <node concept="10QFUN" id="7C_wgEF4A1N" role="1eOMHV">
                  <node concept="37vLTw" id="4WqJ5Sh63VZ" role="10QFUP">
                    <ref role="3cqZAo" node="7C_wgEF4$Ts" resolve="programState" />
                  </node>
                  <node concept="3uibUv" id="7C_wgEF4HN0" role="10QFUM">
                    <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4A2l" role="2OqNvi">
                <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="2Hmddi" id="7C_wgEF4$VY" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4$Wf" role="2Hmdds">
              <node concept="37vLTw" id="4WqJ5Sh63he" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4$Ts" resolve="programState" />
              </node>
              <node concept="liA8E" id="7C_wgEF4$Wn" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF4$DJ" resolve="getNodeWhereSuspended" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4$Rp" role="1SL9yI">
      <property role="TrG5h" value="tryingToRetrieveNodeInInvalidState" />
      <node concept="3cqZAl" id="7C_wgEF4$Rq" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4$Rr" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4C6B" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4C6C" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4C6D" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4C6E" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4C6F" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4C6G" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4C6H" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4C6I" role="3cpWs9">
            <property role="TrG5h" value="programState" />
            <node concept="3uibUv" id="7C_wgEF4C6J" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4C6K" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63fx" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4C6C" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4C6M" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4C6N" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="1ZspCbdiYqm" role="3cqZAp">
          <node concept="3cpWsn" id="1ZspCbdiYqn" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="69Byf55PgdP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="1ZspCbdiYqp" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63wq" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4C6C" resolve="injector" />
              </node>
              <node concept="liA8E" id="1ZspCbdiYqr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PgdV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiYpq" role="3cqZAp" />
        <node concept="3cpWs8" id="1ZspCbdiZSF" role="3cqZAp">
          <node concept="3cpWsn" id="1ZspCbdiZSG" role="3cpWs9">
            <property role="TrG5h" value="nullThread" />
            <node concept="3uibUv" id="1ZspCbdiZSH" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="10Nm6u" id="1ZspCbdiZSJ" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbF" id="1ZspCbdiYs_" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiYsU" role="3clFbG">
            <node concept="2YIFZM" id="1ZspCbdiYsB" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="1ZspCbdiYqf" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63PS" role="2Oq$k0">
                  <ref role="3cqZAo" node="1ZspCbdiYqn" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="1ZspCbdiYqJ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="1ZspCbdiYsZ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63GC" role="37wK5m">
                <ref role="3cqZAo" node="1ZspCbdiZSG" resolve="nullThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiYt1" role="3cqZAp" />
        <node concept="3clFbF" id="1ZspCbdiYtb" role="3cqZAp">
          <node concept="2YIFZM" id="1ZspCbdiYtc" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63r5" role="37wK5m">
              <ref role="3cqZAo" node="1ZspCbdiYqn" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiYpr" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4C6X" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4C7b" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:7C_wgEF3Rqk" resolve="TRDebuggerNotSuspendedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4C7c" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4C6T" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63c9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4C6I" resolve="programState" />
              </node>
              <node concept="liA8E" id="7C_wgEF4C6V" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF4$DJ" resolve="getNodeWhereSuspended" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4$Rv" role="1SL9yI">
      <property role="TrG5h" value="noTracesAvailable" />
      <node concept="3cqZAl" id="7C_wgEF4$Rw" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4$Rx" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDsqsnO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C7d" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C7e" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="7C_wgEF4C7f" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4C7g" role="33vP2m">
                <node concept="2WthIp" id="7C_wgEF4C7h" role="2Oq$k0" />
                <node concept="2XshWL" id="7C_wgEF4C7i" role="2OqNvi">
                  <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C7j" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C7k" role="3cpWs9">
              <property role="TrG5h" value="programState" />
              <node concept="3uibUv" id="7C_wgEF4C7l" role="1tU5fm">
                <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4C7m" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63BT" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4C7e" resolve="injector" />
                </node>
                <node concept="liA8E" id="7C_wgEF4C7o" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="7C_wgEF4C7p" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C7A" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C7B" role="3cpWs9">
              <property role="TrG5h" value="traceAccessorMock" />
              <node concept="3uibUv" id="7C_wgEF4C7C" role="1tU5fm">
                <ref role="3uigEE" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
              </node>
              <node concept="2OqwBi" id="7C_wgEF4C7D" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63m8" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4C7e" resolve="injector" />
                </node>
                <node concept="liA8E" id="7C_wgEF4C7F" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="7C_wgEF4C7G" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmWCOt" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmWCOu" role="3cpWs9">
              <property role="TrG5h" value="programStatePovider" />
              <node concept="3uibUv" id="69Byf55PgdD" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
              </node>
              <node concept="2OqwBi" id="2pJszzmWCOw" role="33vP2m">
                <node concept="37vLTw" id="4WqJ5Sh63E_" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4C7e" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmWCOy" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="69Byf55PgdJ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C7z" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C8c" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C8d" role="3cpWs9">
              <property role="TrG5h" value="nullNode" />
              <node concept="3Tqbb2" id="7C_wgEF4C8e" role="1tU5fm" />
              <node concept="10Nm6u" id="7C_wgEF4C8w" role="33vP2m" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C8i" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C8j" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4C8k" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4C8l" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63d8" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4C7B" resolve="traceAccessorMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4C8n" role="2OqNvi">
                    <ref role="37wK5l" to="u02k:7C_wgEF4$O$" resolve="getNode" />
                    <node concept="2YIFZM" id="7C_wgEF4C8o" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4C8p" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4C8q" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4C8r" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4C8s" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C8t" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63jW" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4C8d" resolve="nullNode" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C8b" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C8y" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C8z" role="3cpWs9">
              <property role="TrG5h" value="locationMock" />
              <node concept="3uibUv" id="7C_wgEF4C8$" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4C8_" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4C8A" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C8B" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C8C" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4C8D" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4C8E" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63aS" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4C8z" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4C8G" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C8H" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF4C8I" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C8J" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C8K" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4C8L" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4C8M" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63ot" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4C8z" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4C8O" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C8P" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7C_wgEF4C8Q" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsnZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C8R" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C8S" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4C8T" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4C8U" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63n4" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4C8z" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4C8W" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C8X" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="7C_wgEF4C8Y" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C8Z" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C90" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C91" role="3cpWs9">
              <property role="TrG5h" value="stackFrameMock" />
              <node concept="3uibUv" id="7C_wgEF4C92" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4C93" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4C94" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C95" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C96" role="3clFbG">
              <node concept="2OqwBi" id="7C_wgEF4C97" role="2Oq$k0">
                <node concept="2YIFZM" id="7C_wgEF4C98" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="7C_wgEF4C99" role="37wK5m">
                    <node concept="37vLTw" id="4WqJ5Sh63Ci" role="2Oq$k0">
                      <ref role="3cqZAo" node="7C_wgEF4C91" resolve="stackFrameMock" />
                    </node>
                    <node concept="liA8E" id="7C_wgEF4C9b" role="2OqNvi">
                      <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7C_wgEF4C9c" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="4WqJ5Sh63Th" role="37wK5m">
                    <ref role="3cqZAo" node="7C_wgEF4C8z" resolve="locationMock" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C9e" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C9f" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C9g" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C9h" role="3cpWs9">
              <property role="TrG5h" value="stackFrames" />
              <node concept="3uibUv" id="7C_wgEF4C9i" role="1tU5fm">
                <ref role="3uigEE" to="33ny:~List" resolve="List" />
                <node concept="3uibUv" id="7C_wgEF4C9j" role="11_B2D">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
              <node concept="2ShNRf" id="7C_wgEF4C9k" role="33vP2m">
                <node concept="1pGfFk" id="7C_wgEF4C9l" role="2ShVmc">
                  <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                  <node concept="3uibUv" id="7C_wgEF4C9m" role="1pMfVU">
                    <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C9n" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C9o" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63c0" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4C9h" resolve="stackFrames" />
              </node>
              <node concept="liA8E" id="7C_wgEF4C9q" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.add(java.lang.Object):boolean" resolve="add" />
                <node concept="37vLTw" id="4WqJ5Sh63zg" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4C91" resolve="stackFrameMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C9s" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C9t" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C9u" role="3cpWs9">
              <property role="TrG5h" value="threadMock" />
              <node concept="3uibUv" id="7C_wgEF4C9v" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
              <node concept="2YIFZM" id="7C_wgEF4C9w" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7C_wgEF4C9x" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C9y" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C9z" role="3clFbG">
              <node concept="2OqwBi" id="7C_wgEF4C9$" role="2Oq$k0">
                <node concept="2YIFZM" id="7C_wgEF4C9_" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="7C_wgEF4C9A" role="37wK5m">
                    <node concept="37vLTw" id="4WqJ5Sh63$G" role="2Oq$k0">
                      <ref role="3cqZAo" node="7C_wgEF4C9u" resolve="threadMock" />
                    </node>
                    <node concept="liA8E" id="7C_wgEF4C9C" role="2OqNvi">
                      <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7C_wgEF4C9D" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="4WqJ5Sh63Gg" role="37wK5m">
                    <ref role="3cqZAo" node="7C_wgEF4C9h" resolve="stackFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C9F" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqso9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C9G" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="7C_wgEF4C9H" role="8Wnug">
            <node concept="3cpWsn" id="7C_wgEF4C9I" role="3cpWs9">
              <property role="TrG5h" value="someNode" />
              <node concept="3Tqbb2" id="7C_wgEF4C9J" role="1tU5fm" />
              <node concept="2ShNRf" id="7C_wgEF4C9K" role="33vP2m">
                <node concept="3zrR0B" id="7C_wgEF4C9L" role="2ShVmc">
                  <node concept="3Tqbb2" id="7C_wgEF4C9M" role="3zrR0E">
                    <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsob" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4C9N" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4C9O" role="3clFbG">
              <node concept="2YIFZM" id="7C_wgEF4C9P" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4C9Q" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63Hx" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4C7B" resolve="traceAccessorMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4C9S" role="2OqNvi">
                    <ref role="37wK5l" to="u02k:7C_wgEF4$O$" resolve="getNode" />
                    <node concept="2YIFZM" id="7C_wgEF4C9T" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4C9U" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4C9V" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7C_wgEF4C9W" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="7C_wgEF4C9X" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4C9Y" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Bc" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4C9I" resolve="someNode" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4Ca0" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsod" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmWCOC" role="8Wnug">
            <node concept="2OqwBi" id="1ZspCbdiXrP" role="3clFbG">
              <node concept="2YIFZM" id="2pJszzmWCOE" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="2pJszzmWCOF" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63hV" role="2Oq$k0">
                    <ref role="3cqZAo" node="2pJszzmWCOu" resolve="programStatePovider" />
                  </node>
                  <node concept="liA8E" id="2pJszzmWCOH" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="1ZspCbdiXrU" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Oa" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4C9u" resolve="threadMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoe" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmWCOB" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsof" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmWCOK" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmWCOL" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63Ne" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmWCOu" resolve="programStatePovider" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsog" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4Ca1" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4Ca2" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh638m" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4C8z" resolve="locationMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4Ca4" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4Ca5" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63dz" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4C91" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4Ca7" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4Ca8" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63MB" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4C7B" resolve="traceAccessorMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsoj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4Caa" role="8Wnug">
            <node concept="2YIFZM" id="7C_wgEF4Cab" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="4WqJ5Sh63rY" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4C9u" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsok" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7C_wgEF4C8x" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsol" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7C_wgEF4D0j" role="8Wnug">
            <node concept="2OqwBi" id="7C_wgEF4D0k" role="3clFbG">
              <node concept="1eOMI4" id="7C_wgEF4D0l" role="2Oq$k0">
                <node concept="10QFUN" id="7C_wgEF4D0m" role="1eOMHV">
                  <node concept="37vLTw" id="4WqJ5Sh63Gy" role="10QFUP">
                    <ref role="3cqZAo" node="7C_wgEF4C7k" resolve="programState" />
                  </node>
                  <node concept="3uibUv" id="7C_wgEF4HN2" role="10QFUM">
                    <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4D0p" role="2OqNvi">
                <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDsqsom" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="7C_wgEF4C7q" role="8Wnug">
            <node concept="3uibUv" id="7C_wgEF4Caz" role="3$Qgvv">
              <ref role="3uigEE" to="u02k:7C_wgEF4$LP" resolve="TRMissingTracesException" />
            </node>
            <node concept="3clFbF" id="7C_wgEF4C7s" role="3$Oloe">
              <node concept="2OqwBi" id="7C_wgEF4C7t" role="3clFbG">
                <node concept="37vLTw" id="4WqJ5Sh63IK" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4C7k" resolve="programState" />
                </node>
                <node concept="liA8E" id="7C_wgEF4C7v" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:7C_wgEF4$DJ" resolve="getNodeWhereSuspended" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4$R_" role="1SL9yI">
      <property role="TrG5h" value="emptyCallStack" />
      <node concept="3cqZAl" id="7C_wgEF4$RA" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4$RB" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4Ca$" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4Ca_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4CaA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4CaB" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4CaC" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4CaD" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4CaE" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4CaF" role="3cpWs9">
            <property role="TrG5h" value="programState" />
            <node concept="3uibUv" id="7C_wgEF4CaG" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4CaH" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63tc" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4Ca_" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4CaJ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4CaK" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4CaL" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4CaM" role="3cpWs9">
            <property role="TrG5h" value="traceAccessorMock" />
            <node concept="3uibUv" id="7C_wgEF4CaN" role="1tU5fm">
              <ref role="3uigEE" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4CaO" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63__" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4Ca_" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4CaQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4CaR" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF4$Oy" resolve="ITRTraceAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmWCOO" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmWCOP" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="69Byf55Pgdq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="2pJszzmWCOR" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63wM" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4Ca_" resolve="injector" />
              </node>
              <node concept="liA8E" id="2pJszzmWCOT" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgdw" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4CaS" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4CaT" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4CaU" role="3cpWs9">
            <property role="TrG5h" value="nullNode" />
            <node concept="3Tqbb2" id="7C_wgEF4CaV" role="1tU5fm" />
            <node concept="10Nm6u" id="7C_wgEF4CaW" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4CaX" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4CaY" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4CaZ" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4Cb0" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63GF" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4CaM" resolve="traceAccessorMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4Cb2" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:7C_wgEF4$O$" resolve="getNode" />
                  <node concept="2YIFZM" id="7C_wgEF4Cb3" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF4Cb4" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4Cb5" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF4Cb6" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4Cb7" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4Cb8" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63iO" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4CaU" resolve="nullNode" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4Cba" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4CbT" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4CbU" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="3uibUv" id="7C_wgEF4CbV" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~List" resolve="List" />
              <node concept="3uibUv" id="7C_wgEF4CbW" role="11_B2D">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="7C_wgEF4CbX" role="33vP2m">
              <node concept="1pGfFk" id="7C_wgEF4CbY" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~ArrayList.&lt;init&gt;()" resolve="ArrayList" />
                <node concept="3uibUv" id="7C_wgEF4CbZ" role="1pMfVU">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4Cc5" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4Cc6" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4Cc7" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <node concept="3uibUv" id="7C_wgEF4Cc8" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4Cc9" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4Cca" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4Ccb" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4Ccc" role="3clFbG">
            <node concept="2OqwBi" id="7C_wgEF4Ccd" role="2Oq$k0">
              <node concept="2YIFZM" id="7C_wgEF4Cce" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7C_wgEF4Ccf" role="37wK5m">
                  <node concept="37vLTw" id="4WqJ5Sh63BZ" role="2Oq$k0">
                    <ref role="3cqZAo" node="7C_wgEF4Cc7" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="7C_wgEF4Cch" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7C_wgEF4Cci" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4WqJ5Sh63Qa" role="37wK5m">
                  <ref role="3cqZAo" node="7C_wgEF4CbU" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4Cck" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4Ccl" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4Ccm" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4Ccn" role="3cpWs9">
            <property role="TrG5h" value="someNode" />
            <node concept="3Tqbb2" id="7C_wgEF4Cco" role="1tU5fm" />
            <node concept="2ShNRf" id="7C_wgEF4Ccp" role="33vP2m">
              <node concept="3zrR0B" id="7C_wgEF4Ccq" role="2ShVmc">
                <node concept="3Tqbb2" id="7C_wgEF4Ccr" role="3zrR0E">
                  <ref role="ehGHo" to="2gv2:7DakfXFco7$" resolve="IBreakpointSupport" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4Ccs" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4Cct" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4Ccu" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7C_wgEF4Ccv" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63xC" role="2Oq$k0">
                  <ref role="3cqZAo" node="7C_wgEF4CaM" resolve="traceAccessorMock" />
                </node>
                <node concept="liA8E" id="7C_wgEF4Ccx" role="2OqNvi">
                  <ref role="37wK5l" to="u02k:7C_wgEF4$O$" resolve="getNode" />
                  <node concept="2YIFZM" id="7C_wgEF4Ccy" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF4Ccz" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4Cc$" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="7C_wgEF4Cc_" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4CcA" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4CcB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63oG" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4Ccn" resolve="someNode" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4CcD" role="3cqZAp" />
        <node concept="3clFbF" id="2pJszzmWCOY" role="3cqZAp">
          <node concept="2OqwBi" id="2pJszzmWCOZ" role="3clFbG">
            <node concept="2YIFZM" id="2pJszzmWCP0" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="2pJszzmWCP1" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Nz" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmWCOP" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="69Byf55PgdB" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2pJszzmWCP4" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63gy" role="37wK5m">
                <ref role="3cqZAo" node="7C_wgEF4Cc7" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2pJszzmWCOX" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4CcK" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4CcL" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63M$" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4CaM" resolve="traceAccessorMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4CcN" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4CcO" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63dh" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4Cc7" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2pJszzmWCP6" role="3cqZAp">
          <node concept="2YIFZM" id="2pJszzmWCP7" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63kC" role="37wK5m">
              <ref role="3cqZAo" node="2pJszzmWCOP" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4Cd1" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4D0s" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4D0t" role="3clFbG">
            <node concept="1eOMI4" id="7C_wgEF4D0u" role="2Oq$k0">
              <node concept="10QFUN" id="7C_wgEF4D0v" role="1eOMHV">
                <node concept="37vLTw" id="4WqJ5Sh63xy" role="10QFUP">
                  <ref role="3cqZAo" node="7C_wgEF4CaF" resolve="programState" />
                </node>
                <node concept="3uibUv" id="7C_wgEF4HN1" role="10QFUM">
                  <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4D0y" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4Cd3" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4Cd9" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:7C_wgEF4$NE" resolve="TREmptyCallStackException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4Cd5" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4Cd6" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63fr" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4CaF" resolve="programState" />
              </node>
              <node concept="liA8E" id="7C_wgEF4Cd8" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF4$DJ" resolve="getNodeWhereSuspended" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="3W_lGXEdepd" role="1SL9yI">
      <property role="TrG5h" value="retrieveWatches" />
      <node concept="3cqZAl" id="3W_lGXEdepe" role="3clF45" />
      <node concept="3clFbS" id="3W_lGXEdepf" role="3clF47">
        <node concept="3cpWs8" id="3W_lGXEdepg" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdeph" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="3W_lGXEdepi" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEdepj" role="33vP2m">
              <node concept="2WthIp" id="3W_lGXEdepk" role="2Oq$k0" />
              <node concept="2XshWL" id="3W_lGXEdepl" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdepm" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdepn" role="3cpWs9">
            <property role="TrG5h" value="programState" />
            <node concept="3uibUv" id="3W_lGXEdepo" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEdepp" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63yV" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEdeph" resolve="injector" />
              </node>
              <node concept="liA8E" id="3W_lGXEdepr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="3W_lGXEdeps" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdep$" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdep_" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="3W_lGXEdepA" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEdepB" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63ER" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEdeph" resolve="injector" />
              </node>
              <node concept="liA8E" id="3W_lGXEdepD" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="3W_lGXEdepE" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEdepM" role="3cqZAp" />
        <node concept="3clFbH" id="3W_lGXEdf6H" role="3cqZAp" />
        <node concept="3cpWs8" id="3W_lGXEderU" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEderV" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <node concept="3uibUv" id="3W_lGXEderW" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEderZ" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEdes5" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdevy" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdevS" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEdev$" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEderK" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63O4" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEdep_" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="3W_lGXEderQ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdevX" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63UE" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEderV" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdesD" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdesE" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="_YKpA" id="3W_lGXEdesF" role="1tU5fm">
              <node concept="3uibUv" id="3W_lGXEdesI" role="_ZDj9">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="3W_lGXEdesK" role="33vP2m">
              <node concept="Tc6Ow" id="3W_lGXEdesM" role="2ShVmc">
                <node concept="3uibUv" id="3W_lGXEdesO" role="HW$YZ">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdeux" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdeuR" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEdeu$" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEdesw" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63wP" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEderV" resolve="threadMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEdesA" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdeuW" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63pX" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdesE" resolve="stackFrames" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdesT" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdesU" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="3W_lGXEdesV" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEdeti" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEdetk" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdiDd" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdiDE" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63B6" role="2Oq$k0">
              <ref role="3cqZAo" node="3W_lGXEdesE" resolve="stackFrames" />
            </node>
            <node concept="TSZUe" id="3W_lGXEdiDK" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63ob" role="25WWJ7">
                <ref role="3cqZAo" node="3W_lGXEdesU" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdf6x" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdf6y" role="3cpWs9">
            <property role="TrG5h" value="FIRST_NAME" />
            <node concept="17QB3L" id="3W_lGXEdf6z" role="1tU5fm" />
            <node concept="Xl_RD" id="3W_lGXEdf6A" role="33vP2m">
              <property role="Xl_RC" value="a" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdf6B" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdf6C" role="3cpWs9">
            <property role="TrG5h" value="SECOND_NAME" />
            <node concept="17QB3L" id="3W_lGXEdf6D" role="1tU5fm" />
            <node concept="Xl_RD" id="3W_lGXEdf6E" role="33vP2m">
              <property role="Xl_RC" value="b" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdf7l" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdf7m" role="3cpWs9">
            <property role="TrG5h" value="firstWatchableMock" />
            <node concept="3uibUv" id="3W_lGXEdf7n" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEdf7r" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEdf7w" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdf7_" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdf7A" role="3cpWs9">
            <property role="TrG5h" value="secondWatchableMock" />
            <node concept="3uibUv" id="3W_lGXEdf7B" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEdf7C" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEdf7D" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf8b" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdf8x" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEdf8e" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEdf82" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh637R" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEdf7m" resolve="firstWatchableMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEdf88" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaK3S" resolve="getName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdf8A" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63fl" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdf6y" resolve="FIRST_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf8C" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdf8D" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEdf8E" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEdf8F" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63yf" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEdf7A" resolve="secondWatchableMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEdf8H" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaK3S" resolve="getName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdf8I" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63Km" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdf6C" resolve="SECOND_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEdeqB" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdeqC" role="3cpWs9">
            <property role="TrG5h" value="watchables" />
            <node concept="_YKpA" id="3W_lGXEdeqD" role="1tU5fm">
              <node concept="3uibUv" id="3W_lGXEdf6l" role="_ZDj9">
                <ref role="3uigEE" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
              </node>
            </node>
            <node concept="2ShNRf" id="3W_lGXEdeqH" role="33vP2m">
              <node concept="Tc6Ow" id="3W_lGXEdeqJ" role="2ShVmc">
                <node concept="3uibUv" id="3W_lGXEdf6m" role="HW$YZ">
                  <ref role="3uigEE" to="pry4:3SnNvqCaK3Q" resolve="IWatchable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf8N" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdf98" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Vb" role="2Oq$k0">
              <ref role="3cqZAo" node="3W_lGXEdeqC" resolve="watchables" />
            </node>
            <node concept="TSZUe" id="3W_lGXEdf9e" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63In" role="25WWJ7">
                <ref role="3cqZAo" node="3W_lGXEdf7m" resolve="firstWatchableMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf9h" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdf9i" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63ww" role="2Oq$k0">
              <ref role="3cqZAo" node="3W_lGXEdeqC" resolve="watchables" />
            </node>
            <node concept="TSZUe" id="3W_lGXEdf9k" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63kb" role="25WWJ7">
                <ref role="3cqZAo" node="3W_lGXEdf7A" resolve="secondWatchableMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdetS" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdeue" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEdetV" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEdetJ" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Ib" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEdesU" resolve="stackFrameMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEdetP" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtv" resolve="getVisibleWatchables" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdeuj" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63Ly" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdeqC" resolve="watchables" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEderr" role="3cqZAp" />
        <node concept="3clFbF" id="3W_lGXEdew2" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdew5" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63OU" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEderV" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdew7" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdew8" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh639K" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdesU" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdewb" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdewc" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Nq" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdep_" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf9D" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdf9E" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63cf" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdf7m" resolve="firstWatchableMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdf9H" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdf9I" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Bf" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdf7A" resolve="secondWatchableMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEdew0" role="3cqZAp" />
        <node concept="3cpWs8" id="3W_lGXEdfaS" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEdfaT" role="3cpWs9">
            <property role="TrG5h" value="watchableNames" />
            <node concept="_YKpA" id="3W_lGXEdfaU" role="1tU5fm">
              <node concept="17QB3L" id="3W_lGXEdfaX" role="_ZDj9" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEdfbi" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63J8" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEdepn" resolve="programState" />
              </node>
              <node concept="liA8E" id="3W_lGXEdfbn" role="2OqNvi">
                <ref role="37wK5l" to="u02k:3W_lGXEdbYf" resolve="getWatchNames" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="3W_lGXEdfaq" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdfc7" role="1gVkn0">
            <node concept="2OqwBi" id="3W_lGXEdfbH" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63J2" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEdfaT" resolve="watchableNames" />
              </node>
              <node concept="34jXtK" id="58boHs0Gkr_" role="2OqNvi">
                <node concept="3cmrfG" id="58boHs0GmJn" role="25WWJ7">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdfmP" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63sL" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdf6y" resolve="FIRST_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="3W_lGXEdfmR" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEdfmS" role="1gVkn0">
            <node concept="2OqwBi" id="3W_lGXEdfmT" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63Pk" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEdfaT" resolve="watchableNames" />
              </node>
              <node concept="34jXtK" id="58boHs0GnKi" role="2OqNvi">
                <node concept="3cmrfG" id="58boHs0GnKs" role="25WWJ7">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEdfmW" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63zR" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEdf6C" resolve="SECOND_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEdewl" role="3cqZAp" />
        <node concept="3clFbF" id="3W_lGXEdewo" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdewz" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63GU" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEderV" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdewr" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdewI" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63DN" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdesU" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdewu" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdewK" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63np" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdep_" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdfna" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdfnb" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63an" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdf7m" resolve="firstWatchableMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEdfnd" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEdfne" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63xa" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEdf7A" resolve="secondWatchableMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="3W_lGXEeWnG" role="1SL9yI">
      <property role="TrG5h" value="retrieveStackFrames" />
      <node concept="3cqZAl" id="3W_lGXEeWnH" role="3clF45" />
      <node concept="3clFbS" id="3W_lGXEeWnI" role="3clF47">
        <node concept="3cpWs8" id="3W_lGXEeWnJ" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWnK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="3W_lGXEeWnL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEeWnM" role="33vP2m">
              <node concept="2WthIp" id="3W_lGXEeWnN" role="2Oq$k0" />
              <node concept="2XshWL" id="3W_lGXEeWnO" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4$RC" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWnP" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWnQ" role="3cpWs9">
            <property role="TrG5h" value="programState" />
            <node concept="3uibUv" id="3W_lGXEeWnR" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEeWnS" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63cK" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEeWnK" resolve="injector" />
              </node>
              <node concept="liA8E" id="3W_lGXEeWnU" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="3W_lGXEeWnV" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWnW" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWnX" role="3cpWs9">
            <property role="TrG5h" value="programStatePovider" />
            <node concept="3uibUv" id="3W_lGXEeWnY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEeWnZ" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63IQ" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEeWnK" resolve="injector" />
              </node>
              <node concept="liA8E" id="3W_lGXEeWo1" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="3W_lGXEeWo2" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEeWo3" role="3cqZAp" />
        <node concept="3clFbH" id="3W_lGXEeWo4" role="3cqZAp" />
        <node concept="3cpWs8" id="3W_lGXEeWo5" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWo6" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <node concept="3uibUv" id="3W_lGXEeWo7" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEeWo8" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEeWo9" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWoa" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWob" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWoc" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWod" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63i1" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWnX" resolve="programStatePovider" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWof" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWog" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63W2" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWo6" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWoi" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWoj" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="_YKpA" id="3W_lGXEeWok" role="1tU5fm">
              <node concept="3uibUv" id="3W_lGXEeWol" role="_ZDj9">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="3W_lGXEeWom" role="33vP2m">
              <node concept="Tc6Ow" id="3W_lGXEeWon" role="2ShVmc">
                <node concept="3uibUv" id="3W_lGXEeWoo" role="HW$YZ">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWop" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWoq" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWor" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWos" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Jt" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWo6" resolve="threadMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWou" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWov" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63Rj" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWoj" resolve="stackFrames" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWox" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWoy" role="3cpWs9">
            <property role="TrG5h" value="firstStackFrameMock" />
            <node concept="3uibUv" id="3W_lGXEeWoz" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEeWo$" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEeWo_" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWrN" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWrO" role="3cpWs9">
            <property role="TrG5h" value="secondStackFrameMock" />
            <node concept="3uibUv" id="3W_lGXEeWrP" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEeWrQ" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEeWrR" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWoA" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWoB" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63gU" role="2Oq$k0">
              <ref role="3cqZAo" node="3W_lGXEeWoj" resolve="stackFrames" />
            </node>
            <node concept="TSZUe" id="3W_lGXEeWoD" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63ow" role="25WWJ7">
                <ref role="3cqZAo" node="3W_lGXEeWoy" resolve="firstStackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeYNX" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeYNY" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63vm" role="2Oq$k0">
              <ref role="3cqZAo" node="3W_lGXEeWoj" resolve="stackFrames" />
            </node>
            <node concept="TSZUe" id="3W_lGXEeYO0" role="2OqNvi">
              <node concept="37vLTw" id="4WqJ5Sh63hk" role="25WWJ7">
                <ref role="3cqZAo" node="3W_lGXEeWrO" resolve="secondStackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWoF" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWoG" role="3cpWs9">
            <property role="TrG5h" value="FIRST_ROUTINE_NAME" />
            <node concept="17QB3L" id="3W_lGXEeWoH" role="1tU5fm" />
            <node concept="Xl_RD" id="3W_lGXEeWoI" role="33vP2m">
              <property role="Xl_RC" value="main" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWoJ" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWoK" role="3cpWs9">
            <property role="TrG5h" value="SECOND_ROUTINE_NAME" />
            <node concept="17QB3L" id="3W_lGXEeWoL" role="1tU5fm" />
            <node concept="Xl_RD" id="3W_lGXEeWoM" role="33vP2m">
              <property role="Xl_RC" value="doSomething" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWrn" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWro" role="3cpWs9">
            <property role="TrG5h" value="firstLocationMock" />
            <node concept="3uibUv" id="3W_lGXEeWrp" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEeWrs" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEeWru" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3W_lGXEeWry" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWrz" role="3cpWs9">
            <property role="TrG5h" value="secondLocationMock" />
            <node concept="3uibUv" id="3W_lGXEeWr$" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="3W_lGXEeWr_" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="3W_lGXEeWrA" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEeWrk" role="3cqZAp" />
        <node concept="3clFbH" id="3W_lGXEeWrD" role="3cqZAp" />
        <node concept="3clFbF" id="3W_lGXEeWoX" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWoY" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWoZ" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWp0" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63Tz" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWro" resolve="firstLocationMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWrL" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtI" resolve="getRoutineName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWp3" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63v1" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWoG" resolve="FIRST_ROUTINE_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWp5" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWp6" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWp7" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWp8" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63$k" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWrz" resolve="secondLocationMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWpa" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtI" resolve="getRoutineName" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWpb" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63Wt" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWoK" resolve="SECOND_ROUTINE_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWpu" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWpv" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWpw" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWpx" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63$M" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWoy" resolve="firstStackFrameMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWrW" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWp$" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh637j" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWro" resolve="firstLocationMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWrY" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWrZ" role="3clFbG">
            <node concept="2YIFZM" id="3W_lGXEeWs0" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="3W_lGXEeWs1" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63rD" role="2Oq$k0">
                  <ref role="3cqZAo" node="3W_lGXEeWrO" resolve="secondStackFrameMock" />
                </node>
                <node concept="liA8E" id="3W_lGXEeWs3" role="2OqNvi">
                  <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWs4" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="4WqJ5Sh63M6" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWrz" resolve="secondLocationMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEeWpA" role="3cqZAp" />
        <node concept="3clFbF" id="3W_lGXEeWpB" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWpC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63fE" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWo6" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWpE" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWpF" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63ok" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWoy" resolve="firstStackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWsa" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsb" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Rs" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWrO" resolve="secondStackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWpH" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWpI" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63TO" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWnX" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWpK" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWpL" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63eO" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWro" resolve="firstLocationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWpN" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWpO" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Qx" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWrz" resolve="secondLocationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEeWpQ" role="3cqZAp" />
        <node concept="3cpWs8" id="3W_lGXEeWpR" role="3cqZAp">
          <node concept="3cpWsn" id="3W_lGXEeWpS" role="3cpWs9">
            <property role="TrG5h" value="stackFrameNames" />
            <node concept="_YKpA" id="3W_lGXEeWpT" role="1tU5fm">
              <node concept="17QB3L" id="3W_lGXEeWpU" role="_ZDj9" />
            </node>
            <node concept="2OqwBi" id="3W_lGXEeWpV" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Rv" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEeWnQ" resolve="programState" />
              </node>
              <node concept="liA8E" id="3W_lGXEeWpX" role="2OqNvi">
                <ref role="37wK5l" to="u02k:3W_lGXEeWkt" resolve="getStackFrameNames" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="3W_lGXEeWpY" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWpZ" role="1gVkn0">
            <node concept="2OqwBi" id="3W_lGXEeWq0" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63ql" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEeWpS" resolve="stackFrameNames" />
              </node>
              <node concept="34jXtK" id="58boHs0GbjX" role="2OqNvi">
                <node concept="3cmrfG" id="58boHs0Gg50" role="25WWJ7">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWq4" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63$e" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWoG" resolve="FIRST_ROUTINE_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1gVbGN" id="3W_lGXEeWq6" role="3cqZAp">
          <node concept="2OqwBi" id="3W_lGXEeWq7" role="1gVkn0">
            <node concept="2OqwBi" id="3W_lGXEeWq8" role="2Oq$k0">
              <node concept="37vLTw" id="4WqJ5Sh63uV" role="2Oq$k0">
                <ref role="3cqZAo" node="3W_lGXEeWpS" resolve="stackFrameNames" />
              </node>
              <node concept="34jXtK" id="58boHs0Gh8N" role="2OqNvi">
                <node concept="3cmrfG" id="58boHs0Gh8X" role="25WWJ7">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="3W_lGXEeWqc" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
              <node concept="37vLTw" id="4WqJ5Sh63E5" role="37wK5m">
                <ref role="3cqZAo" node="3W_lGXEeWoK" resolve="SECOND_ROUTINE_NAME" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3W_lGXEeWqe" role="3cqZAp" />
        <node concept="3clFbF" id="3W_lGXEeWsf" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsx" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63ss" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWo6" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWsi" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsz" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63n_" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWoy" resolve="firstStackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWsl" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWs_" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63G7" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWrO" resolve="secondStackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWso" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsB" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63EC" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWnX" resolve="programStatePovider" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWsr" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsD" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63l0" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWro" resolve="firstLocationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="3W_lGXEeWsu" role="3cqZAp">
          <node concept="2YIFZM" id="3W_lGXEeWsF" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63sg" role="37wK5m">
              <ref role="3cqZAo" node="3W_lGXEeWrz" resolve="secondLocationMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF3Rwo">
    <property role="3GE5qa" value="unit-tests" />
    <property role="TrG5h" value="Session" />
    <node concept="2XrIbr" id="7C_wgEF49xu" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF49xx" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF49xw" role="3clF47">
        <node concept="3clFbF" id="7C_wgEF49yy" role="3cqZAp">
          <node concept="2YIFZM" id="30gDo8BIbzg" role="3clFbG">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="30gDo8BIbzr" role="37wK5m">
              <node concept="YeOm9" id="30gDo8BIbzs" role="2ShVmc">
                <node concept="1Y3b0j" id="30gDo8BIbzt" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="30gDo8BIbzu" role="1B3o_S" />
                  <node concept="3clFb_" id="30gDo8BIbzv" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="30gDo8BIbzw" role="1B3o_S" />
                    <node concept="3cqZAl" id="30gDo8BIbzx" role="3clF45" />
                    <node concept="3clFbS" id="30gDo8BIbzy" role="3clF47">
                      <node concept="3clFbF" id="58boHs0IMul" role="3cqZAp">
                        <node concept="2OqwBi" id="58boHs0IOyh" role="3clFbG">
                          <node concept="1rXfSq" id="58boHs0IMuj" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="58boHs0IOgQ" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                            </node>
                          </node>
                          <node concept="liA8E" id="58boHs0IQas" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2ShNRf" id="58boHs0Ilxf" role="37wK5m">
                              <node concept="YeOm9" id="58boHs0InfC" role="2ShVmc">
                                <node concept="1Y3b0j" id="58boHs0InfF" role="YeSDq">
                                  <property role="2bfB8j" value="true" />
                                  <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                  <node concept="3Tm1VV" id="58boHs0InfG" role="1B3o_S" />
                                  <node concept="3clFb_" id="58boHs0InfH" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getProject" />
                                    <node concept="3uibUv" id="58boHs0InfI" role="3clF45">
                                      <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                    </node>
                                    <node concept="3Tm1VV" id="58boHs0InfJ" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0InfL" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0IntF" role="3cqZAp">
                                        <node concept="2YIFZM" id="58boHs0IntH" role="3clFbG">
                                          <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                          <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                          <node concept="3VsKOn" id="58boHs0IntI" role="37wK5m">
                                            <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0InfN" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getBinary" />
                                    <node concept="3uibUv" id="58boHs0InfO" role="3clF45">
                                      <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                    </node>
                                    <node concept="3Tm1VV" id="58boHs0InfP" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0InfR" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0IHGN" role="3cqZAp">
                                        <node concept="10Nm6u" id="58boHs0IHGM" role="3clFbG" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0InfT" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getModel" />
                                    <node concept="H_c77" id="58boHs0InfU" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0InfV" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0InfX" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0ICdf" role="3cqZAp">
                                        <node concept="2YIFZM" id="58boHs0ICdh" role="3clFbG">
                                          <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                          <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                          <node concept="3VsKOn" id="58boHs0ICdi" role="37wK5m">
                                            <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="4jk7wJwfMd7" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="showUnmappedVariables" />
                                    <node concept="10P_77" id="4jk7wJwfMd8" role="3clF45" />
                                    <node concept="3Tm1VV" id="4jk7wJwfMd9" role="1B3o_S" />
                                    <node concept="3clFbS" id="4jk7wJwfMdc" role="3clF47">
                                      <node concept="3clFbF" id="4jk7wJwfMde" role="3cqZAp">
                                        <node concept="3clFbT" id="4jk7wJwfMdd" role="3clFbG" />
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0InfZ" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getModules" />
                                    <node concept="2I9FWS" id="58boHs0Ing0" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0Ing1" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0Ing3" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0IILS" role="3cqZAp">
                                        <node concept="2ShNRf" id="58boHs0IILQ" role="3clFbG">
                                          <node concept="2T8Vx0" id="58boHs0IKnz" role="2ShVmc">
                                            <node concept="2I9FWS" id="58boHs0IKn_" role="2T96Bj" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0Ing5" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getTracePath" />
                                    <node concept="17QB3L" id="58boHs0Ing6" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0Ing7" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0Ing9" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0ICc8" role="3cqZAp">
                                        <node concept="Xl_RD" id="58boHs0ICc7" role="3clFbG">
                                          <property role="Xl_RC" value="" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0Ingb" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getBinaryPath" />
                                    <node concept="17QB3L" id="58boHs0Ingc" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0Ingd" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0Ingf" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0ICcR" role="3cqZAp">
                                        <node concept="Xl_RD" id="58boHs0ICcQ" role="3clFbG">
                                          <property role="Xl_RC" value="" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0Ingh" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getLaunchTimeout" />
                                    <node concept="10Oyi0" id="58boHs0Ingi" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0Ingj" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0Ingl" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0IrrY" role="3cqZAp">
                                        <node concept="3cmrfG" id="58boHs0IrrX" role="3clFbG">
                                          <property role="3cmrfH" value="1000" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="3clFb_" id="58boHs0Ingn" role="jymVt">
                                    <property role="1EzhhJ" value="false" />
                                    <property role="TrG5h" value="getCommandTimeout" />
                                    <node concept="10Oyi0" id="58boHs0Ingo" role="3clF45" />
                                    <node concept="3Tm1VV" id="58boHs0Ingp" role="1B3o_S" />
                                    <node concept="3clFbS" id="58boHs0Ingr" role="3clF47">
                                      <node concept="3clFbF" id="58boHs0Iq9y" role="3cqZAp">
                                        <node concept="3cmrfG" id="58boHs0Iq9x" role="3clFbG">
                                          <property role="3cmrfH" value="1000" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF4bPy" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4bPz" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF4bP$" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62SQ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4bUG" role="37wK5m">
                                <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4bPB" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF4bPC" role="37wK5m">
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <node concept="Xl_RD" id="7C_wgEF4bPD" role="37wK5m">
                                  <property role="Xl_RC" value="timeout" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4bPE" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="3cmrfG" id="7C_wgEF4bV0" role="37wK5m">
                              <property role="3cmrfH" value="300" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF3RyF" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF3Rz7" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh632o" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF3RyR" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF3Rzf" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF3Rzh" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF3Rzm" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF3RzD" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF3R$5" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh635K" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF3RzP" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF3R$d" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF3R$g" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF3R$l" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF3R$E" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF3R$X" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh636q" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="69Byf55PgTX" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF3R_5" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF3R_8" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="69Byf55PgU6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF3R_f" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF3R_F" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh634s" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF3R_r" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF3R_N" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF3R_P" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF3R_Y" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF3RE9" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF3REs" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh6326" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF3REc" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF3RE_" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="7C_wgEF3REZ" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIkCL" resolve="TRSessionImpl" />
                            </node>
                          </node>
                        </node>
                        <node concept="15s5l7" id="65KmIn8sLZl" role="lGtFl" />
                      </node>
                      <node concept="3clFbF" id="7C_wgEF497x" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF497y" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh635W" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7C_wgEF497$" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF497_" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="7C_wgEF497O" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIkCL" resolve="TRSessionImpl" />
                            </node>
                          </node>
                        </node>
                        <node concept="15s5l7" id="65KmIn8sLZm" role="lGtFl" />
                      </node>
                      <node concept="3clFbF" id="7W4QWPKAKnr" role="3cqZAp">
                        <node concept="2OqwBi" id="7W4QWPKAKns" role="3clFbG">
                          <node concept="1rXfSq" id="4WqJ5Sh634y" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="7W4QWPKAKnG" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                            </node>
                          </node>
                          <node concept="liA8E" id="7W4QWPKAKnv" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="7W4QWPKAKnw" role="37wK5m">
                              <ref role="3VsUkX" to="u02k:30gDo8BIkCL" resolve="TRSessionImpl" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF48RE" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF48RF" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF48RG" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62XY" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF48RI" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF48RJ" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF48RK" role="37wK5m">
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <node concept="10M0yZ" id="7C_wgEF48RL" role="37wK5m">
                                  <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                  <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF48RM" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4ykY" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4yl8" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF48RO" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4ylv" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF48RQ" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh630n" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF48RS" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF48RT" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF48RU" role="37wK5m">
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <node concept="10M0yZ" id="7C_wgEF48RV" role="37wK5m">
                                  <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                  <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4ylD" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4ylE" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4ylF" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF48RY" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4ylY" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF48S0" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62SW" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF48S2" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF48S3" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF48S4" role="37wK5m">
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <node concept="10M0yZ" id="7C_wgEF48S5" role="37wK5m">
                                  <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                  <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4ym8" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4ym9" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4yma" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF48S8" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4ymt" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF48Sa" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62Z3" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF48Sc" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF48Sd" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF48Se" role="37wK5m">
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <node concept="10M0yZ" id="7C_wgEF48Sf" role="37wK5m">
                                  <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                  <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4ymx" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4ymy" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4ymz" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="7C_wgEF48Si" role="3cqZAp">
                        <node concept="2OqwBi" id="7C_wgEF4ymX" role="3clFbG">
                          <node concept="2OqwBi" id="7C_wgEF48Sk" role="2Oq$k0">
                            <node concept="1rXfSq" id="4WqJ5Sh62WW" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF48Sm" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF48Sn" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="2YIFZM" id="7C_wgEF48So" role="37wK5m">
                                <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                <node concept="10M0yZ" id="7C_wgEF48Sp" role="37wK5m">
                                  <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                  <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="7C_wgEF4yn7" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="7C_wgEF4yn8" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="7C_wgEF4yn9" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF3Rws" role="1SL9yI">
      <property role="TrG5h" value="awaitTimeout" />
      <node concept="3cqZAl" id="7C_wgEF3Rwt" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF3Rwu" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF49zC" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF49zD" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF49zE" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF49zJ" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF49zK" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF49zL" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF49xu" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF3Rwx" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3Rwy" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="7C_wgEF3Rwz" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF3Rxf" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63PG" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF49zD" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF3Rxl" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF3Rxw" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAQk8" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAQk9" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="sessionListener" />
            <node concept="3uibUv" id="7W4QWPKAQka" role="1tU5fm">
              <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAQkb" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63kO" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF49zD" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKAQkd" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKAQke" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAQkh" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF3SGs" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3SGt" role="3cpWs9">
            <property role="TrG5h" value="before" />
            <node concept="3cpWsb" id="7C_wgEF3SGu" role="1tU5fm" />
            <node concept="2YIFZM" id="7C_wgEF3SGx" role="33vP2m">
              <ref role="37wK5l" to="wyt6:~System.currentTimeMillis():long" resolve="currentTimeMillis" />
              <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKAQk4" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAQk5" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63dt" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAQk9" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAQk7" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF3RG2" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF3RG6" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:7C_wgEF3Rqk" resolve="TRDebuggerNotSuspendedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF3RG7" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF3RFB" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63An" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF3Rwy" resolve="session" />
              </node>
              <node concept="liA8E" id="7C_wgEF3RFH" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF3Rqf" resolve="runUntilSuspended" />
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZu" role="lGtFl" />
        </node>
        <node concept="3cpWs8" id="7C_wgEF3SGz" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF3SG$" role="3cpWs9">
            <property role="TrG5h" value="after" />
            <node concept="3cpWsb" id="7C_wgEF3SG_" role="1tU5fm" />
            <node concept="2YIFZM" id="7C_wgEF3SGU" role="33vP2m">
              <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
              <ref role="37wK5l" to="wyt6:~System.currentTimeMillis():long" resolve="currentTimeMillis" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="7C_wgEF3SGW" role="3cqZAp">
          <node concept="3eOSWO" id="7C_wgEF3SHB" role="3vwVQn">
            <node concept="3cmrfG" id="7C_wgEF3SHE" role="3uHU7w">
              <property role="3cmrfH" value="290" />
            </node>
            <node concept="3cpWsd" id="7C_wgEF3SHb" role="3uHU7B">
              <node concept="37vLTw" id="4WqJ5Sh63_L" role="3uHU7B">
                <ref role="3cqZAo" node="7C_wgEF3SG$" resolve="after" />
              </node>
              <node concept="37vLTw" id="4WqJ5Sh638y" role="3uHU7w">
                <ref role="3cqZAo" node="7C_wgEF3SGt" resolve="before" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKA0eu" role="1SL9yI">
      <property role="TrG5h" value="debuggerRunsUntilSuspended" />
      <node concept="3cqZAl" id="7W4QWPKA0ev" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKA0ew" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKA0eB" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKA0eC" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKA0eD" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKA0eE" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKA0eF" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKA0eG" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF49xu" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKA0eH" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKA0eI" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKA0eJ" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKA0eK" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63xd" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKA0eC" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKA0eM" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKA0eN" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAHXm" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAHXn" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="sessionListener" />
            <node concept="3uibUv" id="7W4QWPKAHXp" role="1tU5fm">
              <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAHXv" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63_R" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKA0eC" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKAHXx" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKAHXE" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAHHu" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAHHv" role="3cpWs9">
            <property role="TrG5h" value="thrownException" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAHYT" role="1tU5fm">
              <ref role="3uigEE" to="i5cy:~AtomicReference" resolve="AtomicReference" />
              <node concept="3uibUv" id="7W4QWPKAHYV" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKAHZm" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKAHZo" role="2ShVmc">
                <ref role="37wK5l" to="i5cy:~AtomicReference.&lt;init&gt;()" resolve="AtomicReference" />
                <node concept="3uibUv" id="7W4QWPKAHZq" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAHHY" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAHHZ" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="countDownLatch" />
            <node concept="3uibUv" id="7W4QWPKAHI1" role="1tU5fm">
              <ref role="3uigEE" to="5zyv:~CountDownLatch" resolve="CountDownLatch" />
            </node>
            <node concept="2ShNRf" id="7W4QWPKAHI3" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKAHRZ" role="2ShVmc">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.&lt;init&gt;(int)" resolve="CountDownLatch" />
                <node concept="3cmrfG" id="7W4QWPKAHS0" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAHHX" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKANls" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKANlK" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63k2" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAHXn" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKANlP" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKANlq" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKA0fl" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKA0fU" role="3clFbG">
            <node concept="2ShNRf" id="7W4QWPKA0fm" role="2Oq$k0">
              <node concept="1pGfFk" id="7W4QWPKA0fo" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7W4QWPKA0fp" role="37wK5m">
                  <node concept="YeOm9" id="7W4QWPKA0fv" role="2ShVmc">
                    <node concept="1Y3b0j" id="7W4QWPKA0fw" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7W4QWPKA0fx" role="1B3o_S" />
                      <node concept="3clFb_" id="7W4QWPKA0fy" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7W4QWPKA0fz" role="1B3o_S" />
                        <node concept="3cqZAl" id="7W4QWPKA0f$" role="3clF45" />
                        <node concept="3clFbS" id="7W4QWPKA0f_" role="3clF47">
                          <node concept="2GUZhq" id="7W4QWPKAHSt" role="3cqZAp">
                            <node concept="3clFbS" id="7W4QWPKAHHm" role="2GV8ay">
                              <node concept="3clFbF" id="7W4QWPKA0eT" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKA0fd" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63G_" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7W4QWPKA0eI" resolve="session" />
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKA0fj" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:7C_wgEF3Rqf" resolve="runUntilSuspended" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7W4QWPKAHHn" role="TEXxN">
                              <node concept="3cpWsn" id="7W4QWPKAHHo" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7W4QWPKAHHr" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7W4QWPKAHHq" role="TDEfX">
                                <node concept="3clFbF" id="7W4QWPKAHZs" role="3cqZAp">
                                  <node concept="2OqwBi" id="7W4QWPKAHZK" role="3clFbG">
                                    <node concept="37vLTw" id="4WqJ5Sh63Sc" role="2Oq$k0">
                                      <ref role="3cqZAo" node="7W4QWPKAHHv" resolve="thrownException" />
                                    </node>
                                    <node concept="liA8E" id="7W4QWPKAHZP" role="2OqNvi">
                                      <ref role="37wK5l" to="i5cy:~AtomicReference.set(java.lang.Object):void" resolve="set" />
                                      <node concept="37vLTw" id="4WqJ5Sh63Wn" role="37wK5m">
                                        <ref role="3cqZAo" node="7W4QWPKAHHo" resolve="e" />
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3clFbS" id="7W4QWPKAHSu" role="2GVbov">
                              <node concept="3clFbF" id="7W4QWPKAHS2" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKAHSm" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63WS" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7W4QWPKAHHZ" resolve="countDownLatch" />
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKAHSs" role="2OqNvi">
                                    <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKA0gC" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAHHT" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKAHXK" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKAHXM" role="3clFbG">
            <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
            <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
            <node concept="3cmrfG" id="7W4QWPKAHXN" role="37wK5m">
              <property role="3cmrfH" value="100" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZs" role="lGtFl" />
        </node>
        <node concept="3clFbF" id="7W4QWPKAHWT" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAHXd" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63nC" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAHXn" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAHXT" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z38eRB" resolve="debuggerResumed" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKAHXO" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKAHXP" role="3clFbG">
            <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
            <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
            <node concept="3cmrfG" id="7W4QWPKAHXQ" role="37wK5m">
              <property role="3cmrfH" value="100" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZr" role="lGtFl" />
        </node>
        <node concept="3clFbF" id="7W4QWPKAHXZ" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAHYj" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63lB" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAHXn" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAHYo" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKAHYq" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAHYI" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63NJ" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAHHZ" resolve="countDownLatch" />
            </node>
            <node concept="liA8E" id="7W4QWPKAHYO" role="2OqNvi">
              <ref role="37wK5l" to="5zyv:~CountDownLatch.await():void" resolve="await" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZt" role="lGtFl" />
        </node>
        <node concept="3ykFI1" id="7W4QWPKAHYQ" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAHZe" role="3ykU8v">
            <node concept="37vLTw" id="4WqJ5Sh63Lv" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAHHv" resolve="thrownException" />
            </node>
            <node concept="liA8E" id="7W4QWPKAHZk" role="2OqNvi">
              <ref role="37wK5l" to="i5cy:~AtomicReference.get():java.lang.Object" resolve="get" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKA0e$" role="1SL9yI">
      <property role="TrG5h" value="debuggerTerminatesWhileRunningUntilSuspended" />
      <node concept="3cqZAl" id="7W4QWPKA0e_" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKA0eA" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKAOyc" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOyd" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAOye" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOyf" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKAOyg" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKAOyh" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF49xu" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAOyi" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOyj" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAOyk" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOyl" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63vM" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKAOyd" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKAOyn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKAOyo" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAOyp" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOyq" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="sessionListener" />
            <node concept="3uibUv" id="7W4QWPKAOyr" role="1tU5fm">
              <ref role="3uigEE" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOys" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63cT" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKAOyd" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKAOyu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKAOyv" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF2hnp" resolve="ITRDebugEventListner" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAOyw" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOyx" role="3cpWs9">
            <property role="TrG5h" value="thrownException" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAOyy" role="1tU5fm">
              <ref role="3uigEE" to="i5cy:~AtomicReference" resolve="AtomicReference" />
              <node concept="3uibUv" id="7W4QWPKAOyz" role="11_B2D">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="2ShNRf" id="7W4QWPKAOy$" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKAOy_" role="2ShVmc">
                <ref role="37wK5l" to="i5cy:~AtomicReference.&lt;init&gt;()" resolve="AtomicReference" />
                <node concept="3uibUv" id="7W4QWPKAOyA" role="1pMfVU">
                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAOyB" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOyC" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="countDownLatch" />
            <node concept="3uibUv" id="7W4QWPKAOyD" role="1tU5fm">
              <ref role="3uigEE" to="5zyv:~CountDownLatch" resolve="CountDownLatch" />
            </node>
            <node concept="2ShNRf" id="7W4QWPKAOyE" role="33vP2m">
              <node concept="1pGfFk" id="7W4QWPKAOyF" role="2ShVmc">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.&lt;init&gt;(int)" resolve="CountDownLatch" />
                <node concept="3cmrfG" id="7W4QWPKAOyG" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAOyH" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKAOyI" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAOyJ" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63jT" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAOyq" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAOyL" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAOyM" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKAOyN" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAOyO" role="3clFbG">
            <node concept="2ShNRf" id="7W4QWPKAOyP" role="2Oq$k0">
              <node concept="1pGfFk" id="7W4QWPKAOyQ" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7W4QWPKAOyR" role="37wK5m">
                  <node concept="YeOm9" id="7W4QWPKAOyS" role="2ShVmc">
                    <node concept="1Y3b0j" id="7W4QWPKAOyT" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="7W4QWPKAOyU" role="1B3o_S" />
                      <node concept="3clFb_" id="7W4QWPKAOyV" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7W4QWPKAOyW" role="1B3o_S" />
                        <node concept="3cqZAl" id="7W4QWPKAOyX" role="3clF45" />
                        <node concept="3clFbS" id="7W4QWPKAOyY" role="3clF47">
                          <node concept="2GUZhq" id="7W4QWPKAOyZ" role="3cqZAp">
                            <node concept="3clFbS" id="7W4QWPKAOz0" role="2GV8ay">
                              <node concept="3clFbF" id="7W4QWPKAOz1" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKAOz2" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63Tq" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7W4QWPKAOyj" resolve="session" />
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKAOz4" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:7C_wgEF3Rqf" resolve="runUntilSuspended" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7W4QWPKAOz5" role="TEXxN">
                              <node concept="3cpWsn" id="7W4QWPKAOz6" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7W4QWPKAOz7" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7W4QWPKAOz8" role="TDEfX">
                                <node concept="3clFbF" id="7W4QWPKAOz9" role="3cqZAp">
                                  <node concept="2OqwBi" id="7W4QWPKAOza" role="3clFbG">
                                    <node concept="37vLTw" id="4WqJ5Sh63mM" role="2Oq$k0">
                                      <ref role="3cqZAo" node="7W4QWPKAOyx" resolve="thrownException" />
                                    </node>
                                    <node concept="liA8E" id="7W4QWPKAOzc" role="2OqNvi">
                                      <ref role="37wK5l" to="i5cy:~AtomicReference.set(java.lang.Object):void" resolve="set" />
                                      <node concept="37vLTw" id="4WqJ5Sh63S6" role="37wK5m">
                                        <ref role="3cqZAo" node="7W4QWPKAOz6" resolve="e" />
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="3clFbS" id="7W4QWPKAOze" role="2GVbov">
                              <node concept="3clFbF" id="7W4QWPKAOzf" role="3cqZAp">
                                <node concept="2OqwBi" id="7W4QWPKAOzg" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63dq" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7W4QWPKAOyC" resolve="countDownLatch" />
                                  </node>
                                  <node concept="liA8E" id="7W4QWPKAOzi" role="2OqNvi">
                                    <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKAOzj" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAOzk" role="3cqZAp" />
        <node concept="3clFbF" id="7W4QWPKAOzl" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKAOzm" role="3clFbG">
            <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
            <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
            <node concept="3cmrfG" id="7W4QWPKAOzn" role="37wK5m">
              <property role="3cmrfH" value="100" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZq" role="lGtFl" />
        </node>
        <node concept="3clFbF" id="7W4QWPKAOzo" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAOzp" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63CT" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAOyq" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAOzr" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z38eRB" resolve="debuggerResumed" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKAOzs" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKAOzt" role="3clFbG">
            <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
            <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
            <node concept="3cmrfG" id="7W4QWPKAOzu" role="37wK5m">
              <property role="3cmrfH" value="100" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZp" role="lGtFl" />
        </node>
        <node concept="3clFbF" id="7W4QWPKAOzv" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAOzw" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63x4" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAOyq" resolve="sessionListener" />
            </node>
            <node concept="liA8E" id="7W4QWPKAOzy" role="2OqNvi">
              <ref role="37wK5l" to="u02k:2FRp1z37KT6" resolve="debuggerDetached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKAOzz" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKAOz$" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63ae" role="2Oq$k0">
              <ref role="3cqZAo" node="7W4QWPKAOyC" resolve="countDownLatch" />
            </node>
            <node concept="liA8E" id="7W4QWPKAOzA" role="2OqNvi">
              <ref role="37wK5l" to="5zyv:~CountDownLatch.await():void" resolve="await" />
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZo" role="lGtFl" />
        </node>
        <node concept="1gVbGN" id="7W4QWPKAOzQ" role="3cqZAp">
          <node concept="2ZW3vV" id="7W4QWPKAO$1" role="1gVkn0">
            <node concept="3uibUv" id="7W4QWPKAO$4" role="2ZW6by">
              <ref role="3uigEE" to="u02k:7C_wgEF3Rqk" resolve="TRDebuggerNotSuspendedException" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOzC" role="2ZW6bz">
              <node concept="37vLTw" id="4WqJ5Sh63_F" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKAOyx" resolve="thrownException" />
              </node>
              <node concept="liA8E" id="7W4QWPKAOzE" role="2OqNvi">
                <ref role="37wK5l" to="i5cy:~AtomicReference.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7W4QWPKAOvP" role="1SL9yI">
      <property role="TrG5h" value="tryingToRunUntilSuspendedWhileDebuggerIsNotSuspended" />
      <node concept="3cqZAl" id="7W4QWPKAOvQ" role="3clF45" />
      <node concept="3clFbS" id="7W4QWPKAOvR" role="3clF47">
        <node concept="3cpWs8" id="7W4QWPKAOvS" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOvT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAOvU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOvV" role="33vP2m">
              <node concept="2WthIp" id="7W4QWPKAOvW" role="2Oq$k0" />
              <node concept="2XshWL" id="7W4QWPKAOvX" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF49xu" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKAOvY" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKAOvZ" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7W4QWPKAOw0" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKAOw1" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63c$" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKAOvT" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKAOw3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKAOw4" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BIaM4" resolve="ITRSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKAOwp" role="3cqZAp" />
        <node concept="3$NI$W" id="7W4QWPKAOxv" role="3cqZAp">
          <node concept="3uibUv" id="7W4QWPKAOxy" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:7C_wgEF3Rqk" resolve="TRDebuggerNotSuspendedException" />
          </node>
          <node concept="3clFbF" id="7W4QWPKAOxz" role="3$Oloe">
            <node concept="2OqwBi" id="7W4QWPKAOwI" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63kh" role="2Oq$k0">
                <ref role="3cqZAo" node="7W4QWPKAOvZ" resolve="session" />
              </node>
              <node concept="liA8E" id="7W4QWPKAOwK" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF3Rqf" resolve="runUntilSuspended" />
              </node>
            </node>
          </node>
          <node concept="15s5l7" id="65KmIn8sLZn" role="lGtFl" />
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF427M">
    <property role="3GE5qa" value="unit-tests" />
    <property role="TrG5h" value="SessionAttached" />
    <node concept="2XrIbr" id="7C_wgEF44tV" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF44tZ" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF44tX" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45f5" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45f6" role="3cpWs9">
            <property role="TrG5h" value="programStateMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45f7" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45f8" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45f9" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45fa" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fb" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45fc" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45fd" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45fe" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45ff" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fg" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45fh" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45fi" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45fj" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45fk" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fl" role="3cpWs9">
            <property role="TrG5h" value="mSessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="69Byf55Pgga" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45fn" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55Pggm" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45fp" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fq" role="3cpWs9">
            <property role="TrG5h" value="tracePathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF45fr" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF45fs" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45ft" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fu" role="3cpWs9">
            <property role="TrG5h" value="binaryPathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF45fv" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF45fw" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45k6" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45k7" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="projectMock" />
            <node concept="3uibUv" id="7C_wgEF45k9" role="1tU5fm">
              <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45kd" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45kf" role="37wK5m">
                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45fx" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fy" role="3cpWs9">
            <property role="TrG5h" value="modelMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="29so9Vcr$OL" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45f$" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="29so9Vcr_kc" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45fA" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fB" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45fC" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45fD" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45fE" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF45gr" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF45fW" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45fX" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45fY" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45g1" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF45g2" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF45g8" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF45g9" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="7C_wgEF45ga" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF45gb" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="7C_wgEF45gc" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF45gd" role="3clF45" />
                      <node concept="3clFbS" id="7C_wgEF45ge" role="3clF47">
                        <node concept="3clFbF" id="58boHs0KVgo" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0KVgp" role="3clFbG">
                            <node concept="1rXfSq" id="58boHs0KVgq" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="58boHs0KVgr" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0KVgs" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="58boHs0KVgt" role="37wK5m">
                                <node concept="YeOm9" id="58boHs0KVgu" role="2ShVmc">
                                  <node concept="1Y3b0j" id="58boHs0KVgv" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="58boHs0KVgw" role="1B3o_S" />
                                    <node concept="3clFb_" id="58boHs0KVgx" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getProject" />
                                      <node concept="3uibUv" id="58boHs0KVgy" role="3clF45">
                                        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KVgz" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVg$" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVg_" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KVgA" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KVgB" role="37wK5m">
                                              <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVgC" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinary" />
                                      <node concept="3uibUv" id="58boHs0KVgD" role="3clF45">
                                        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KVgE" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVgF" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVgG" role="3cqZAp">
                                          <node concept="10Nm6u" id="58boHs0KVgH" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVgI" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModel" />
                                      <node concept="H_c77" id="58boHs0KVgJ" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVgK" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVgL" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVgM" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KVgN" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KVgO" role="37wK5m">
                                              <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVgP" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModules" />
                                      <node concept="2I9FWS" id="58boHs0KVgQ" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVgR" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVgS" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVgT" role="3cqZAp">
                                          <node concept="2ShNRf" id="58boHs0KVgU" role="3clFbG">
                                            <node concept="2T8Vx0" id="58boHs0KVgV" role="2ShVmc">
                                              <node concept="2I9FWS" id="58boHs0KVgW" role="2T96Bj" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="4jk7wJwfU9f" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="showUnmappedVariables" />
                                      <node concept="10P_77" id="4jk7wJwfU9g" role="3clF45" />
                                      <node concept="3Tm1VV" id="4jk7wJwfU9h" role="1B3o_S" />
                                      <node concept="3clFbS" id="4jk7wJwfU9k" role="3clF47">
                                        <node concept="3clFbF" id="4jk7wJwfU9m" role="3cqZAp">
                                          <node concept="3clFbT" id="4jk7wJwfU9l" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVgX" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getTracePath" />
                                      <node concept="17QB3L" id="58boHs0KVgY" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVgZ" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVh0" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVh1" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KVh2" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVh3" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinaryPath" />
                                      <node concept="17QB3L" id="58boHs0KVh4" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVh5" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVh6" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVh7" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KVh8" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVh9" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getLaunchTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KVha" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVhb" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVhc" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVhd" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KVhe" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KVhf" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getCommandTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KVhg" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KVhh" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KVhi" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KVhj" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KVhk" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0KVhl" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0KVhm" role="3clFbG">
                            <node concept="2OqwBi" id="58boHs0KVhn" role="2Oq$k0">
                              <node concept="1rXfSq" id="58boHs0KVho" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="58boHs0KVhp" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="58boHs0KVhq" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="58boHs0KVhr" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="58boHs0KVhs" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0KVht" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="58boHs0KVhu" role="37wK5m">
                                <property role="3cmrfH" value="300" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45gs" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45gJ" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Zf" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45gv" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45gW" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh639l" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45f6" resolve="programStateMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45gZ" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45hi" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh632K" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45h2" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45hq" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63QM" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45fb" resolve="breakpointRegistryMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45ht" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45hO" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62TJ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45h$" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45hW" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63ia" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45fg" resolve="stepperMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45hZ" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45ii" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Yg" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55Pgg5" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45iq" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63zd" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45fl" resolve="mSessionMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45jo" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45jp" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh635Q" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45jr" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45js" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63pL" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45k7" resolve="projectMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45jt" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45ju" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62X8" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="29so9Vcr$lp" role="37wK5m">
                                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45jx" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63SH" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45fy" resolve="modelMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45kl" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45kG" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Tw" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45kr" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45kO" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63gR" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45fB" resolve="sessionStateContextMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF44y9" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF44ya" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF44yb" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62W1" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF44yd" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF44ye" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF44yf" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF44_6" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF44yh" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45tY" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLGc" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF44yo" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF44yp" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF44yq" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62Z9" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF44ys" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF44yt" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF44yu" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF44_d" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF44yw" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF44Ao" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="4ktgw6PNEar" role="3cqZAp">
                          <node concept="2OqwBi" id="4ktgw6PNEas" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Zr" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4ktgw6PNEau" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4ktgw6PNEav" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="4ktgw6PNEaw" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="4ktgw6PNEax" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF44yy" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF44yz" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF44y$" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh630P" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF44yA" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF44yB" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF44yC" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF44_v" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF44yE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF44_B" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLGe" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF44_L" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF44_M" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF44_N" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh635u" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF44_P" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF44_Q" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF44_R" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF44Ac" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF44_T" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF44A8" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLGd" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF44As" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF44At" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF44Au" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh6356" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF44Aw" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF44Ax" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF44Ay" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF44Az" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF44A$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF44AO" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLGf" role="lGtFl" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF45gi" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63Dr" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF45fX" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF428a" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocationsWhenSessionNotAttached" />
      <node concept="3cqZAl" id="7C_wgEF428b" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF428c" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45o3" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45o4" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45o5" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45ol" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45o8" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45or" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF44tV" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF428O" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF428P" role="3cpWs9">
            <property role="TrG5h" value="attachedSession" />
            <node concept="3uibUv" id="7C_wgEF45qh" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45oG" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63RF" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45o4" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45oN" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45oV" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF45p7" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45pI" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF45pX" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF45qa" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4292" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4293" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4294" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh639f" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF428P" resolve="attachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4296" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GM" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4297" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4298" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4299" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF429a" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63qQ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF428P" resolve="attachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF429c" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF429d" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF429e" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF429f" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF429g" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63NG" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF428P" resolve="attachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF429i" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GQ" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF429l" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF42bA" role="1SL9yI">
      <property role="TrG5h" value="regularFromAttachedToTerminated" />
      <node concept="3cqZAl" id="7C_wgEF42bB" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF42bC" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45qQ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45qR" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45qS" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45qT" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45qU" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45qV" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF44tV" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="1ZspCbdiU8k" role="3cqZAp">
          <node concept="3cpWsn" id="1ZspCbdiU8l" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pggq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="1ZspCbdiU8n" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63H9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45qR" resolve="injector" />
              </node>
              <node concept="liA8E" id="1ZspCbdiU8p" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pggy" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF42ca" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF42cb" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF42cc" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45rK" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63v7" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45qR" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45rQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF42ce" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45qB" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45qC" role="3cpWs9">
            <property role="TrG5h" value="attachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45qD" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45qE" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63G1" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45qR" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45qG" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45qH" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF45qI" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45qJ" role="37wK5m">
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <node concept="10M0yZ" id="7C_wgEF45qK" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42ct" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42cu" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF42cv" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63aG" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF42cb" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF42cx" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF42cy" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF42ev" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF42c$" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF42c_" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF42cA" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF42cB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF42cC" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PggF" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWtp" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63vg" role="2Oq$k0">
              <ref role="3cqZAo" node="1ZspCbdiU8l" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWtr" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PggH" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PggI" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PggJ" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PggK" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55PggL" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiWtx" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42cT" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42cU" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63FQ" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF42cb" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF42cW" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42cX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63j3" role="37wK5m">
              <ref role="3cqZAo" node="1ZspCbdiU8l" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42cZ" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42d0" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF42d1" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF42d2" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF42d3" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF42d4" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF42d5" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF42d6" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7C_wgEF42d7" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF42d8" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF42d9" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF42da" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF42db" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF42dc" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF42dd" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF42de" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF42df" role="3clFbG">
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <node concept="3cmrfG" id="7C_wgEF42dg" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF42dh" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF42di" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh639T" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF45qC" resolve="attachedSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF42dk" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GE" resolve="debuggerDetached" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF42dl" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF42dm" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF42dn" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF42do" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF42dp" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF42dq" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF42dr" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF42ds" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF42dt" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63gL" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF42dm" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF42dv" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF42dw" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF42dx" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42dy" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42dz" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF42d$" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63yM" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF45qC" resolve="attachedSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF42dA" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42dB" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42dC" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42dD" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63JM" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF42cb" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF42dF" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42dG" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63rt" role="37wK5m">
              <ref role="3cqZAo" node="1ZspCbdiU8l" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF42PP" role="1SL9yI">
      <property role="TrG5h" value="terminatedWithoutResponse" />
      <node concept="3cqZAl" id="7C_wgEF42PQ" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF42PR" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45s0" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45s1" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45s2" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45s3" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45s4" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45s5" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF44tV" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55PggN" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55PggO" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PggP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55PggQ" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Fl" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45s1" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55PggS" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PggT" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45sx" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45sy" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF45sz" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45s$" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63i4" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45s1" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45sA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF45sB" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45s8" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45s9" role="3cpWs9">
            <property role="TrG5h" value="attachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45sa" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45sb" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63lZ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45s1" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45sd" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45se" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF45sf" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45sg" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF45sh" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF45s7" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55Pgh1" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWtc" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh637p" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55PggO" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWte" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgh3" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pghp" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgh6" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pghu" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pghv" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiWt8" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42R1" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42R2" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63pC" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45sy" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF42R4" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42R5" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63F3" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PggO" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42R7" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF42Sa" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF42S_" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF42SA" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF42RG" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63fi" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45s9" resolve="attachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF42RI" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF42RJ" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF42RK" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42RL" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63A9" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45sy" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF42RN" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF42RO" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63A0" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PggO" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF43NA" role="1SL9yI">
      <property role="TrG5h" value="regularFromAttachedToRunning" />
      <node concept="3cqZAl" id="7C_wgEF43NB" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF43NC" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45sE" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45sF" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45sG" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45sH" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45sI" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45sJ" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF44tV" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55Pghw" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55Pghx" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pghy" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pghz" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63nj" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45sF" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgh_" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PghA" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45sR" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45sS" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF45sT" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45sU" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63FN" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45sF" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45sW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF45sX" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45sY" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45sZ" role="3cpWs9">
            <property role="TrG5h" value="attachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45t0" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45t1" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Nt" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45sF" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45t3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45t4" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF45t5" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45t6" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF45t7" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43Ow" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43Ox" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF43Oy" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63OR" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF45sS" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF43O$" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF43O_" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF43RX" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF43OB" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF43OC" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF43OD" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF43OE" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF43OF" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PghG" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PghH" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63T5" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55Pghx" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="69Byf55PghJ" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PghL" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PghM" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PghN" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PghO" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55PghP" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiViN" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43OP" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43OQ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63hh" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45sS" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF43OS" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43OT" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63wD" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pghx" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43OV" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43OW" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF43OX" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF43OY" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF43OZ" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF43P0" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF43P1" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF43P2" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7C_wgEF43P3" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF43P4" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF43P5" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF43P6" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF43P7" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF43P8" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF43P9" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF43Pa" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF43Pb" role="3clFbG">
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <node concept="3cmrfG" id="7C_wgEF43Pc" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF43Pd" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF43Pe" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh637a" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF45sZ" resolve="attachedSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF43Pg" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GI" resolve="debuggerResumed" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF43Ph" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF43Pi" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF43Pj" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF43Pk" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF43Pl" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF43Pm" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF43Pn" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF43Po" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF43Pp" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63GR" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF43Pi" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF43Pr" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF43Ps" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF43Pt" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43Pu" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43Pv" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF43Pw" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63_y" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF45sZ" resolve="attachedSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF43Py" role="2OqNvi">
              <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43Pz" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43P$" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43P_" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh637d" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45sS" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF43PB" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43PC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63yY" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pghx" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF43PE" role="1SL9yI">
      <property role="TrG5h" value="resumeWithoutResponse" />
      <node concept="3cqZAl" id="7C_wgEF43PF" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF43PG" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45tk" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45tl" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45tm" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45tn" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45to" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45tp" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF44tV" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55PghR" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55PghS" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PghT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55PghU" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Rg" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45tl" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55PghW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PghX" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45tx" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45ty" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF45tz" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45t$" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63tW" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45tl" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45tA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF45tB" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45tC" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45tD" role="3cpWs9">
            <property role="TrG5h" value="attachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45tE" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45tF" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63pI" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45tl" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45tH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45tI" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF45tJ" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45tK" role="37wK5m">
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <node concept="10M0yZ" id="7C_wgEF45tL" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43Qx" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55Pgi5" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiViY" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Ac" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55PghS" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiVj3" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="1ZspCbdiViW" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pgir" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgi8" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgiw" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgix" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiWsV" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43QF" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43QG" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63j6" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45ty" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF43QI" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43QJ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Wz" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PghS" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43QL" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF43QM" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF43QN" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF43QO" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF43QP" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63HH" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45tD" resolve="attachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF43QR" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF43QS" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF43QT" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43QU" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63ub" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF45ty" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF43QW" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF43QX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63hY" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PghS" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4a2D">
    <property role="TrG5h" value="SessionNotAttached" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF4a2E" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF4a2F" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4a2G" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4a2H" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a2I" role="3cpWs9">
            <property role="TrG5h" value="programStateMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a2J" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a2K" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4a2L" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a2M" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a2N" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a2O" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a2P" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4a2Q" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a2R" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a2S" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a2T" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a2U" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4a2V" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a2W" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a2X" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="69Byf55PgjH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a2Z" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PgjC" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a31" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a32" role="3cpWs9">
            <property role="TrG5h" value="tracePathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4a33" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4a34" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a35" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a36" role="3cpWs9">
            <property role="TrG5h" value="binaryPathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4a37" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4a38" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a39" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a3a" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="projectMock" />
            <node concept="3uibUv" id="7C_wgEF4a3b" role="1tU5fm">
              <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a3c" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4a3d" role="37wK5m">
                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a3e" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a3f" role="3cpWs9">
            <property role="TrG5h" value="modelMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="29so9VcrKkY" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a3h" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="29so9VcrL9s" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a3j" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a3k" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a3l" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a3m" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4a3n" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a3o" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4a3p" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a3q" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4a3r" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4a3s" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF4a3t" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF4a3u" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF4a3v" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="7C_wgEF4a3w" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF4a3x" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="7C_wgEF4a3y" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF4a3z" role="3clF45" />
                      <node concept="3clFbS" id="7C_wgEF4a3$" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF4a3_" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a3A" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Te" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4a3C" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a3D" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63y6" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a2I" resolve="programStateMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a3F" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a3G" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62T8" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4a3I" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a3J" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63cu" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a2N" resolve="breakpointRegistryMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a3L" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a3M" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62ZT" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4a3O" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a3P" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63UB" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a2S" resolve="stepperMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a3R" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a3S" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh633z" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PgjT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a3V" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63RR" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a2X" resolve="sessionMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a3X" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a3Y" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Uy" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4a40" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a41" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63jH" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a3a" resolve="projectMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a43" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a44" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62S9" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="29so9VcrJPD" role="37wK5m">
                                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a47" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63LR" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a3f" resolve="modelMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0KJU8" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0KJU9" role="3clFbG">
                            <node concept="1rXfSq" id="58boHs0KJUa" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="58boHs0KJUb" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0KJUc" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="58boHs0KJUd" role="37wK5m">
                                <node concept="YeOm9" id="58boHs0KJUe" role="2ShVmc">
                                  <node concept="1Y3b0j" id="58boHs0KJUf" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="58boHs0KJUg" role="1B3o_S" />
                                    <node concept="3clFb_" id="58boHs0KJUh" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getProject" />
                                      <node concept="3uibUv" id="58boHs0KJUi" role="3clF45">
                                        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KJUj" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUk" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUl" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KJUm" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KJUn" role="37wK5m">
                                              <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUo" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinary" />
                                      <node concept="3uibUv" id="58boHs0KJUp" role="3clF45">
                                        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KJUq" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUr" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUs" role="3cqZAp">
                                          <node concept="10Nm6u" id="58boHs0KJUt" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUu" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModel" />
                                      <node concept="H_c77" id="58boHs0KJUv" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJUw" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUx" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUy" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KJUz" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KJU$" role="37wK5m">
                                              <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJU_" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModules" />
                                      <node concept="2I9FWS" id="58boHs0KJUA" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJUB" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUC" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUD" role="3cqZAp">
                                          <node concept="2ShNRf" id="58boHs0KJUE" role="3clFbG">
                                            <node concept="2T8Vx0" id="58boHs0KJUF" role="2ShVmc">
                                              <node concept="2I9FWS" id="58boHs0KJUG" role="2T96Bj" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUH" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getTracePath" />
                                      <node concept="17QB3L" id="58boHs0KJUI" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJUJ" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUK" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUL" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KJUM" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="4jk7wJwfZZH" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="showUnmappedVariables" />
                                      <node concept="10P_77" id="4jk7wJwfZZI" role="3clF45" />
                                      <node concept="3Tm1VV" id="4jk7wJwfZZJ" role="1B3o_S" />
                                      <node concept="3clFbS" id="4jk7wJwfZZM" role="3clF47">
                                        <node concept="3clFbF" id="4jk7wJwfZZO" role="3cqZAp">
                                          <node concept="3clFbT" id="4jk7wJwfZZN" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUN" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinaryPath" />
                                      <node concept="17QB3L" id="58boHs0KJUO" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJUP" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUQ" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUR" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KJUS" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUT" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getLaunchTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KJUU" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJUV" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJUW" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJUX" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KJUY" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KJUZ" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getCommandTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KJV0" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KJV1" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KJV2" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KJV3" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KJV4" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0KJV5" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0KJV6" role="3clFbG">
                            <node concept="2OqwBi" id="58boHs0KJV7" role="2Oq$k0">
                              <node concept="1rXfSq" id="58boHs0KJV8" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="58boHs0KJV9" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="58boHs0KJVa" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="58boHs0KJVb" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="58boHs0KJVc" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0KJVd" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="58boHs0KJVe" role="37wK5m">
                                <property role="3cmrfH" value="300" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a4t" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a4u" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62SE" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4a4w" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a4x" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63jN" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4a3k" resolve="sessionStateContextMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a4z" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a4$" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4a4_" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62TP" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4a4B" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4a4C" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4a4D" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4a4E" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a4F" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4a4G" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLHa" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a4H" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a4I" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4a4J" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62WE" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4a4L" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4a4M" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4a4N" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4a4O" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a4P" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4a4Q" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLH8" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a4R" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a4S" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4a4T" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62VV" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4a4V" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4a4W" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4a4X" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4a4Y" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a4Z" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4a50" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a51" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a52" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4a53" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh631R" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4a55" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4a56" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4a57" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4a58" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a59" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4a5a" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLH7" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4a5b" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4a5c" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4a5d" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62VJ" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4a5f" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4a5g" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4a5h" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4a5i" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4a5j" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4a5k" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLH9" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="4ktgw6PNEbr" role="3cqZAp">
                          <node concept="2OqwBi" id="4ktgw6PNEbs" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62XM" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4ktgw6PNEbu" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4ktgw6PNEbv" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="4ktgw6PNEbw" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="4ktgw6PNEbx" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF4a5l" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63l3" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF4a3q" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4a5n" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocationsWhenSessionNotAttached" />
      <node concept="3cqZAl" id="7C_wgEF4a5o" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4a5p" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4a5q" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a5r" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4a5s" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a5t" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4a5u" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4a5v" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4a2E" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a5I" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a5J" role="3cpWs9">
            <property role="TrG5h" value="notAttachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a5K" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a5L" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63WV" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a5r" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a5N" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4a5O" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4a5P" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4a5Q" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4a5R" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a5S" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4a5T" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4a5U" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4a5V" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63tQ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a5J" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a5X" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GI" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4a5Y" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4a5Z" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4a60" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4a61" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Cf" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a5J" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a63" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GQ" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4a66" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4a6d" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4a6e" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4a6f" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63IW" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a5J" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a6h" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMycP" resolve="getProgramStateAccessor" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4a6i" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIb_E" resolve="TRSessionNotAttachedException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4a6j" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4a6k" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4a6l" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh639H" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a5J" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a6n" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMyd3" resolve="getStepper" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4a6o" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIb_E" resolve="TRSessionNotAttachedException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4a6p" role="1SL9yI">
      <property role="TrG5h" value="fromNotAttachedToAttached" />
      <node concept="3cqZAl" id="7C_wgEF4a6q" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4a6r" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4a6s" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a6t" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4a6u" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a6v" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4a6w" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4a6x" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4a2E" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55PgjX" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55PgjY" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PgjZ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pgk0" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63$b" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a6t" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgk2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgk3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a6D" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a6E" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4a6F" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a6G" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63gO" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a6t" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a6I" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4a6J" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7W4QWPKukuR" role="3cqZAp">
          <node concept="3cpWsn" id="7W4QWPKukuS" role="3cpWs9">
            <property role="TrG5h" value="pendingBreakpointSetterMock" />
            <node concept="3uibUv" id="7W4QWPKukuT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
            </node>
            <node concept="2OqwBi" id="7W4QWPKukve" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63nZ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a6t" resolve="injector" />
              </node>
              <node concept="liA8E" id="7W4QWPKukvk" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7W4QWPKukvq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a6K" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a6L" role="3cpWs9">
            <property role="TrG5h" value="notAttachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a6M" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a6N" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Te" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a6t" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a6P" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4a6Q" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4a6R" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4a6S" role="37wK5m">
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <node concept="10M0yZ" id="7C_wgEF4a6T" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a6U" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a6V" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a6W" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63gI" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4a6E" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4a6Y" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4a6Z" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4a70" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4a71" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a72" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4a73" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4a74" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4a75" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2SEaHiJVgow" role="3cqZAp">
          <node concept="3cpWsn" id="2SEaHiJVgox" role="3cpWs9">
            <property role="TrG5h" value="dummyList" />
            <node concept="2I9FWS" id="2SEaHiJVgoy" role="1tU5fm" />
            <node concept="2ShNRf" id="2SEaHiJVgoG" role="33vP2m">
              <node concept="2T8Vx0" id="2SEaHiJVgoI" role="2ShVmc">
                <node concept="2I9FWS" id="2SEaHiJVgoJ" role="2T96Bj" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgka" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWr2" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63zy" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55PgjY" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWr4" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
              <node concept="2YIFZM" id="58boHs0FODX" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="58boHs0FODY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgkc" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pgkd" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgke" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgkf" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgkg" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKukvZ" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKukwl" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKukw2" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKukvQ" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63VQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKukuS" resolve="pendingBreakpointSetterMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKukvW" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4TARtUj27p5" resolve="numberOfInitialBreakpoints" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKukwq" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKukwr" role="37wK5m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKukws" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPKukwt" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPKukwu" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="7W4QWPKukwv" role="37wK5m">
                <node concept="37vLTw" id="4WqJ5Sh63iU" role="2Oq$k0">
                  <ref role="3cqZAo" node="7W4QWPKukuS" resolve="pendingBreakpointSetterMock" />
                </node>
                <node concept="liA8E" id="7W4QWPKukwC" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:S3LJavABdG" resolve="setPendingBreakpoints" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPKukwy" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="7W4QWPKukwz" role="37wK5m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKukvv" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a7m" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a7n" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63d5" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4a6E" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPKukwE" role="3cqZAp">
          <node concept="2YIFZM" id="7W4QWPKukwF" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63U3" role="37wK5m">
              <ref role="3cqZAo" node="7W4QWPKukuS" resolve="pendingBreakpointSetterMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4a7p" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a7q" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Gp" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PgjY" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a7s" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a7t" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a7u" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF4a7v" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF4a7w" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF4a7x" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF4a7y" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF4a7z" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="7C_wgEF4a7$" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF4a7_" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF4a7A" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF4a7B" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF4a7C" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF4a7D" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF4a7E" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF4a7F" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF4a7G" role="3clFbG">
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <node concept="3cmrfG" id="7C_wgEF4a7H" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF4a7I" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF4a7J" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63Si" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF4a6L" resolve="notAttachedSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF4a7L" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GM" resolve="debuggerAttached" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF4a7M" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF4a7N" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF4a7O" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF4a7P" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF4a7Q" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF4a7R" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF4a7S" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF4a7T" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF4a7U" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63gp" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF4a7N" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF4a7W" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF4a7X" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4a7Y" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a7Z" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a80" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a81" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Gm" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4a6L" resolve="notAttachedSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF4a83" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a84" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a85" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a86" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63tZ" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4a6E" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4a88" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a89" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63Lm" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PgjY" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4a8b" role="1SL9yI">
      <property role="TrG5h" value="tryingToAttachWithoutResponse" />
      <node concept="3cqZAl" id="7C_wgEF4a8c" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4a8d" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4a8e" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a8f" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4a8g" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a8h" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4a8i" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4a8j" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4a2E" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55Pgki" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55Pgkj" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pgkk" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pgkl" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63gF" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a8f" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgkn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgko" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a8r" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a8s" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4a8t" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a8u" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh639N" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a8f" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a8w" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4a8x" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4a8y" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4a8z" role="3cpWs9">
            <property role="TrG5h" value="notAttachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4a8$" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4a8_" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63uS" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a8f" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a8B" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4a8C" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4a8D" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4a8E" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4a8F" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a8G" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a8H" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a8I" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63L1" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4a8s" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4a8K" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4a8L" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4a8M" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4a8N" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4a8O" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4a8P" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4a8Q" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4a8R" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2SEaHiJVgqr" role="3cqZAp">
          <node concept="3cpWsn" id="2SEaHiJVgqs" role="3cpWs9">
            <property role="TrG5h" value="dummyList" />
            <node concept="2I9FWS" id="2SEaHiJVgqt" role="1tU5fm" />
            <node concept="2ShNRf" id="2SEaHiJVgqu" role="33vP2m">
              <node concept="2T8Vx0" id="2SEaHiJVgqv" role="2ShVmc">
                <node concept="2I9FWS" id="2SEaHiJVgqw" role="2T96Bj" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgky" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiVk2" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63aP" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55Pgkj" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiVk4" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
              <node concept="2YIFZM" id="58boHs0FEOZ" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="58boHs0FI$p" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgk$" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pgk_" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PgkA" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PgkB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55PgkC" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="69Byf55PgkE" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4a98" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a99" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63wz" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4a8s" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4a9b" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4a9c" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63gj" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgkj" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4a9e" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4a9f" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4a9g" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4a9h" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4a9i" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Ml" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4a8z" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4a9k" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4bzk">
    <property role="TrG5h" value="SessionRunning" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF4bzl" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF4bzm" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4bzn" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4bzo" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzp" role="3cpWs9">
            <property role="TrG5h" value="programStateMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4bzq" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bzr" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4bzs" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzt" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzu" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4bzv" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bzw" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4bzx" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzy" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzz" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4bz$" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bz_" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4bzA" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzB" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzC" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="69Byf55PglD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bzE" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PglJ" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzG" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzH" role="3cpWs9">
            <property role="TrG5h" value="tracePathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4bzI" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4bzJ" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzK" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzL" role="3cpWs9">
            <property role="TrG5h" value="binaryPathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4bzM" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4bzN" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzO" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzP" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="projectMock" />
            <node concept="3uibUv" id="7C_wgEF4bzQ" role="1tU5fm">
              <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bzR" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4bzS" role="37wK5m">
                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzT" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzU" role="3cpWs9">
            <property role="TrG5h" value="modelMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="29so9VcrVGo" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4bzW" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="29so9VcrWy5" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bzY" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bzZ" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4b$0" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4b$1" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4b$2" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4b$3" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4b$4" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4b$5" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4b$6" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4b$7" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF4b$8" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF4b$9" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF4b$a" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="7C_wgEF4b$b" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF4b$c" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="7C_wgEF4b$d" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF4b$e" role="3clF45" />
                      <node concept="3clFbS" id="7C_wgEF4b$f" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF4b$g" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$h" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh6305" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4b$j" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$k" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63aD" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzp" resolve="programStateMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b$m" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$n" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Zx" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4b$p" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$q" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63Eb" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzu" resolve="breakpointRegistryMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b$s" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$t" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62UZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4b$v" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$w" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63C$" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzz" resolve="stepperMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b$y" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$z" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh630J" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PglT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$A" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63Eq" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzC" resolve="sessionMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b$C" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$D" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh632c" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4b$F" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$G" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63gg" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzP" resolve="projectMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b$I" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b$J" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Wo" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="29so9VcrVd0" role="37wK5m">
                                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b$M" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh639u" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzU" resolve="modelMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0KAND" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0KANE" role="3clFbG">
                            <node concept="1rXfSq" id="58boHs0KANF" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="58boHs0KANG" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0KANH" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="58boHs0KANI" role="37wK5m">
                                <node concept="YeOm9" id="58boHs0KANJ" role="2ShVmc">
                                  <node concept="1Y3b0j" id="58boHs0KANK" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="58boHs0KANL" role="1B3o_S" />
                                    <node concept="3clFb_" id="58boHs0KANM" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getProject" />
                                      <node concept="3uibUv" id="58boHs0KANN" role="3clF45">
                                        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KANO" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KANP" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KANQ" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KANR" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KANS" role="37wK5m">
                                              <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KANT" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinary" />
                                      <node concept="3uibUv" id="58boHs0KANU" role="3clF45">
                                        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0KANV" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KANW" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KANX" role="3cqZAp">
                                          <node concept="10Nm6u" id="58boHs0KANY" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KANZ" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModel" />
                                      <node concept="H_c77" id="58boHs0KAO0" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAO1" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAO2" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAO3" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0KAO4" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0KAO5" role="37wK5m">
                                              <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KAO6" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModules" />
                                      <node concept="2I9FWS" id="58boHs0KAO7" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAO8" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAO9" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAOa" role="3cqZAp">
                                          <node concept="2ShNRf" id="58boHs0KAOb" role="3clFbG">
                                            <node concept="2T8Vx0" id="58boHs0KAOc" role="2ShVmc">
                                              <node concept="2I9FWS" id="58boHs0KAOd" role="2T96Bj" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KAOe" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getTracePath" />
                                      <node concept="17QB3L" id="58boHs0KAOf" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAOg" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAOh" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAOi" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KAOj" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="4jk7wJwg5RB" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="showUnmappedVariables" />
                                      <node concept="10P_77" id="4jk7wJwg5RC" role="3clF45" />
                                      <node concept="3Tm1VV" id="4jk7wJwg5RD" role="1B3o_S" />
                                      <node concept="3clFbS" id="4jk7wJwg5RG" role="3clF47">
                                        <node concept="3clFbF" id="4jk7wJwg5RI" role="3cqZAp">
                                          <node concept="3clFbT" id="4jk7wJwg5RH" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KAOk" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinaryPath" />
                                      <node concept="17QB3L" id="58boHs0KAOl" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAOm" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAOn" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAOo" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0KAOp" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KAOq" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getLaunchTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KAOr" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAOs" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAOt" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAOu" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KAOv" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0KAOw" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getCommandTimeout" />
                                      <node concept="10Oyi0" id="58boHs0KAOx" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0KAOy" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0KAOz" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0KAO$" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0KAO_" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4bXT" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4bXU" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4bXV" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh6335" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4bXX" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4bXY" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4bXZ" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="7C_wgEF4bY0" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4bY1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="7C_wgEF4bY2" role="37wK5m">
                                <property role="3cmrfH" value="300" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_8" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_9" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh636w" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4b_b" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_c" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63iL" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4bzZ" resolve="sessionStateContextMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_e" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_f" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4b_g" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62V5" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4b_i" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4b_j" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4b_k" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4b_l" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_m" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4b_n" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLYy" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_o" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_p" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4b_q" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62Xq" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4b_s" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4b_t" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4b_u" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4b_v" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_w" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4b_x" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMcg" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_y" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_z" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4b_$" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh634m" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4b_A" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4b_B" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4b_C" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4b_D" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_E" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4b_F" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMcf" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_G" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_H" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4b_I" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh632$" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4b_K" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4b_L" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4b_M" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4b_N" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_O" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4b_P" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMce" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4b_Q" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4b_R" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4b_S" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62Us" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4b_U" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4b_V" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4b_W" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4b_X" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4b_Y" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4b_Z" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMch" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="4ktgw6PNEcw" role="3cqZAp">
                          <node concept="2OqwBi" id="4ktgw6PNEcx" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62S3" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4ktgw6PNEcz" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4ktgw6PNEc$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="4ktgw6PNEc_" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="4ktgw6PNEcA" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF4bA0" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63BN" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF4b$5" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4bA2" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocationsWhenSessionRunning" />
      <node concept="3cqZAl" id="7C_wgEF4bA3" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4bA4" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4bA5" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bA6" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4bA7" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4bA8" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4bA9" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4bAa" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4bzl" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4bAp" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4bAq" role="3cpWs9">
            <property role="TrG5h" value="runningSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4bAr" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4bAs" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63uY" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bA6" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bAu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4bAv" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4bAw" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4bAx" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4bAy" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4bAz" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4bA$" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bA_" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bAA" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63PV" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bAC" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GI" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBh" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4bAM" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bAN" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bAO" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63O7" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bAQ" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GM" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBt" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4bAY" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4bAZ" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bB0" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bB1" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63HZ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bB3" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBv" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4bB5" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bB6" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bB7" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Qg" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bB9" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBw" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4bB_" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4bBA" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bBB" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bBC" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Vn" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bBE" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMycW" resolve="getBreakpointRegistry" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pB_" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4bBG" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bBH" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bBI" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63f9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bBK" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMycP" resolve="getProgramStateAccessor" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBA" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4bBM" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4bBN" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4bBO" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63pR" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4bAq" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4bBQ" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMyd3" resolve="getStepper" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4pBB" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4q5a" role="1SL9yI">
      <property role="TrG5h" value="fromRunningToTerminated" />
      <node concept="3cqZAl" id="7C_wgEF4q5b" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4q5c" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4q7q" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4q7r" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4q7s" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4q7t" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4q7u" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4q7v" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4bzl" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55Pgm7" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55Pgm8" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pgm9" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pgma" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63PM" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4q7r" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgmc" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgmd" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4q7B" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4q7C" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4q7D" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4q7E" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63oP" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4q7r" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4q7G" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4q7H" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4q7I" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4q7J" role="3cpWs9">
            <property role="TrG5h" value="runningSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4q7K" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4q7L" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63$V" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4q7r" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4q7N" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4q7O" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4q7P" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4q7Q" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4q7R" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4q9K" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4q9Q" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4q9R" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63sd" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4q7C" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4q9T" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4q9U" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4q9V" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4q9W" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4q9X" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4q9Y" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4q9Z" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4qa0" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgml" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWop" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63lE" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55Pgm8" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWor" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55Pgmn" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pgmo" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgmp" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgmq" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgmr" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiVl9" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qaa" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qab" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63tN" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4q7C" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qad" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qae" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63T8" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgm8" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qag" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qah" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4qai" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF4qaj" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF4qak" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF4qal" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF4qam" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF4qan" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="7C_wgEF4qao" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF4qap" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF4qaq" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF4qar" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF4qas" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF4qat" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF4qau" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF4qav" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF4qaw" role="3clFbG">
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <node concept="3cmrfG" id="7C_wgEF4qax" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF4qay" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF4qaz" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63Rm" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF4q7J" resolve="runningSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF4qa_" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GE" resolve="debuggerDetached" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF4qaA" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF4qaB" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF4qaC" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF4qaD" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF4qaE" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF4qaF" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF4qaG" role="2Oq$k0">
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF4qaH" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF4qaI" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63ti" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF4qaB" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF4qaK" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF4qaL" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4qaM" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qaN" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qaO" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4qaP" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63zX" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4q7J" resolve="runningSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF4qaR" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qaS" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qaT" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qaU" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63mG" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4q7C" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qaW" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qaX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63vS" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgm8" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4q5g" role="1SL9yI">
      <property role="TrG5h" value="terminateWithoutResponse" />
      <node concept="3cqZAl" id="7C_wgEF4q5h" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4q5i" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4qb6" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qb7" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4qb8" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qb9" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4qba" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4qbb" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4bzl" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55Pgmt" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55Pgmu" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pgmv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pgmw" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh638I" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qb7" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgmy" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgmz" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4qbj" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qbk" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4qbl" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qbm" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63xp" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qb7" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4qbo" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4qbp" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4qbq" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qbr" role="3cpWs9">
            <property role="TrG5h" value="runningSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4qbs" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qbt" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63x1" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qb7" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4qbv" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4qbw" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4qbx" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4qby" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4qbz" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qb$" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55PgmF" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWo7" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63Og" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55Pgmu" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWo9" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="1ZspCbdiWo4" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55Pgn1" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PgmH" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgn6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgn7" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiWol" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qfl" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qfm" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63SQ" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4qbk" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qfo" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qfp" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Lj" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgmu" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qfr" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4qfs" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4qft" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4qfu" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4qfv" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63on" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qbr" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4qfx" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qfy" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qfz" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qf$" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63R7" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4qbk" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qfA" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qfB" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63ak" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgmu" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4q5m" role="1SL9yI">
      <property role="TrG5h" value="fromRunningToSuspended" />
      <node concept="3cqZAl" id="7C_wgEF4q5n" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4q5o" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4qfI" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qfJ" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4qfK" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qfL" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4qfM" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4qfN" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4bzl" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4qfV" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qfW" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4qfX" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qfY" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Mr" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qfJ" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4qg0" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4qg1" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4qg2" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4qg3" role="3cpWs9">
            <property role="TrG5h" value="runningSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4qg4" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4qg5" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63dn" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4qfJ" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4qg7" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4qg8" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4qg9" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4qga" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4qgb" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qgc" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qgd" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4qge" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63M9" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4qfW" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4qgg" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4qgh" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4qia" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qgj" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4qgk" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4qgl" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4qgm" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4qgn" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4qgx" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qgy" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63zC" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4qfW" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qgB" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qgT" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4qgU" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63$P" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4qg3" resolve="runningSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF4qgW" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BM$GQ" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4qhf" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4qhg" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4qhh" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63fK" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4qfW" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="7C_wgEF4r1Y">
    <property role="TrG5h" value="SessionSuspended" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF4r1Z" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF4r20" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF4r21" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4r22" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r23" role="3cpWs9">
            <property role="TrG5h" value="programStateMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r24" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r25" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4r26" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r27" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r28" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r29" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2a" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4r2b" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2c" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2d" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r2e" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2f" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4r2g" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2h" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2i" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="69Byf55Pgok" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2k" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55Pgoq" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2m" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2n" role="3cpWs9">
            <property role="TrG5h" value="tracePathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4r2o" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4r2p" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2q" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2r" role="3cpWs9">
            <property role="TrG5h" value="binaryPathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF4r2s" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF4r2t" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2u" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2v" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="projectMock" />
            <node concept="3uibUv" id="7C_wgEF4r2w" role="1tU5fm">
              <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2x" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4r2y" role="37wK5m">
                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2z" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2$" role="3cpWs9">
            <property role="TrG5h" value="modelMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="29so9Vcs7E5" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2A" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="29so9Vcs8ut" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r2C" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2D" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r2E" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2F" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF4r2G" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r2H" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF4r2I" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r2J" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4r2K" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF4r2L" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="7C_wgEF4r2M" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF4r2N" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF4r2O" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="7C_wgEF4r2P" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF4r2Q" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="7C_wgEF4r2R" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF4r2S" role="3clF45" />
                      <node concept="3clFbS" id="7C_wgEF4r2T" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF4r2U" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r2V" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Vb" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4r2X" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r2Y" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63nW" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r23" resolve="programStateMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r30" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r31" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62X2" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4r33" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r34" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63zv" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r28" resolve="breakpointRegistryMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r36" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r37" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh632u" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4r39" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r3a" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63OO" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r2d" resolve="stepperMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r3c" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r3d" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh633h" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PgoE" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r3g" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63$q" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r2i" resolve="sessionMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r3i" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r3j" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh634g" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4r3l" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r3m" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63qr" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r2v" resolve="projectMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r3o" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r3p" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62Ys" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="29so9Vcs7h3" role="37wK5m">
                                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r3s" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63sU" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r2$" resolve="modelMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0LgK9" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0LgKa" role="3clFbG">
                            <node concept="1rXfSq" id="58boHs0LgKb" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="58boHs0LgKc" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0LgKd" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="58boHs0LgKe" role="37wK5m">
                                <node concept="YeOm9" id="58boHs0LgKf" role="2ShVmc">
                                  <node concept="1Y3b0j" id="58boHs0LgKg" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="58boHs0LgKh" role="1B3o_S" />
                                    <node concept="3clFb_" id="58boHs0LgKi" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getProject" />
                                      <node concept="3uibUv" id="58boHs0LgKj" role="3clF45">
                                        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0LgKk" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKl" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKm" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0LgKn" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0LgKo" role="37wK5m">
                                              <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKp" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinary" />
                                      <node concept="3uibUv" id="58boHs0LgKq" role="3clF45">
                                        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0LgKr" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKs" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKt" role="3cqZAp">
                                          <node concept="10Nm6u" id="58boHs0LgKu" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKv" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModel" />
                                      <node concept="H_c77" id="58boHs0LgKw" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgKx" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKy" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKz" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0LgK$" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0LgK_" role="37wK5m">
                                              <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKA" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModules" />
                                      <node concept="2I9FWS" id="58boHs0LgKB" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgKC" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKD" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKE" role="3cqZAp">
                                          <node concept="2ShNRf" id="58boHs0LgKF" role="3clFbG">
                                            <node concept="2T8Vx0" id="58boHs0LgKG" role="2ShVmc">
                                              <node concept="2I9FWS" id="58boHs0LgKH" role="2T96Bj" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKI" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getTracePath" />
                                      <node concept="17QB3L" id="58boHs0LgKJ" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgKK" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKL" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKM" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0LgKN" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKO" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinaryPath" />
                                      <node concept="17QB3L" id="58boHs0LgKP" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgKQ" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKR" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKS" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0LgKT" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="4jk7wJwgc2m" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="showUnmappedVariables" />
                                      <node concept="10P_77" id="4jk7wJwgc2n" role="3clF45" />
                                      <node concept="3Tm1VV" id="4jk7wJwgc2o" role="1B3o_S" />
                                      <node concept="3clFbS" id="4jk7wJwgc2r" role="3clF47">
                                        <node concept="3clFbF" id="4jk7wJwgc2t" role="3cqZAp">
                                          <node concept="3clFbT" id="4jk7wJwgc2s" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgKU" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getLaunchTimeout" />
                                      <node concept="10Oyi0" id="58boHs0LgKV" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgKW" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgKX" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgKY" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0LgKZ" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LgL0" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getCommandTimeout" />
                                      <node concept="10Oyi0" id="58boHs0LgL1" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LgL2" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LgL3" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LgL4" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0LgL5" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0LgL6" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0LgL7" role="3clFbG">
                            <node concept="2OqwBi" id="58boHs0LgL8" role="2Oq$k0">
                              <node concept="1rXfSq" id="58boHs0LgL9" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="58boHs0LgLa" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="58boHs0LgLb" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="58boHs0LgLc" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="58boHs0LgLd" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0LgLe" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="58boHs0LgLf" role="37wK5m">
                                <property role="3cmrfH" value="300" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r3W" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r3X" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh633J" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF4r3Z" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r40" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh639o" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF4r2D" resolve="sessionStateContextMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r42" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r43" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4r44" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62YU" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4r46" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4r47" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4r48" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4r49" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r4a" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4r4b" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMdh" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r4c" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r4d" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4r4e" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62XA" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4r4g" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4r4h" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4r4i" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4r4j" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r4k" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4r4l" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMdi" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r4m" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r4n" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4r4o" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62TA" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4r4q" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4r4r" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4r4s" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4r4t" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r4u" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4r4v" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLrX" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r4w" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r4x" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4r4y" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh632i" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4r4$" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4r4_" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4r4A" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF4r4B" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r4C" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4r4D" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sMsD" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF4r4E" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF4r4F" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF4r4G" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh6350" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF4r4I" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF4r4J" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF4r4K" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF4r4L" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF4r4M" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF4r4N" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLJ7" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="4ktgw6PNEdG" role="3cqZAp">
                          <node concept="2OqwBi" id="4ktgw6PNEdH" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh630h" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4ktgw6PNEdJ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4ktgw6PNEdK" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="4ktgw6PNEdL" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="4ktgw6PNEdM" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF4r4O" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63tE" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF4r2J" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4r4Q" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocationsWhenSessionRunning" />
      <node concept="3cqZAl" id="7C_wgEF4r4R" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4r4S" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4r4T" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r4U" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4r4V" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r4W" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4r4X" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4r4Y" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4r1Z" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r5d" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r5e" role="3cpWs9">
            <property role="TrG5h" value="runningSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r5f" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r5g" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63LF" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r4U" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r5i" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4r5j" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4r5k" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4r5l" role="37wK5m">
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <node concept="10M0yZ" id="7C_wgEF4r5m" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r5n" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4r5o" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4r5p" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4r5q" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63P6" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r5e" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r5s" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GM" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4r5t" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4r5u" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4r5v" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4r5w" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63zF" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r5e" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r5y" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GQ" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4sop" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r5$" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4r5_" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4r5A" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4r5B" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63cN" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r5e" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r5D" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4r5E" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4r5F" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4r5G" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4r5H" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63ji" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r5e" resolve="runningSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r5J" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF3Rwc" resolve="runUntilSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4vT2" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4r64" role="1SL9yI">
      <property role="TrG5h" value="fromSuspendedToTerminated" />
      <node concept="3cqZAl" id="7C_wgEF4r65" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4r66" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4r67" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r68" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4r69" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r6a" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4r6b" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4r6c" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4r1Z" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55PgoJ" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55PgoK" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PgoL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55PgoM" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63s_" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r68" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55PgoO" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PgoP" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r6k" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r6l" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4r6m" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r6n" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63NM" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r68" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r6p" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4r6q" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r6r" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r6s" role="3cpWs9">
            <property role="TrG5h" value="suspendedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r6t" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r6u" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Q4" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r68" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r6w" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4r6x" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4r6y" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4r6z" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4r6$" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r6_" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r6A" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r6B" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63R_" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4r6l" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r6D" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4r6E" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4rjY" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r6G" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r6H" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4r6I" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r6J" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4r6K" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PgoW" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r6M" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63nI" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55PgoK" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r6O" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PgoY" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PgoZ" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgp0" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgp1" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgp2" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiVmB" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r6U" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r6V" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Om" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r6l" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r6X" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r6Y" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63_I" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PgoK" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r70" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r71" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r72" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF4r73" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF4r74" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF4r75" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF4r76" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF4r77" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7C_wgEF4r78" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF4r79" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF4r7a" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF4r7b" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF4r7c" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF4r7d" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF4r7e" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF4r7f" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF4r7g" role="3clFbG">
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <node concept="3cmrfG" id="7C_wgEF4r7h" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF4r7i" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF4r7j" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63bU" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF4r6s" resolve="suspendedSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF4r7l" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GE" resolve="debuggerDetached" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF4r7m" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF4r7n" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF4r7o" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF4r7p" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF4r7q" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF4r7r" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF4r7s" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF4r7t" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF4r7u" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63_s" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF4r7n" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF4r7w" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF4r7x" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4r7y" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r7z" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r7$" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r7_" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63sI" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4r6s" resolve="suspendedSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r7B" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r7C" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r7D" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r7E" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63F6" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r6l" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r7G" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r7H" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63Mx" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55PgoK" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4r7J" role="1SL9yI">
      <property role="TrG5h" value="terminateWithoutResponse" />
      <node concept="3cqZAl" id="7C_wgEF4r7K" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4r7L" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4r7M" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r7N" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4r7O" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r7P" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4r7Q" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4r7R" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4r1Z" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="69Byf55Pgp4" role="3cqZAp">
          <node concept="3cpWsn" id="69Byf55Pgp5" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55Pgp6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="69Byf55Pgp7" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63eg" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r7N" resolve="injector" />
              </node>
              <node concept="liA8E" id="69Byf55Pgp9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55Pgpa" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r7Z" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r80" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4r81" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r82" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63UN" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r7N" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r84" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4r85" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r86" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r87" role="3cpWs9">
            <property role="TrG5h" value="suspendedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r88" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r89" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63wA" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r7N" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r8b" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4r8c" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF4r8d" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4r8e" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4r8f" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r8g" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55Pgpi" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWmZ" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63P9" role="2Oq$k0">
              <ref role="3cqZAo" node="69Byf55Pgp5" resolve="sessionMock" />
            </node>
            <node concept="liA8E" id="1ZspCbdiWn1" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="1ZspCbdiWmW" role="3cqZAp">
          <node concept="2OqwBi" id="1ZspCbdiWmX" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55Pgpk" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55Pgpo" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="69Byf55Pgpp" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1ZspCbdiWn7" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r8q" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r8r" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63PD" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r80" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r8t" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r8u" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63u8" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgp5" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r8w" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4r8x" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4r8y" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4r8z" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4r8$" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63hA" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r87" resolve="suspendedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r8A" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r8B" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r8C" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r8D" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63ns" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r80" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r8F" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r8G" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63Nn" role="37wK5m">
              <ref role="3cqZAo" node="69Byf55Pgp5" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4r8I" role="1SL9yI">
      <property role="TrG5h" value="fromSuspendedToRunning" />
      <node concept="3cqZAl" id="7C_wgEF4r8J" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4r8K" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4r8L" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r8M" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4r8N" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r8O" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4r8P" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4r8Q" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4r1Z" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r8Y" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r8Z" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4r90" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r91" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63Ff" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r8M" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r93" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4r94" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4r95" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4r96" role="3cpWs9">
            <property role="TrG5h" value="suspendedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4r97" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4r98" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63H0" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4r8M" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4r9a" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4r9b" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4r9c" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4r9d" role="37wK5m">
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <node concept="10M0yZ" id="7C_wgEF4r9e" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r9f" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r9g" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r9h" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63uP" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4r8Z" resolve="sessionStateContextMock" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r9j" role="2OqNvi">
              <ref role="37wK5l" to="u02k:30gDo8BMykR" resolve="setState" />
              <node concept="2YIFZM" id="7C_wgEF4r9k" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="7C_wgEF4rkb" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r9m" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r9n" role="3clFbG">
            <node concept="2YIFZM" id="7C_wgEF4r9o" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r9p" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="7C_wgEF4r9q" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7C_wgEF4r9r" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r9s" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63B$" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r8Z" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r9u" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4roM" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4roN" role="3clFbG">
            <node concept="2ShNRf" id="7C_wgEF4roO" role="2Oq$k0">
              <node concept="1pGfFk" id="7C_wgEF4roP" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~Thread.&lt;init&gt;(java.lang.Runnable)" resolve="Thread" />
                <node concept="2ShNRf" id="7C_wgEF4roQ" role="37wK5m">
                  <node concept="YeOm9" id="7C_wgEF4roR" role="2ShVmc">
                    <node concept="1Y3b0j" id="7C_wgEF4roS" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="7C_wgEF4roT" role="1B3o_S" />
                      <node concept="3clFb_" id="7C_wgEF4roU" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="7C_wgEF4roV" role="1B3o_S" />
                        <node concept="3cqZAl" id="7C_wgEF4roW" role="3clF45" />
                        <node concept="3clFbS" id="7C_wgEF4roX" role="3clF47">
                          <node concept="SfApY" id="7C_wgEF4roY" role="3cqZAp">
                            <node concept="3clFbS" id="7C_wgEF4roZ" role="SfCbr">
                              <node concept="3clFbF" id="7C_wgEF4rp0" role="3cqZAp">
                                <node concept="2YIFZM" id="7C_wgEF4rp1" role="3clFbG">
                                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                                  <node concept="3cmrfG" id="7C_wgEF4rp2" role="37wK5m">
                                    <property role="3cmrfH" value="100" />
                                  </node>
                                </node>
                              </node>
                              <node concept="3clFbF" id="7C_wgEF4rp3" role="3cqZAp">
                                <node concept="2OqwBi" id="7C_wgEF4rp4" role="3clFbG">
                                  <node concept="37vLTw" id="4WqJ5Sh63eL" role="2Oq$k0">
                                    <ref role="3cqZAo" node="7C_wgEF4r96" resolve="suspendedSession" />
                                  </node>
                                  <node concept="liA8E" id="7C_wgEF4rp6" role="2OqNvi">
                                    <ref role="37wK5l" to="u02k:30gDo8BM$GI" resolve="debuggerResumed" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="TDmWw" id="7C_wgEF4rp9" role="TEbGg">
                              <node concept="3cpWsn" id="7C_wgEF4rpa" role="TDEfY">
                                <property role="TrG5h" value="e" />
                                <node concept="3uibUv" id="7C_wgEF4rpb" role="1tU5fm">
                                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                                </node>
                              </node>
                              <node concept="3clFbS" id="7C_wgEF4rpc" role="TDEfX">
                                <node concept="3clFbF" id="7C_wgEF4rpd" role="3cqZAp">
                                  <node concept="2OqwBi" id="7C_wgEF4rpe" role="3clFbG">
                                    <node concept="10M0yZ" id="7C_wgEF4rpf" role="2Oq$k0">
                                      <ref role="3cqZAo" to="wyt6:~System.err" resolve="err" />
                                      <ref role="1PxDUh" to="wyt6:~System" resolve="System" />
                                    </node>
                                    <node concept="liA8E" id="7C_wgEF4rpg" role="2OqNvi">
                                      <ref role="37wK5l" to="guwi:~PrintStream.println(java.lang.String):void" resolve="println" />
                                      <node concept="2OqwBi" id="7C_wgEF4rph" role="37wK5m">
                                        <node concept="37vLTw" id="4WqJ5Sh63$n" role="2Oq$k0">
                                          <ref role="3cqZAo" node="7C_wgEF4rpa" resolve="e" />
                                        </node>
                                        <node concept="liA8E" id="7C_wgEF4rpj" role="2OqNvi">
                                          <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbH" id="7C_wgEF4rpk" role="3cqZAp" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7C_wgEF4rpl" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Thread.start():void" resolve="start" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4roL" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r9v" role="3cqZAp">
          <node concept="2OqwBi" id="7C_wgEF4r9w" role="3clFbG">
            <node concept="37vLTw" id="4WqJ5Sh63nQ" role="2Oq$k0">
              <ref role="3cqZAo" node="7C_wgEF4r96" resolve="suspendedSession" />
            </node>
            <node concept="liA8E" id="7C_wgEF4r9y" role="2OqNvi">
              <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4r9_" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4r9A" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4r9B" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63iF" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4r8Z" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="7C_wgEF4rpW" role="1SL9yI">
      <property role="TrG5h" value="fromSuspendedToRunningWithTimeout" />
      <node concept="3cqZAl" id="7C_wgEF4rpX" role="3clF45" />
      <node concept="3clFbS" id="7C_wgEF4rpY" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF4rpZ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4rq0" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF4rq1" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4rq2" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF4rq3" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF4rq4" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF4r1Z" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4rqc" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4rqd" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <node concept="3uibUv" id="7C_wgEF4rqe" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4rqf" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63aw" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4rq0" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4rqh" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="7C_wgEF4rqi" role="37wK5m">
                  <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF4rqj" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF4rqk" role="3cpWs9">
            <property role="TrG5h" value="suspendedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF4rql" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF4rqm" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63_7" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4rq0" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF4rqo" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF4rqp" role="37wK5m">
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <node concept="3VsKOn" id="7C_wgEF4rqq" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF4rqr" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF4rqs" role="37wK5m">
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                      <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4rqt" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4rqD" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4rqE" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="4WqJ5Sh63Mo" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4rqd" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4rqG" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4rs2" role="3cqZAp">
          <node concept="3uibUv" id="7C_wgEF4rta" role="3$Qgvv">
            <ref role="3uigEE" to="u02k:30gDo8BIbBp" resolve="TRSessionFailedException" />
          </node>
          <node concept="3clFbF" id="7C_wgEF4rs5" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4rrh" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63SW" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF4rqk" resolve="suspendedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4rrj" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4rrk" role="3cqZAp" />
        <node concept="3clFbF" id="7C_wgEF4rrl" role="3cqZAp">
          <node concept="2YIFZM" id="7C_wgEF4rrm" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="4WqJ5Sh63FK" role="37wK5m">
              <ref role="3cqZAo" node="7C_wgEF4rqd" resolve="sessionStateContextMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="30gDo8BMy3n">
    <property role="TrG5h" value="SessionTerminated" />
    <property role="3GE5qa" value="unit-tests" />
    <node concept="2XrIbr" id="7C_wgEF45wv" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="7C_wgEF45ww" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="7C_wgEF45wx" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45wy" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wz" role="3cpWs9">
            <property role="TrG5h" value="programStateMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45w$" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45w_" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45wA" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wB" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wC" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45wD" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45wE" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45wF" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wG" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wH" role="3cpWs9">
            <property role="TrG5h" value="stepperMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45wI" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45wJ" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45wK" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wL" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wM" role="3cpWs9">
            <property role="TrG5h" value="mSessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="69Byf55Pgq4" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45wO" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55Pgqa" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wQ" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wR" role="3cpWs9">
            <property role="TrG5h" value="tracePathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF45wS" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF45wT" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wU" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wV" role="3cpWs9">
            <property role="TrG5h" value="binaryPathMock" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="7C_wgEF45wW" role="1tU5fm" />
            <node concept="Xl_RD" id="7C_wgEF45wX" role="33vP2m">
              <property role="Xl_RC" value="" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45wY" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45wZ" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="projectMock" />
            <node concept="3uibUv" id="7C_wgEF45x0" role="1tU5fm">
              <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45x1" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45x2" role="37wK5m">
                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45x3" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45x4" role="3cpWs9">
            <property role="TrG5h" value="modelMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="29so9Vcsesr" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45x6" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="29so9VcsfgD" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45x8" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45x9" role="3cpWs9">
            <property role="TrG5h" value="sessionStateContextMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45xa" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45xb" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7C_wgEF45xc" role="37wK5m">
                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF45xd" role="3cqZAp" />
        <node concept="3cpWs8" id="7C_wgEF45xe" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45xf" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45xg" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="7C_wgEF45xh" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="7C_wgEF45xi" role="37wK5m">
                <node concept="YeOm9" id="7C_wgEF45xj" role="2ShVmc">
                  <node concept="1Y3b0j" id="7C_wgEF45xk" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="7C_wgEF45xl" role="1B3o_S" />
                    <node concept="3clFb_" id="7C_wgEF45xm" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="7C_wgEF45xn" role="1B3o_S" />
                      <node concept="3cqZAl" id="7C_wgEF45xo" role="3clF45" />
                      <node concept="3clFbS" id="7C_wgEF45xp" role="3clF47">
                        <node concept="3clFbF" id="7C_wgEF45xq" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xr" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh630t" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45xt" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMA" resolve="ITRProgramState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45xu" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63CN" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45wz" resolve="programStateMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45xw" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xx" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh6317" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45xz" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaM0" resolve="ITRBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45x$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63HQ" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45wC" resolve="breakpointRegistryMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45xA" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xB" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62SK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45xD" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BIaMC" resolve="ITRStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45xE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63S0" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45wH" resolve="stepperMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45xG" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xH" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62YI" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55Pgqq" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45xK" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63Wb" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45wM" resolve="mSessionMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45xM" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xN" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh634a" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45xP" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45xQ" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh6393" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45wZ" resolve="projectMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45xS" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45xT" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62WQ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="29so9VcsdX5" role="37wK5m">
                                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45xW" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63dY" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45x4" resolve="modelMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0Lusp" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0Lusq" role="3clFbG">
                            <node concept="1rXfSq" id="58boHs0Lusr" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="58boHs0Luss" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0Lust" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="58boHs0Lusu" role="37wK5m">
                                <node concept="YeOm9" id="58boHs0Lusv" role="2ShVmc">
                                  <node concept="1Y3b0j" id="58boHs0Lusw" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="58boHs0Lusx" role="1B3o_S" />
                                    <node concept="3clFb_" id="58boHs0Lusy" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getProject" />
                                      <node concept="3uibUv" id="58boHs0Lusz" role="3clF45">
                                        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0Lus$" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0Lus_" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LusA" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0LusB" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0LusC" role="37wK5m">
                                              <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LusD" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinary" />
                                      <node concept="3uibUv" id="58boHs0LusE" role="3clF45">
                                        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
                                      </node>
                                      <node concept="3Tm1VV" id="58boHs0LusF" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LusG" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LusH" role="3cqZAp">
                                          <node concept="10Nm6u" id="58boHs0LusI" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LusJ" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModel" />
                                      <node concept="H_c77" id="58boHs0LusK" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LusL" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LusM" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LusN" role="3cqZAp">
                                          <node concept="2YIFZM" id="58boHs0LusO" role="3clFbG">
                                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                            <node concept="3VsKOn" id="58boHs0LusP" role="37wK5m">
                                              <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LusQ" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getModules" />
                                      <node concept="2I9FWS" id="58boHs0LusR" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0LusS" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0LusT" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0LusU" role="3cqZAp">
                                          <node concept="2ShNRf" id="58boHs0LusV" role="3clFbG">
                                            <node concept="2T8Vx0" id="58boHs0LusW" role="2ShVmc">
                                              <node concept="2I9FWS" id="58boHs0LusX" role="2T96Bj" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0LusY" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getTracePath" />
                                      <node concept="17QB3L" id="58boHs0LusZ" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0Lut0" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0Lut1" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0Lut2" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0Lut3" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="4jk7wJwggI1" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="showUnmappedVariables" />
                                      <node concept="10P_77" id="4jk7wJwggI2" role="3clF45" />
                                      <node concept="3Tm1VV" id="4jk7wJwggI3" role="1B3o_S" />
                                      <node concept="3clFbS" id="4jk7wJwggI6" role="3clF47">
                                        <node concept="3clFbF" id="4jk7wJwggI8" role="3cqZAp">
                                          <node concept="3clFbT" id="4jk7wJwggI7" role="3clFbG" />
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0Lut4" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getBinaryPath" />
                                      <node concept="17QB3L" id="58boHs0Lut5" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0Lut6" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0Lut7" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0Lut8" role="3cqZAp">
                                          <node concept="Xl_RD" id="58boHs0Lut9" role="3clFbG">
                                            <property role="Xl_RC" value="" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0Luta" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getLaunchTimeout" />
                                      <node concept="10Oyi0" id="58boHs0Lutb" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0Lutc" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0Lutd" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0Lute" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0Lutf" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node concept="3clFb_" id="58boHs0Lutg" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="getCommandTimeout" />
                                      <node concept="10Oyi0" id="58boHs0Luth" role="3clF45" />
                                      <node concept="3Tm1VV" id="58boHs0Luti" role="1B3o_S" />
                                      <node concept="3clFbS" id="58boHs0Lutj" role="3clF47">
                                        <node concept="3clFbF" id="58boHs0Lutk" role="3cqZAp">
                                          <node concept="3cmrfG" id="58boHs0Lutl" role="3clFbG">
                                            <property role="3cmrfH" value="1000" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="58boHs0Lutm" role="3cqZAp">
                          <node concept="2OqwBi" id="58boHs0Lutn" role="3clFbG">
                            <node concept="2OqwBi" id="58boHs0Luto" role="2Oq$k0">
                              <node concept="1rXfSq" id="58boHs0Lutp" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="58boHs0Lutq" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="58boHs0Lutr" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="58boHs0Luts" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="58boHs0Lutt" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="58boHs0Lutu" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="58boHs0Lutv" role="37wK5m">
                                <property role="3cmrfH" value="300" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45yi" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45yj" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh62ZN" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7C_wgEF45yl" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMykP" resolve="ITRSessionStateContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45ym" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4WqJ5Sh63oS" role="37wK5m">
                                <ref role="3cqZAo" node="7C_wgEF45x9" resolve="sessionStateContextMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45yo" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45yp" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF45yq" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh631d" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF45ys" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF45yt" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF45yu" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF45yv" role="37wK5m">
                                    <ref role="1PxDUh" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zp" resolve="NAME" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45yw" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45yx" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMye1" resolve="TRSessionAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLsE" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45yy" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45yz" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF45y$" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62Xw" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF45yA" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF45yB" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF45yC" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF45yD" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zw" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45yE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45yF" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:30gDo8BMycI" resolve="TRSessionNotAttachedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLJN" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="4ktgw6PNE8N" role="3cqZAp">
                          <node concept="2OqwBi" id="4ktgw6PNE99" role="3clFbG">
                            <node concept="1rXfSq" id="4WqJ5Sh636A" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4ktgw6PNE8Q" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4ktgw6PNE9k" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="4ktgw6PNE9m" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class,java.lang.reflect.Method...):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="4ktgw6PNE9o" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45yG" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45yH" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF45yI" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh635E" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF45yK" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF45yL" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF45yM" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF45yN" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44zO" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45yO" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45yP" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF426P" resolve="TRSessionRunningStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLsF" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45yQ" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45yR" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF45yS" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh633t" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF45yU" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF45yV" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF45yW" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="10M0yZ" id="7C_wgEF45yX" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45yY" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45yZ" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLJM" role="lGtFl" />
                        </node>
                        <node concept="3clFbF" id="7C_wgEF45z0" role="3cqZAp">
                          <node concept="2OqwBi" id="7C_wgEF45z1" role="3clFbG">
                            <node concept="2OqwBi" id="7C_wgEF45z2" role="2Oq$k0">
                              <node concept="1rXfSq" id="4WqJ5Sh62Y4" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7C_wgEF45z4" role="37wK5m">
                                  <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7C_wgEF45z5" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7C_wgEF45z6" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="10M0yZ" id="7C_wgEF45z7" role="37wK5m">
                                    <ref role="3cqZAo" to="u02k:7C_wgEF44$3" resolve="NAME" />
                                    <ref role="1PxDUh" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7C_wgEF45z8" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7C_wgEF45z9" role="37wK5m">
                                <ref role="3VsUkX" to="u02k:7C_wgEF3Rs0" resolve="TRSessionSuspendedStateImpl" />
                              </node>
                            </node>
                          </node>
                          <node concept="15s5l7" id="65KmIn8sLXC" role="lGtFl" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="7C_wgEF45za" role="3cqZAp">
          <node concept="37vLTw" id="4WqJ5Sh63mV" role="3cqZAk">
            <ref role="3cqZAo" node="7C_wgEF45xf" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="30gDo8BM$JL" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocationsWhenSessionTerminated" />
      <node concept="3cqZAl" id="30gDo8BM$JM" role="3clF45" />
      <node concept="3clFbS" id="30gDo8BM$JN" role="3clF47">
        <node concept="3cpWs8" id="7C_wgEF45AH" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45AI" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="7C_wgEF45AJ" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45AK" role="33vP2m">
              <node concept="2WthIp" id="7C_wgEF45AL" role="2Oq$k0" />
              <node concept="2XshWL" id="7C_wgEF45AM" role="2OqNvi">
                <ref role="2WH_rO" node="7C_wgEF45wv" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7C_wgEF45B1" role="3cqZAp">
          <node concept="3cpWsn" id="7C_wgEF45B2" role="3cpWs9">
            <property role="TrG5h" value="notAttachedSession" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="7C_wgEF45B3" role="1tU5fm">
              <ref role="3uigEE" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
            </node>
            <node concept="2OqwBi" id="7C_wgEF45B4" role="33vP2m">
              <node concept="37vLTw" id="4WqJ5Sh63KS" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45AI" resolve="injector" />
              </node>
              <node concept="liA8E" id="7C_wgEF45B6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                <node concept="2YIFZM" id="7C_wgEF45B7" role="37wK5m">
                  <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.annotation.Annotation):com.google.inject.Key" resolve="get" />
                  <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                  <node concept="3VsKOn" id="7C_wgEF45B8" role="37wK5m">
                    <ref role="3VsUkX" to="u02k:30gDo8BMycB" resolve="TRAbstractSessionStateImpl" />
                  </node>
                  <node concept="2YIFZM" id="7C_wgEF45B9" role="37wK5m">
                    <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                    <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                    <node concept="10M0yZ" id="7C_wgEF45Ba" role="37wK5m">
                      <ref role="1PxDUh" to="u02k:7C_wgEEXZxF" resolve="TRSessionTerminatedStateImpl" />
                      <ref role="3cqZAo" to="u02k:7C_wgEF44$i" resolve="NAME" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="30gDo8BM$Nd" role="3cqZAp" />
        <node concept="3$NI$W" id="30gDo8BM$Nx" role="3cqZAp">
          <node concept="3clFbF" id="30gDo8BM$N_" role="3$Oloe">
            <node concept="2OqwBi" id="30gDo8BM$NH" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63t6" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="30gDo8BM$NN" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GI" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aO7" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEEX5HK" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEEX5HL" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEEX5HM" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63sp" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEEX5HO" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GQ" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aO9" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4abH" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4abI" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4abJ" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63AM" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4abL" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GM" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOa" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4abN" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4abO" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4abP" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63F9" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4abR" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GE" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOb" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4ace" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEF4abT" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4abU" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4abV" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63hn" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4abX" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF40nF" resolve="resume" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOc" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4abZ" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4ac0" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4ac1" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Ls" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4ac3" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$Hs" resolve="attach" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOd" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4ac5" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4ac6" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4ac7" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63MZ" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4ac9" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMydl" resolve="terminate" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOe" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4aci" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4acj" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4ack" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63R4" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4acm" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$H2" resolve="unrecoverableErrorOccured" />
                <node concept="Xl_RD" id="7C_wgEF4acp" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOf" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4acq" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4acr" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4acs" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63AA" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4acu" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BM$GW" resolve="recoverableErrorOccured" />
                <node concept="Xl_RD" id="7C_wgEF4acv" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOg" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEF4acz" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEF4ac$" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEF4ac_" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63ht" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEF4acB" role="2OqNvi">
                <ref role="37wK5l" to="u02k:7C_wgEF3Rwc" resolve="runUntilSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOh" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3clFbH" id="7C_wgEF4abG" role="3cqZAp" />
        <node concept="3$NI$W" id="7C_wgEEX5HQ" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEEX5HR" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEEX5HS" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63es" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEEX5HU" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMycW" resolve="getBreakpointRegistry" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOi" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEEX5HW" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEEX5HX" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEEX5HY" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh63Ry" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEEX5I0" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMycP" resolve="getProgramStateAccessor" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4aOj" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
        <node concept="3$NI$W" id="7C_wgEEX5I2" role="3cqZAp">
          <node concept="3clFbF" id="7C_wgEEX5I3" role="3$Oloe">
            <node concept="2OqwBi" id="7C_wgEEX5I4" role="3clFbG">
              <node concept="37vLTw" id="4WqJ5Sh637s" role="2Oq$k0">
                <ref role="3cqZAo" node="7C_wgEF45B2" resolve="notAttachedSession" />
              </node>
              <node concept="liA8E" id="7C_wgEEX5I6" role="2OqNvi">
                <ref role="37wK5l" to="u02k:30gDo8BMyd3" resolve="getStepper" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="7C_wgEF4b3Y" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
      </node>
    </node>
  </node>
</model>

