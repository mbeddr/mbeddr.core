// ----------------------------------------------------------------------
// This configuration file enables Bounded Model Checking
// and uses induction for proving safety (EXPERIMENTAL).
// ----------------------------------------------------------------------

#include bmc.properties

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.bounds.BoundsCPA, cpa.edgeexclusion.EdgeExclusionCPA, cpa.programcounter.ProgramCounterCPA, cpa.value.ValueAnalysisCPA

// enable induction for safety verification
bmc.induction = true

// induction proof requires the program to have only one single loop
cfa.transformIntoSingleLoop = false

// provide additional automatically generated invariants to the induction proof
bmc.addInvariantsByAI = true
bmc.addInvariantsByInduction = true

// config file for invariant generation for induction
invariantGeneration.config = invariantGeneration-no-out.properties

// generate invariants in parallel to the BMC analysis 
invariantGeneration.async = true

// improve generated invariants over time
invariantGeneration.adjustConditions = true

// activate iterative deepening (0 is infinite deepening)
cpa.bounds.maxLoopIterationsUpperBound = 0

// start iterative deepening with an initial bound of 1
cpa.bounds.maxLoopIterations = 1

// increment the bound by one in every iteration of deepening
cpa.bounds.maxLoopIterationAdjusterFactory = INCREMENT

solver.solver = SMTInterpol
cpa.predicate.encodeFloatAs = RATIONAL

cpa.callstack.depth=1