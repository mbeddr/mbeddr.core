// Configuration for checking a counterexample with bitprecise predicate analysis.

#include ../predicateAnalysis-PredAbsRefiner-ABEl-bitprecise.properties

analysis.algorithm.CEGAR = false

// No caching, the formulas are never created twice
cpa.predicate.blk.useCache = false

// No abstractions
cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = false

// Secondary analysis should not produce output.
output.disable = true

// If main analysis has -skipRecursion, we want to ignore recursive calls here as well.
// If main analysis does not have -skipRecursion, setting this here has no effect.
cpa.callstack.skipRecursion = true

// As specification automata generated by the main analysis contain additional
// ASSUMEs over variables possibly classified as irrelevant, this option
// guarantees that these ASSUMEs are properly handled nonetheless
cpa.predicate.ignoreIrrelevantVariables = false
