<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:1893546a-8496-4795-8ccc-5b0722a668db(test.debugger.core.tests@tests)">
  <persistence version="9" />
  <languages>
    <use id="f61473f9-130f-42f6-b98d-6c438812c2f6" name="jetbrains.mps.baseLanguage.unitTest" version="0" />
    <use id="443f4c36-fcf5-4eb6-9500-8d06ed259e3e" name="jetbrains.mps.baseLanguage.classifiers" version="0" />
    <use id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections" version="0" />
    <use id="fd392034-7849-419d-9071-12563d152375" name="jetbrains.mps.baseLanguage.closures" version="0" />
    <use id="ed6d7656-532c-4bc2-81d1-af945aeb8280" name="jetbrains.mps.baseLanguage.blTypes" version="0" />
    <use id="9ded098b-ad6a-4657-bfd9-48636cfe8bc3" name="jetbrains.mps.lang.traceable" version="0" />
    <use id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core" version="1" />
    <use id="8585453e-6bfb-4d80-98de-b16074f1d86c" name="jetbrains.mps.lang.test" version="2" />
    <use id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel" version="8" />
    <use id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage" version="5" />
  </languages>
  <imports>
    <import index="rgba" ref="fa1d9f5d-d5ce-44c5-94ac-ba5f1a1fba8e/java:org.easymock(test.debugger.core/)" />
    <import index="x30c" ref="r:04a32be8-7074-4c9c-b2f8-77d4a01a19dc(com.mbeddr.core.debug.debugger)" />
    <import index="w1kc" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.smodel(MPS.Core/)" />
    <import index="pry4" ref="r:0a0d7eec-6e5a-412b-8e16-e3ee5ed7fb95(jetbrains.mps.debug.api.programState)" />
    <import index="ez3t" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject(Eclipse.Debugger/)" />
    <import index="wyx4" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:com.google.common.util.concurrent(MPS.Core/)" />
    <import index="hr7j" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.binder(Eclipse.Debugger/)" />
    <import index="drde" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.multibindings(Eclipse.Debugger/)" />
    <import index="33ny" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util(JDK/)" />
    <import index="5zyv" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util.concurrent(JDK/)" />
    <import index="xlxw" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.math(JDK/)" />
    <import index="2334" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.name(Eclipse.Debugger/)" />
    <import index="4nm9" ref="498d89d2-c2e9-11e2-ad49-6cf049e62fe5/java:com.intellij.openapi.project(MPS.IDEA/)" />
    <import index="t6h5" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang.reflect(JDK/)" />
    <import index="rw00" ref="r:d910d08e-4a00-41f9-ac8b-b7c374586874(jetbrains.mps.debug.api.breakpoints)" />
    <import index="5ths" ref="r:0cf7389f-e174-4742-a3d2-15c79317838a(jetbrains.mps.debug.api.run)" />
    <import index="1l1h" ref="r:c02662c0-67c5-4c3a-8d3a-cd7ffe189340(jetbrains.mps.debug.api)" />
    <import index="i8lq" ref="fa1d9f5d-d5ce-44c5-94ac-ba5f1a1fba8e/java:org.mockito.internal.verification(test.debugger.core/)" />
    <import index="dj99" ref="498d89d2-c2e9-11e2-ad49-6cf049e62fe5/java:com.intellij.execution.configurations(MPS.IDEA/)" />
    <import index="y0ja" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.mbeddr.core.debugger.cdt(Eclipse.Debugger/)" />
    <import index="guwi" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.io(JDK/)" />
    <import index="z1c3" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.project(MPS.Core/)" />
    <import index="ys5c" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:org.eclipse.cdt.debug.core.cdi(Eclipse.Debugger/)" />
    <import index="fyq" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:com.google.inject.internal(Eclipse.Debugger/)" />
    <import index="n06z" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:org.eclipse.cdt.debug.core.cdi.model(Eclipse.Debugger/)" />
    <import index="d5bg" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:org.eclipse.cdt.debug.core.cdi.event(Eclipse.Debugger/)" />
    <import index="o80d" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:org.eclipse.cdt.debug.core.cdi.model.type(Eclipse.Debugger/)" />
    <import index="gbk6" ref="r:2e38b2fa-c5da-4efc-9db5-fc22f4b07ca2(com.mbeddr.core.debugger.gdb.plugin)" />
    <import index="6pen" ref="85d9f97b-1654-4692-b61c-fcc40db03653/java:org.eclipse.cdt.debug.mi.core.cdi.model(Eclipse.Debugger/)" />
    <import index="blwm" ref="r:61a45d85-604a-4af4-8729-16a36d455774(com.mbeddr.core.debug.plugin)" />
    <import index="mhbf" ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34/java:org.jetbrains.mps.openapi.model(MPS.OpenAPI/)" />
    <import index="fwk" ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.textgen.trace(MPS.Core/)" />
    <import index="wyt6" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)" implicit="true" />
  </imports>
  <registry>
    <language id="8585453e-6bfb-4d80-98de-b16074f1d86c" name="jetbrains.mps.lang.test">
      <concept id="5097124989038916362" name="jetbrains.mps.lang.test.structure.TestInfo" flags="ng" index="2XOHcx">
        <property id="5097124989038916363" name="projectPath" index="2XOHcw" />
      </concept>
      <concept id="1216913645126" name="jetbrains.mps.lang.test.structure.NodesTestCase" flags="lg" index="1lH9Xt">
        <child id="1216993439383" name="methods" index="1qtyYc" />
        <child id="1217501895093" name="testMethods" index="1SL9yI" />
      </concept>
      <concept id="1225978065297" name="jetbrains.mps.lang.test.structure.SimpleNodeTest" flags="ng" index="1LZb2c" />
    </language>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1080223426719" name="jetbrains.mps.baseLanguage.structure.OrExpression" flags="nn" index="22lmx$" />
      <concept id="1082485599095" name="jetbrains.mps.baseLanguage.structure.BlockStatement" flags="nn" index="9aQIb">
        <child id="1082485599096" name="statements" index="9aQI4" />
      </concept>
      <concept id="1215693861676" name="jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression" flags="nn" index="d038R">
        <child id="1068498886297" name="rValue" index="37vLTx" />
        <child id="1068498886295" name="lValue" index="37vLTJ" />
      </concept>
      <concept id="4836112446988635817" name="jetbrains.mps.baseLanguage.structure.UndefinedType" flags="in" index="2jxLKc" />
      <concept id="1202948039474" name="jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation" flags="nn" index="liA8E" />
      <concept id="1224500799915" name="jetbrains.mps.baseLanguage.structure.BitwiseXorExpression" flags="nn" index="pVQyQ" />
      <concept id="1465982738277781862" name="jetbrains.mps.baseLanguage.structure.PlaceholderMember" flags="ng" index="2tJIrI" />
      <concept id="1239714755177" name="jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation" flags="nn" index="2$Kvd9">
        <child id="1239714902950" name="expression" index="2$L3a6" />
      </concept>
      <concept id="1173175405605" name="jetbrains.mps.baseLanguage.structure.ArrayAccessExpression" flags="nn" index="AH0OO">
        <child id="1173175577737" name="index" index="AHEQo" />
        <child id="1173175590490" name="array" index="AHHXb" />
      </concept>
      <concept id="1188220165133" name="jetbrains.mps.baseLanguage.structure.ArrayLiteral" flags="nn" index="2BsdOp">
        <child id="1188220173759" name="item" index="2BsfMF" />
      </concept>
      <concept id="2820489544401957797" name="jetbrains.mps.baseLanguage.structure.DefaultClassCreator" flags="nn" index="HV5vD">
        <reference id="2820489544401957798" name="classifier" index="HV5vE" />
      </concept>
      <concept id="1224848483129" name="jetbrains.mps.baseLanguage.structure.IBLDeprecatable" flags="ng" index="IEa8$">
        <property id="1224848525476" name="isDeprecated" index="IEkAT" />
      </concept>
      <concept id="1154032098014" name="jetbrains.mps.baseLanguage.structure.AbstractLoopStatement" flags="nn" index="2LF5Ji">
        <child id="1154032183016" name="body" index="2LFqv$" />
      </concept>
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1083245097125" name="jetbrains.mps.baseLanguage.structure.EnumClass" flags="ig" index="Qs71p">
        <child id="1083245396908" name="enumConstant" index="Qtgdg" />
      </concept>
      <concept id="1083245299891" name="jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration" flags="ig" index="QsSxf" />
      <concept id="1201370618622" name="jetbrains.mps.baseLanguage.structure.Property" flags="ig" index="2RhdJD">
        <property id="1201371481316" name="propertyName" index="2RkwnN" />
        <child id="1201371521209" name="type" index="2RkE6I" />
        <child id="1201372378714" name="propertyImplementation" index="2RnVtd" />
      </concept>
      <concept id="1083260308424" name="jetbrains.mps.baseLanguage.structure.EnumConstantReference" flags="nn" index="Rm8GO">
        <reference id="1083260308426" name="enumConstantDeclaration" index="Rm8GQ" />
        <reference id="1144432896254" name="enumClass" index="1Px2BO" />
      </concept>
      <concept id="1201372606839" name="jetbrains.mps.baseLanguage.structure.DefaultPropertyImplementation" flags="ng" index="2RoN1w">
        <child id="1202065356069" name="defaultGetAccessor" index="3wFrgM" />
        <child id="1202078082794" name="defaultSetAccessor" index="3xrYvX" />
      </concept>
      <concept id="1164879751025" name="jetbrains.mps.baseLanguage.structure.TryCatchStatement" flags="nn" index="SfApY">
        <child id="1164879758292" name="body" index="SfCbr" />
        <child id="1164903496223" name="catchClause" index="TEbGg" />
      </concept>
      <concept id="1145552977093" name="jetbrains.mps.baseLanguage.structure.GenericNewExpression" flags="nn" index="2ShNRf">
        <child id="1145553007750" name="creator" index="2ShVmc" />
      </concept>
      <concept id="1164903280175" name="jetbrains.mps.baseLanguage.structure.CatchClause" flags="nn" index="TDmWw">
        <child id="1164903359218" name="catchBody" index="TDEfX" />
        <child id="1164903359217" name="throwable" index="TDEfY" />
      </concept>
      <concept id="1070462154015" name="jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration" flags="ig" index="Wx3nA" />
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1182160077978" name="jetbrains.mps.baseLanguage.structure.AnonymousClassCreator" flags="nn" index="YeOm9">
        <child id="1182160096073" name="cls" index="YeSDq" />
      </concept>
      <concept id="1081236700938" name="jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration" flags="ig" index="2YIFZL" />
      <concept id="1081236700937" name="jetbrains.mps.baseLanguage.structure.StaticMethodCall" flags="nn" index="2YIFZM">
        <reference id="1144433194310" name="classConcept" index="1Pybhc" />
      </concept>
      <concept id="1081256982272" name="jetbrains.mps.baseLanguage.structure.InstanceOfExpression" flags="nn" index="2ZW3vV">
        <child id="1081256993305" name="classType" index="2ZW6by" />
        <child id="1081256993304" name="leftExpression" index="2ZW6bz" />
      </concept>
      <concept id="1070533707846" name="jetbrains.mps.baseLanguage.structure.StaticFieldReference" flags="nn" index="10M0yZ">
        <reference id="1144433057691" name="classifier" index="1PxDUh" />
      </concept>
      <concept id="1070534058343" name="jetbrains.mps.baseLanguage.structure.NullLiteral" flags="nn" index="10Nm6u" />
      <concept id="1070534370425" name="jetbrains.mps.baseLanguage.structure.IntegerType" flags="in" index="10Oyi0" />
      <concept id="1070534644030" name="jetbrains.mps.baseLanguage.structure.BooleanType" flags="in" index="10P_77" />
      <concept id="1070534760951" name="jetbrains.mps.baseLanguage.structure.ArrayType" flags="in" index="10Q1$e">
        <child id="1070534760952" name="componentType" index="10Q1$1" />
      </concept>
      <concept id="1070534934090" name="jetbrains.mps.baseLanguage.structure.CastExpression" flags="nn" index="10QFUN">
        <child id="1070534934091" name="type" index="10QFUM" />
        <child id="1070534934092" name="expression" index="10QFUP" />
      </concept>
      <concept id="1068390468198" name="jetbrains.mps.baseLanguage.structure.ClassConcept" flags="ig" index="312cEu">
        <child id="1095933932569" name="implementedInterface" index="EKbjA" />
        <child id="1201374247313" name="property" index="2Rv3y6" />
        <child id="1165602531693" name="superclass" index="1zkMxy" />
      </concept>
      <concept id="5862977038373003187" name="jetbrains.mps.baseLanguage.structure.LocalPropertyReference" flags="nn" index="338YkY">
        <reference id="5862977038373003188" name="property" index="338YkT" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <property id="1176718929932" name="isFinal" index="3TUv4t" />
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1092119917967" name="jetbrains.mps.baseLanguage.structure.MulExpression" flags="nn" index="17qRlL" />
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="1068498886292" name="jetbrains.mps.baseLanguage.structure.ParameterDeclaration" flags="ir" index="37vLTG" />
      <concept id="1068498886294" name="jetbrains.mps.baseLanguage.structure.AssignmentExpression" flags="nn" index="37vLTI" />
      <concept id="1225271177708" name="jetbrains.mps.baseLanguage.structure.StringType" flags="in" index="17QB3L" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123132" name="jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration" flags="ng" index="3clF44">
        <property id="4276006055363816570" name="isSynchronized" index="od$2w" />
        <property id="1181808852946" name="isFinal" index="DiZV1" />
        <child id="1164879685961" name="throwsItem" index="Sfmx6" />
        <child id="1068580123133" name="returnType" index="3clF45" />
        <child id="1068580123134" name="parameter" index="3clF46" />
        <child id="1068580123135" name="body" index="3clF47" />
      </concept>
      <concept id="1068580123165" name="jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration" flags="ig" index="3clFb_">
        <property id="1178608670077" name="isAbstract" index="1EzhhJ" />
      </concept>
      <concept id="1068580123152" name="jetbrains.mps.baseLanguage.structure.EqualsExpression" flags="nn" index="3clFbC" />
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123157" name="jetbrains.mps.baseLanguage.structure.Statement" flags="nn" index="3clFbH" />
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1082485599094" name="ifFalseStatement" index="9aQIa" />
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
        <child id="1206060520071" name="elsifClauses" index="3eNLev" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068580123137" name="jetbrains.mps.baseLanguage.structure.BooleanConstant" flags="nn" index="3clFbT">
        <property id="1068580123138" name="value" index="3clFbU" />
      </concept>
      <concept id="1068580123140" name="jetbrains.mps.baseLanguage.structure.ConstructorDeclaration" flags="ig" index="3clFbW" />
      <concept id="1068580320020" name="jetbrains.mps.baseLanguage.structure.IntegerConstant" flags="nn" index="3cmrfG">
        <property id="1068580320021" name="value" index="3cmrfH" />
      </concept>
      <concept id="1068581242875" name="jetbrains.mps.baseLanguage.structure.PlusExpression" flags="nn" index="3cpWs3" />
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6">
        <child id="1068581517676" name="expression" index="3cqZAk" />
      </concept>
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242869" name="jetbrains.mps.baseLanguage.structure.MinusExpression" flags="nn" index="3cpWsd" />
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1068581517677" name="jetbrains.mps.baseLanguage.structure.VoidType" flags="in" index="3cqZAl" />
      <concept id="1206060495898" name="jetbrains.mps.baseLanguage.structure.ElsifClause" flags="ng" index="3eNFk2">
        <child id="1206060619838" name="condition" index="3eO9$A" />
        <child id="1206060644605" name="statementList" index="3eOfB_" />
      </concept>
      <concept id="1079359253375" name="jetbrains.mps.baseLanguage.structure.ParenthesizedExpression" flags="nn" index="1eOMI4">
        <child id="1079359253376" name="expression" index="1eOMHV" />
      </concept>
      <concept id="1081506762703" name="jetbrains.mps.baseLanguage.structure.GreaterThanExpression" flags="nn" index="3eOSWO" />
      <concept id="1081506773034" name="jetbrains.mps.baseLanguage.structure.LessThanExpression" flags="nn" index="3eOVzh" />
      <concept id="1081516740877" name="jetbrains.mps.baseLanguage.structure.NotExpression" flags="nn" index="3fqX7Q">
        <child id="1081516765348" name="expression" index="3fr31v" />
      </concept>
      <concept id="1160998861373" name="jetbrains.mps.baseLanguage.structure.AssertStatement" flags="nn" index="1gVbGN">
        <child id="1160998896846" name="condition" index="1gVkn0" />
      </concept>
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
        <child id="1068499141038" name="actualArgument" index="37wK5m" />
      </concept>
      <concept id="1212685548494" name="jetbrains.mps.baseLanguage.structure.ClassCreator" flags="nn" index="1pGfFk" />
      <concept id="1107461130800" name="jetbrains.mps.baseLanguage.structure.Classifier" flags="ng" index="3pOWGL">
        <property id="521412098689998745" name="nonStatic" index="2bfB8j" />
        <child id="5375687026011219971" name="member" index="jymVt" unordered="true" />
      </concept>
      <concept id="7812454656619025412" name="jetbrains.mps.baseLanguage.structure.LocalMethodCall" flags="nn" index="1rXfSq" />
      <concept id="1107535904670" name="jetbrains.mps.baseLanguage.structure.ClassifierType" flags="in" index="3uibUv">
        <reference id="1107535924139" name="classifier" index="3uigEE" />
        <child id="1109201940907" name="parameter" index="11_B2D" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="1214918800624" name="jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression" flags="nn" index="3uNrnE" />
      <concept id="1202065242027" name="jetbrains.mps.baseLanguage.structure.DefaultGetAccessor" flags="ng" index="3wEZqW" />
      <concept id="1202077725299" name="jetbrains.mps.baseLanguage.structure.DefaultSetAccessor" flags="ng" index="3xqBd$">
        <child id="1202077744034" name="visibility" index="3xqFEP" />
      </concept>
      <concept id="1073239437375" name="jetbrains.mps.baseLanguage.structure.NotEqualsExpression" flags="nn" index="3y3z36" />
      <concept id="1172058436953" name="jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall" flags="nn" index="3$87h9" />
      <concept id="1184950988562" name="jetbrains.mps.baseLanguage.structure.ArrayCreator" flags="nn" index="3$_iS1">
        <child id="1184951007469" name="componentType" index="3$_nBY" />
        <child id="1184952969026" name="dimensionExpression" index="3$GQph" />
      </concept>
      <concept id="1184952934362" name="jetbrains.mps.baseLanguage.structure.DimensionExpression" flags="nn" index="3$GHV9">
        <child id="1184953288404" name="expression" index="3$I4v7" />
      </concept>
      <concept id="1178549954367" name="jetbrains.mps.baseLanguage.structure.IVisible" flags="ng" index="1B3ioH">
        <child id="1178549979242" name="visibility" index="1B3o_S" />
      </concept>
      <concept id="1144230876926" name="jetbrains.mps.baseLanguage.structure.AbstractForStatement" flags="nn" index="1DupvO">
        <child id="1144230900587" name="variable" index="1Duv9x" />
      </concept>
      <concept id="1144231330558" name="jetbrains.mps.baseLanguage.structure.ForStatement" flags="nn" index="1Dw8fO">
        <child id="1144231399730" name="condition" index="1Dwp0S" />
        <child id="1144231408325" name="iteration" index="1Dwrff" />
      </concept>
      <concept id="3066917033203108594" name="jetbrains.mps.baseLanguage.structure.LocalInstanceMethodCall" flags="nn" index="3P9mCS" />
      <concept id="1208890769693" name="jetbrains.mps.baseLanguage.structure.ArrayLengthOperation" flags="nn" index="1Rwk04" />
      <concept id="6329021646629104957" name="jetbrains.mps.baseLanguage.structure.TextCommentPart" flags="nn" index="3SKdUq">
        <property id="6329021646629104958" name="text" index="3SKdUp" />
      </concept>
      <concept id="6329021646629104954" name="jetbrains.mps.baseLanguage.structure.SingleLineComment" flags="nn" index="3SKdUt">
        <child id="6329021646629175155" name="commentPart" index="3SKWNk" />
      </concept>
      <concept id="1146644602865" name="jetbrains.mps.baseLanguage.structure.PublicVisibility" flags="nn" index="3Tm1VV" />
      <concept id="1146644623116" name="jetbrains.mps.baseLanguage.structure.PrivateVisibility" flags="nn" index="3Tm6S6" />
      <concept id="1146644641414" name="jetbrains.mps.baseLanguage.structure.ProtectedVisibility" flags="nn" index="3Tmbuc" />
      <concept id="1116615150612" name="jetbrains.mps.baseLanguage.structure.ClassifierClassExpression" flags="nn" index="3VsKOn">
        <reference id="1116615189566" name="classifier" index="3VsUkX" />
      </concept>
      <concept id="1080120340718" name="jetbrains.mps.baseLanguage.structure.AndExpression" flags="nn" index="1Wc70l" />
      <concept id="1170345865475" name="jetbrains.mps.baseLanguage.structure.AnonymousClass" flags="ig" index="1Y3b0j">
        <reference id="1170346070688" name="classifier" index="1Y3XeK" />
      </concept>
    </language>
    <language id="fd392034-7849-419d-9071-12563d152375" name="jetbrains.mps.baseLanguage.closures">
      <concept id="1199569711397" name="jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral" flags="nn" index="1bVj0M">
        <child id="1199569906740" name="parameter" index="1bW2Oz" />
        <child id="1199569916463" name="body" index="1bW5cS" />
      </concept>
    </language>
    <language id="443f4c36-fcf5-4eb6-9500-8d06ed259e3e" name="jetbrains.mps.baseLanguage.classifiers">
      <concept id="1205752633985" name="jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression" flags="nn" index="2WthIp" />
      <concept id="1205756064662" name="jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation" flags="ng" index="2WEnae">
        <reference id="1205756909548" name="member" index="2WH_rO" />
      </concept>
      <concept id="1205769003971" name="jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration" flags="ng" index="2XrIbr" />
      <concept id="1205769149993" name="jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation" flags="nn" index="2XshWL">
        <child id="1205770614681" name="actualArgument" index="2XxRq1" />
      </concept>
    </language>
    <language id="f61473f9-130f-42f6-b98d-6c438812c2f6" name="jetbrains.mps.baseLanguage.unitTest">
      <concept id="7080278351417106679" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNotNull" flags="nn" index="2Hmddi">
        <child id="7080278351417106681" name="expression" index="2Hmdds" />
      </concept>
      <concept id="8427750732757990717" name="jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert" flags="nn" index="3tpDYu">
        <child id="8427750732757990725" name="actual" index="3tpDZA" />
        <child id="8427750732757990724" name="expected" index="3tpDZB" />
      </concept>
      <concept id="1171978097730" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals" flags="nn" index="3vlDli" />
      <concept id="1171981022339" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue" flags="nn" index="3vwNmj">
        <child id="1171981057159" name="condition" index="3vwVQn" />
      </concept>
      <concept id="1171983834376" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse" flags="nn" index="3vFxKo">
        <child id="1171983854940" name="condition" index="3vFALc" />
      </concept>
      <concept id="1171985735491" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertSame" flags="nn" index="3vMLTj" />
      <concept id="1172017222794" name="jetbrains.mps.baseLanguage.unitTest.structure.Fail" flags="nn" index="3xETmq" />
      <concept id="1172028177041" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull" flags="nn" index="3ykFI1">
        <child id="1172028236559" name="expression" index="3ykU8v" />
      </concept>
      <concept id="1172069869612" name="jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows" flags="nn" index="3$NI$W">
        <child id="1172070029086" name="statement" index="3$Oloe" />
        <child id="1172070532815" name="exceptionType" index="3$Qgvv" />
      </concept>
      <concept id="1172073500303" name="jetbrains.mps.baseLanguage.unitTest.structure.Message" flags="ng" index="3_1$Yv">
        <child id="1172073511101" name="message" index="3_1BAH" />
      </concept>
      <concept id="1172075514136" name="jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder" flags="ng" index="3_9gw8">
        <child id="1172075534298" name="message" index="3_9lra" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1143226024141" name="jetbrains.mps.lang.smodel.structure.SModelType" flags="in" index="H_c77" />
      <concept id="1145383075378" name="jetbrains.mps.lang.smodel.structure.SNodeListType" flags="in" index="2I9FWS" />
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
        <child id="5169995583184591170" name="smodelAttribute" index="lGtFl" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
      <concept id="709746936026466394" name="jetbrains.mps.lang.core.structure.ChildAttribute" flags="ng" index="3VBwX9">
        <property id="709746936026609031" name="linkId" index="3V$3ak" />
        <property id="709746936026609029" name="linkRole" index="3V$3am" />
      </concept>
      <concept id="4452961908202556907" name="jetbrains.mps.lang.core.structure.BaseCommentAttribute" flags="ng" index="1X3_iC">
        <child id="3078666699043039389" name="commentedNode" index="8Wnug" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="1204796164442" name="jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation" flags="nn" index="23sCx2">
        <child id="1204796294226" name="closure" index="23t8la" />
      </concept>
      <concept id="540871147943773365" name="jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation" flags="nn" index="25WWJ4">
        <child id="540871147943773366" name="argument" index="25WWJ7" />
      </concept>
      <concept id="1151688443754" name="jetbrains.mps.baseLanguage.collections.structure.ListType" flags="in" index="_YKpA">
        <child id="1151688676805" name="elementType" index="_ZDj9" />
      </concept>
      <concept id="1153943597977" name="jetbrains.mps.baseLanguage.collections.structure.ForEachStatement" flags="nn" index="2Gpval">
        <child id="1153944400369" name="variable" index="2Gsz3X" />
        <child id="1153944424730" name="inputSequence" index="2GsD0m" />
      </concept>
      <concept id="1153944193378" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariable" flags="nr" index="2GrKxI" />
      <concept id="1153944233411" name="jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference" flags="nn" index="2GrUjf">
        <reference id="1153944258490" name="variable" index="2Gs0qQ" />
      </concept>
      <concept id="1235566831861" name="jetbrains.mps.baseLanguage.collections.structure.AllOperation" flags="nn" index="2HxqBE" />
      <concept id="1237721394592" name="jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator" flags="nn" index="HWqM0">
        <child id="1237721435807" name="elementType" index="HW$YZ" />
      </concept>
      <concept id="1203518072036" name="jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration" flags="ig" index="Rh6nW" />
      <concept id="1160600644654" name="jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit" flags="nn" index="Tc6Ow" />
      <concept id="1160612413312" name="jetbrains.mps.baseLanguage.collections.structure.AddElementOperation" flags="nn" index="TSZUe" />
      <concept id="1162934736510" name="jetbrains.mps.baseLanguage.collections.structure.GetElementOperation" flags="nn" index="34jXtK" />
      <concept id="1162935959151" name="jetbrains.mps.baseLanguage.collections.structure.GetSizeOperation" flags="nn" index="34oBXx" />
      <concept id="1165525191778" name="jetbrains.mps.baseLanguage.collections.structure.GetFirstOperation" flags="nn" index="1uHKPH" />
      <concept id="1165530316231" name="jetbrains.mps.baseLanguage.collections.structure.IsEmptyOperation" flags="nn" index="1v1jN8" />
      <concept id="1184963466173" name="jetbrains.mps.baseLanguage.collections.structure.ToArrayOperation" flags="nn" index="3_kTaI" />
      <concept id="1176501494711" name="jetbrains.mps.baseLanguage.collections.structure.IsNotEmptyOperation" flags="nn" index="3GX2aA" />
    </language>
  </registry>
  <node concept="1lH9Xt" id="5HSnKgHUn$v">
    <property role="TrG5h" value="DebuggerAPI" />
    <property role="3GE5qa" value="api" />
    <node concept="1LZb2c" id="5XU7UUGbc$0" role="1SL9yI">
      <property role="TrG5h" value="createModule" />
      <node concept="3cqZAl" id="5XU7UUGbc$1" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc$2" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspTV7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbczt" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbczu" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbczv" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2YIFZM" id="5XU7UUGbczw" role="33vP2m">
                <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
                <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
                <node concept="2ShNRf" id="5XU7UUGbczx" role="37wK5m">
                  <node concept="1pGfFk" id="5HSnKgHUny0" role="2ShVmc">
                    <ref role="37wK5l" to="x30c:5HSnKgHPBOa" resolve="DebuggerAPIModule" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5HSnKgHUsSc" role="37wK5m">
                  <node concept="YeOm9" id="5HSnKgHUsSi" role="2ShVmc">
                    <node concept="1Y3b0j" id="5HSnKgHUsSj" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                      <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                      <node concept="3Tm1VV" id="5HSnKgHUsSk" role="1B3o_S" />
                      <node concept="3clFb_" id="5HSnKgHUsSl" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="configure" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tmbuc" id="5HSnKgHUsSm" role="1B3o_S" />
                        <node concept="3cqZAl" id="5HSnKgHUsSn" role="3clF45" />
                        <node concept="3clFbS" id="5HSnKgHUsSo" role="3clF47">
                          <node concept="3SKdUt" id="5HSnKgHUsS3" role="3cqZAp">
                            <node concept="3SKdUq" id="5HSnKgHUsS4" role="3SKWNk">
                              <property role="3SKdUp" value="Dependencies" />
                            </node>
                          </node>
                          <node concept="3clFbH" id="5HSnKgHUsSt" role="3cqZAp" />
                          <node concept="3clFbF" id="5HSnKgHUsSw" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUsSH" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUsSx" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="5HSnKgHUsSz" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUsSP" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUtiZ" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUtj1" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUtj5" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUtj6" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUtj7" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="5HSnKgHUtk2" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUtj9" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUtja" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUtk8" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT6XV1n" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XV1o" role="3clFbG">
                              <node concept="3P9mCS" id="6L3DaT6XV1p" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="6L3DaT6XV27" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                                </node>
                              </node>
                              <node concept="liA8E" id="6L3DaT6XV1r" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="6L3DaT6XV1s" role="37wK5m">
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <node concept="3VsKOn" id="6L3DaT6XV2h" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUtjg" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUtjh" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUtji" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="5HSnKgHUtko" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUtjk" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUtjl" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUtku" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUtjn" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUtjo" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUtjp" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="5HSnKgHUtkJ" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUtjr" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUtjs" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUtkP" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUtju" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUtjv" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUtjw" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="5HSnKgHUtlc" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUtjy" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUtjz" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUtli" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUBv8" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUBvj" role="3clFbG">
                              <node concept="3P9mCS" id="5HSnKgHUBv9" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="6L3DaT6Y3p7" role="37wK5m">
                                  <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUBvr" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUBvX" role="37wK5m">
                                  <ref role="1Pybhc" to="5zyv:~Executors" resolve="Executors" />
                                  <ref role="37wK5l" to="5zyv:~Executors.newFixedThreadPool(int):java.util.concurrent.ExecutorService" resolve="newFixedThreadPool" />
                                  <node concept="3cmrfG" id="5HSnKgHUBvY" role="37wK5m">
                                    <property role="3cmrfH" value="1" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT6X8BS" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6X8BT" role="3clFbG">
                              <node concept="2OqwBi" id="6L3DaT6X8HK" role="2Oq$k0">
                                <node concept="3P9mCS" id="6L3DaT6X8BU" role="2Oq$k0">
                                  <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                  <node concept="3VsKOn" id="6L3DaT6X8Hv" role="37wK5m">
                                    <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                  </node>
                                </node>
                                <node concept="liA8E" id="6L3DaT6X8HT" role="2OqNvi">
                                  <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                  <node concept="3VsKOn" id="6L3DaT6X8HV" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:6L3DaT6VE45" resolve="RequestTimeout" />
                                  </node>
                                </node>
                              </node>
                              <node concept="liA8E" id="6L3DaT6X8BW" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="3cmrfG" id="6L3DaT6X8I1" role="37wK5m">
                                  <property role="3cmrfH" value="200" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="1JcPmr$KtdZ" role="3cqZAp">
                            <node concept="2OqwBi" id="1JcPmr$Kte0" role="3clFbG">
                              <node concept="3P9mCS" id="1JcPmr$Kte2" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="1JcPmr$Kter" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                                </node>
                              </node>
                              <node concept="liA8E" id="1JcPmr$Kte6" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="1JcPmr$Kte$" role="37wK5m">
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="3VsKOn" id="1JcPmr$Kte_" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT700RN" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT700RO" role="3clFbG">
                              <node concept="3P9mCS" id="6L3DaT700RQ" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="6L3DaT700Se" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                              <node concept="liA8E" id="6L3DaT700RU" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="6L3DaT700SH" role="37wK5m">
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <node concept="3VsKOn" id="6L3DaT700Sj" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3cpWs8" id="5XU7UUGb91B" role="3cqZAp">
                            <node concept="3cpWsn" id="5XU7UUGb91C" role="3cpWs9">
                              <property role="TrG5h" value="multibinding" />
                              <node concept="3uibUv" id="5XU7UUGb91D" role="1tU5fm">
                                <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
                                <node concept="3uibUv" id="5HSnKgHUBI5" role="11_B2D">
                                  <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                                </node>
                              </node>
                              <node concept="2YIFZM" id="5XU7UUGb91F" role="33vP2m">
                                <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
                                <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
                                <node concept="3P9mCS" id="5XU7UUGb91G" role="37wK5m">
                                  <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
                                </node>
                                <node concept="3VsKOn" id="5HSnKgHUBIg" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUBHh" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUBHL" role="3clFbG">
                              <node concept="2OqwBi" id="5HSnKgHUBHv" role="2Oq$k0">
                                <node concept="37vLTw" id="5HxjapvTdF3" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5XU7UUGb91C" resolve="multibinding" />
                                </node>
                                <node concept="liA8E" id="5HSnKgHUBH$" role="2OqNvi">
                                  <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUBHQ" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUBIs" role="37wK5m">
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUBIB" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="5HSnKgHUBIF" role="3cqZAp">
                            <node concept="2OqwBi" id="5HSnKgHUBIG" role="3clFbG">
                              <node concept="2OqwBi" id="5HSnKgHUBIH" role="2Oq$k0">
                                <node concept="37vLTw" id="5HxjapvQZSW" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5XU7UUGb91C" resolve="multibinding" />
                                </node>
                                <node concept="liA8E" id="5HSnKgHUBIJ" role="2OqNvi">
                                  <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5HSnKgHUBIK" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                <node concept="2YIFZM" id="5HSnKgHUBIL" role="37wK5m">
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                  <node concept="3VsKOn" id="5HSnKgHUBIM" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTV8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUnBu" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspTV9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3SKdUt" id="5HSnKgHUnBx" role="8Wnug">
            <node concept="3SKdUq" id="5HSnKgHUnBy" role="3SKWNk">
              <property role="3SKdUp" value="States" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5XU7UUGbczz" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbcz$" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5XU7UUGbcz_" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAz" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUn_$" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLiVe" resolve="NotAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUn_C" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUn_D" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvTen9" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAJ" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAi" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUn_H" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUn_I" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvTeop" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAK" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAl" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUn_M" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUn_N" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZ$n" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAL" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAo" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVe" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUn_R" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUn_S" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZuZ" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAM" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAv" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnA6" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnA7" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZCr" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAP" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnB1" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnAb" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnAc" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HSnKgHUnAd" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnAQ" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnB4" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnB5" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnB6" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZmN" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnB8" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnBl" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnBa" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnBb" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5HSnKgHUnzA" resolve="isSingleton" />
              <node concept="37vLTw" id="5HSnKgHUnBc" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnBd" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnBo" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUn_A" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3SKdUt" id="5HSnKgHUnCo" role="8Wnug">
            <node concept="3SKdUq" id="5HSnKgHUnCp" role="3SKWNk">
              <property role="3SKdUp" value="Provided Interfaces" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnCB" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnCC" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZmj" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnCI" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgLK" resolve="IPermanentBreakpointCreator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnCN" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnCO" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvTdYS" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnDe" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnCR" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnCS" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZeT" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnDh" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgMH" resolve="IStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnCV" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnCW" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HxjapvQZl1" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnDk" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHLgM0" resolve="IProgramStateManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUnC$" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3SKdUt" id="5HSnKgHUp0t" role="8Wnug">
            <node concept="3SKdUq" id="5HSnKgHUp0u" role="3SKWNk">
              <property role="3SKdUp" value="Misc" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnBp" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnBq" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HSnKgHUnBr" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="5HSnKgHUnEu" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVs" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5HSnKgHUnEm" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUnEn" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="5HSnKgHUnEo" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="6L3DaT6ZrKG" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspTVt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="6L3DaT6ZrKI" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6ZrKL" role="3vwVQn">
              <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
              <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
              <node concept="37vLTw" id="6L3DaT6ZrKM" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbczu" resolve="injector" />
              </node>
              <node concept="3VsKOn" id="6L3DaT6ZrKQ" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="2pJszzmZcNj">
    <property role="TrG5h" value="StateTransitions" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="2pJszzmZcNE" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="2pJszzmZcRP" role="3clF46">
        <property role="TrG5h" value="debugListener" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="2pJszzmZcSb" role="1tU5fm">
          <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
        </node>
      </node>
      <node concept="37vLTG" id="2pJszzmZLkr" role="3clF46">
        <property role="TrG5h" value="executor" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="6L3DaT6Y3i_" role="1tU5fm">
          <ref role="3uigEE" to="5zyv:~ExecutorService" resolve="ExecutorService" />
        </node>
      </node>
      <node concept="37vLTG" id="6L3DaT6Xc3o" role="3clF46">
        <property role="TrG5h" value="timeout" />
        <property role="3TUv4t" value="true" />
        <node concept="10Oyi0" id="6L3DaT6Xc4m" role="1tU5fm" />
      </node>
      <node concept="3uibUv" id="2pJszzmZcNH" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="2pJszzmZcNG" role="3clF47">
        <node concept="3clFbF" id="2pJszzmZcPv" role="3cqZAp">
          <node concept="2YIFZM" id="2pJszzmZcNL" role="3clFbG">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="2pJszzmZcNM" role="37wK5m">
              <node concept="1pGfFk" id="2pJszzmZcNN" role="2ShVmc">
                <ref role="37wK5l" to="x30c:5HSnKgHPBOa" resolve="DebuggerAPIModule" />
              </node>
            </node>
            <node concept="2ShNRf" id="2pJszzmZcNO" role="37wK5m">
              <node concept="YeOm9" id="2pJszzmZcNP" role="2ShVmc">
                <node concept="1Y3b0j" id="2pJszzmZcNQ" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="2pJszzmZcNR" role="1B3o_S" />
                  <node concept="3clFb_" id="2pJszzmZcNS" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="2pJszzmZcNT" role="1B3o_S" />
                    <node concept="3cqZAl" id="2pJszzmZcNU" role="3clF45" />
                    <node concept="3clFbS" id="2pJszzmZcNV" role="3clF47">
                      <node concept="3SKdUt" id="2pJszzmZcNW" role="3cqZAp">
                        <node concept="3SKdUq" id="2pJszzmZcNX" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3clFbH" id="2pJszzmZcNY" role="3cqZAp" />
                      <node concept="3clFbF" id="2pJszzmZcNZ" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcO0" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcO1" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="2pJszzmZcO2" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcO3" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmZcO4" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="2pJszzmZcO5" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcO6" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcO7" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcO8" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="2pJszzmZcO9" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOa" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmZcOb" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="2pJszzmZcOc" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcOd" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcOe" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcOf" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="2pJszzmZcOg" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOh" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmZcOi" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="2pJszzmZcOj" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1JcPmr$KpXK" role="3cqZAp">
                        <node concept="2OqwBi" id="1JcPmr$KpY3" role="3clFbG">
                          <node concept="3P9mCS" id="1JcPmr$KpXL" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1JcPmr$KpXN" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1JcPmr$KpYb" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1JcPmr$KpYd" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1JcPmr$KpYf" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XV3l" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XV3m" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XV3n" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XV3L" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XV3p" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XV3q" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XV3V" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcOk" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcOl" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcOm" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="2pJszzmZcOn" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOo" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmZcOp" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="2pJszzmZcOq" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcOr" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcOs" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcOt" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="2pJszzmZcOu" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOv" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="2pJszzmZcOw" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="2pJszzmZcOx" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT709I3" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT709I4" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT709I5" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT709Iu" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT709I7" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT709I8" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT709I_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcOy" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcOz" role="3clFbG">
                          <node concept="3P9mCS" id="2pJszzmZcO$" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Y3je" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOA" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="37vLTw" id="2pJszzmZLlX" role="37wK5m">
                              <ref role="3cqZAo" node="2pJszzmZLkr" resolve="executor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6Xc2B" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6Xc2C" role="3clFbG">
                          <node concept="2OqwBi" id="6L3DaT6Xc38" role="2Oq$k0">
                            <node concept="3P9mCS" id="6L3DaT6Xc2D" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="6L3DaT6Xc2R" role="37wK5m">
                                <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6L3DaT6Xc3h" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="6L3DaT6Xc3j" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6VE45" resolve="RequestTimeout" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6Xc2F" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="37vLTw" id="6L3DaT6Xc50" role="37wK5m">
                              <ref role="3cqZAo" node="6L3DaT6Xc3o" resolve="timeout" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs8" id="2pJszzmZcOD" role="3cqZAp">
                        <node concept="3cpWsn" id="2pJszzmZcOE" role="3cpWs9">
                          <property role="TrG5h" value="multibinding" />
                          <node concept="3uibUv" id="2pJszzmZcOF" role="1tU5fm">
                            <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
                            <node concept="3uibUv" id="2pJszzmZcOG" role="11_B2D">
                              <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                            </node>
                          </node>
                          <node concept="2YIFZM" id="2pJszzmZcOH" role="33vP2m">
                            <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
                            <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
                            <node concept="3P9mCS" id="2pJszzmZcOI" role="37wK5m">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
                            </node>
                            <node concept="3VsKOn" id="2pJszzmZcOJ" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="2pJszzmZcOK" role="3cqZAp">
                        <node concept="2OqwBi" id="2pJszzmZcOL" role="3clFbG">
                          <node concept="2OqwBi" id="2pJszzmZcOM" role="2Oq$k0">
                            <node concept="37vLTw" id="2pJszzmZcON" role="2Oq$k0">
                              <ref role="3cqZAo" node="2pJszzmZcOE" resolve="multibinding" />
                            </node>
                            <node concept="liA8E" id="2pJszzmZcOO" role="2OqNvi">
                              <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                            </node>
                          </node>
                          <node concept="liA8E" id="2pJszzmZcOP" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="37vLTw" id="2pJszzmZcSf" role="37wK5m">
                              <ref role="3cqZAo" node="2pJszzmZcRP" resolve="debugListener" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="2pJszzmZcNn" role="1SL9yI">
      <property role="TrG5h" value="fromAttachToDetach" />
      <node concept="3cqZAl" id="2pJszzmZcNo" role="3clF45" />
      <node concept="3clFbS" id="2pJszzmZcNp" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVjl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZcQL" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZcQM" role="3cpWs9">
              <property role="TrG5h" value="debugListenerMock" />
              <node concept="3uibUv" id="2pJszzmZcQN" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
              </node>
              <node concept="2YIFZM" id="2pJszzmZcSk" role="33vP2m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="2pJszzmZcSm" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Xc5O" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Xc5P" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="TIMEOUT" />
              <node concept="10Oyi0" id="6L3DaT6Xc5Z" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Xc61" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZcQ1" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZcQ2" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="2pJszzmZcQ3" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZcQ5" role="33vP2m">
                <node concept="2WthIp" id="2pJszzmZcQ6" role="2Oq$k0" />
                <node concept="2XshWL" id="2pJszzmZcQ7" role="2OqNvi">
                  <ref role="2WH_rO" node="2pJszzmZcNE" resolve="injectDependencies" />
                  <node concept="37vLTw" id="2pJszzmZcSq" role="2XxRq1">
                    <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
                  </node>
                  <node concept="2YIFZM" id="6L3DaT6YgSB" role="2XxRq1">
                    <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                    <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZKC" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Xc5P" resolve="TIMEOUT" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZcQf" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZcQg" role="3cpWs9">
              <property role="TrG5h" value="session" />
              <node concept="3uibUv" id="2pJszzmZcQh" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZcQw" role="33vP2m">
                <node concept="37vLTw" id="2pJszzmZcQj" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZcQA" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZcQC" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT70qxj" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT70qxk" role="3cpWs9">
              <property role="TrG5h" value="debuggerListenerRegistry" />
              <node concept="3uibUv" id="6L3DaT70qxl" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
              </node>
              <node concept="2OqwBi" id="6L3DaT70qxm" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZJI" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT70qxo" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT70qxp" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT70qxq" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70qxr" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT70qxs" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT70qxk" resolve="debuggerListenerRegistry" />
              </node>
              <node concept="liA8E" id="6L3DaT70qxt" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6ZrgJ" resolve="register" />
                <node concept="37vLTw" id="6L3DaT70qxu" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZcUM" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZcUN" role="3cpWs9">
              <property role="TrG5h" value="mListener" />
              <node concept="3uibUv" id="2pJszzmZcUO" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZcUR" role="33vP2m">
                <node concept="37vLTw" id="2pJszzmZcUS" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZcUT" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZcV2" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjs" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZcQb" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZcZL" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd0u" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZd02" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZIh" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZd08" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZd0e" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZd0B" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
                <node concept="2YIFZM" id="2pJszzmZd2s" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="2pJszzmZd2w" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZd0D" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2pJszzmZd1B" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZd1J" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="2pJszzmZd1K" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZd1U" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                </node>
                <node concept="2YIFZM" id="2pJszzmZd22" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVju" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd4I" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd4J" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZd4K" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTduD" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZd4M" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZd4N" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZd57" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd6w" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd6x" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZd6y" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZwD" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZd6$" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZd6_" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZd6A" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZd4A" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZdQN" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZdR1" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdD9" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZdR7" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhZ" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZdRe" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZdRf" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdDG" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZdRh" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhV" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZdRi" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZdRj" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZdRk" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZdRl" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi3" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVj$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZdR8" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZdR9" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTenh" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZdRb" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhR" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVj_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZdQM" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZdRp" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZdRq" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZeL" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd2O" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZd2U" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="2pJszzmZd2V" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdNF" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZd2X" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZd2Y" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZd24" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZcVc" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jJM" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZcVs" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdJq" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQg" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZcVx" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMg" resolve="attach" />
                  <node concept="2YIFZM" id="2pJszzmZcWl" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="2pJszzmZcWn" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZcW0" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZcVy" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZcVE" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZcVG" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jJZ" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd3w" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd3O" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdJe" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcUN" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZd3V" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd43" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jKc" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZd4n" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZvN" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQg" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZd4t" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMv" resolve="resume" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jKi" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd5n" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd5G" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZCb" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcUN" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZd5L" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd5M" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd5N" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdPx" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcUN" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZd5P" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd5Y" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jKv" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZd5Z" role="2Oq$k0">
                <node concept="37vLTw" id="2pJszzmZd60" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQg" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZd61" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMb" resolve="detach" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jK_" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd6L" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZd77" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZJ3" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZcUN" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZd7c" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KT6" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZd31" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZd39" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZd3h" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="2pJszzmZd3i" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdOI" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZcQ2" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZd3k" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZd3l" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzI1" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZzI4" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZv5" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZcQM" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="2pJszzmZzHY" role="1SL9yI">
      <property role="TrG5h" value="waitingForReply" />
      <node concept="3cqZAl" id="2pJszzmZzHZ" role="3clF45" />
      <node concept="3clFbS" id="2pJszzmZzI0" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVjN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZzI6" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZzI7" role="3cpWs9">
              <property role="TrG5h" value="debugListenerMock" />
              <node concept="3uibUv" id="2pJszzmZzI8" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
              </node>
              <node concept="2YIFZM" id="2pJszzmZzI9" role="33vP2m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="2pJszzmZzIa" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Xc6q" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Xc6r" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="TIMEOUT" />
              <node concept="10Oyi0" id="6L3DaT6Xc6s" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Xc6t" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZzIb" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZzIc" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="2pJszzmZzId" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZzIe" role="33vP2m">
                <node concept="2WthIp" id="2pJszzmZzIf" role="2Oq$k0" />
                <node concept="2XshWL" id="2pJszzmZzIg" role="2OqNvi">
                  <ref role="2WH_rO" node="2pJszzmZcNE" resolve="injectDependencies" />
                  <node concept="37vLTw" id="2pJszzmZzIh" role="2XxRq1">
                    <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
                  </node>
                  <node concept="2YIFZM" id="6L3DaT6YgSk" role="2XxRq1">
                    <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                    <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZjP" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Xc6r" resolve="TIMEOUT" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZzIi" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZzIj" role="3cpWs9">
              <property role="TrG5h" value="session" />
              <node concept="3uibUv" id="2pJszzmZzIk" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZzIl" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ_2" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzIn" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzIo" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZzIp" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZzIq" role="3cpWs9">
              <property role="TrG5h" value="mListener" />
              <node concept="3uibUv" id="2pJszzmZzIr" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZzIs" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdXG" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzIu" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzIv" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT70qxx" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT70qxy" role="3cpWs9">
              <property role="TrG5h" value="debuggerListenerRegistry" />
              <node concept="3uibUv" id="6L3DaT70qxz" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
              </node>
              <node concept="2OqwBi" id="6L3DaT70qx$" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZfh" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT70qxA" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT70qxB" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT70qxC" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70qxD" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdBx" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT70qxy" resolve="debuggerListenerRegistry" />
              </node>
              <node concept="liA8E" id="6L3DaT70qxF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6ZrgJ" resolve="register" />
                <node concept="37vLTw" id="5HxjapvTdH$" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZzIw" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzIx" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzIy" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzIz" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZox" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzI_" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzIA" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZzIB" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
                <node concept="2YIFZM" id="2pJszzmZzIC" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="2pJszzmZzID" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZzIE" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2pJszzmZzIF" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZzIG" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="2pJszzmZzIH" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZzII" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
                <node concept="2YIFZM" id="2pJszzmZzIJ" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzIK" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzIL" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzIM" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdXw" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzIO" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzIP" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZzIQ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzIR" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzIS" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzIT" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZti" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzIV" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzIW" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZzIX" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZzIY" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVjZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzIZ" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJ0" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZpv" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJ2" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhZ" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJ3" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJ4" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZo1" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJ6" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhV" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJ7" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJ8" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZzJ9" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJa" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi3" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJb" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJc" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZzJd" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJe" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhR" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZzJf" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJg" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZzJh" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdzm" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJj" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZzJk" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="2OqwBi" id="2pJszzmZzJl" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdNN" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzJn" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzJo" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZzJp" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJq" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jKM" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzJr" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdtM" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIj" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZzJt" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMg" resolve="attach" />
                  <node concept="2YIFZM" id="2pJszzmZzJu" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="2pJszzmZzJv" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZzJw" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZzJx" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZzJy" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZzJz" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jKV" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1JcPmr$KtmB" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJ$" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJ_" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZzJA" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzIq" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJB" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVka" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJC" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jLu" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzJD" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZh3" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIj" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZzJF" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMv" resolve="resume" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jL$" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1JcPmr$Ktm_" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJG" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJH" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTd$L" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzIq" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJJ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJK" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJL" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZzJM" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzIq" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJN" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVke" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJO" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jLL" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZzJP" role="2Oq$k0">
                <node concept="37vLTw" id="2pJszzmZzJQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIj" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZzJR" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMb" resolve="detach" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jLR" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1JcPmr$KtmA" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJS" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZzJT" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ6e" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZzIq" resolve="mListener" />
              </node>
              <node concept="liA8E" id="2pJszzmZzJV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KT6" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZzJW" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVki" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzJX" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZzJY" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="2OqwBi" id="2pJszzmZzJZ" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdsC" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZzIc" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZzK1" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZzK2" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZzK3" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZzK4" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTe3B" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZzI7" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="2pJszzmZLh$" role="1SL9yI">
      <property role="TrG5h" value="concurrentRequestReply" />
      <node concept="3cqZAl" id="2pJszzmZLh_" role="3clF45" />
      <node concept="3clFbS" id="2pJszzmZLhA" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVkk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLhB" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLhC" role="3cpWs9">
              <property role="TrG5h" value="debugListenerMock" />
              <node concept="3uibUv" id="2pJszzmZLhD" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
              </node>
              <node concept="2YIFZM" id="2pJszzmZLhE" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="2pJszzmZLhF" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLmU" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLmV" role="3cpWs9">
              <property role="TrG5h" value="executor" />
              <node concept="3uibUv" id="6L3DaT6Y3ir" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~ExecutorService" resolve="ExecutorService" />
              </node>
              <node concept="2YIFZM" id="2pJszzmZLn8" role="33vP2m">
                <ref role="37wK5l" to="5zyv:~Executors.newFixedThreadPool(int):java.util.concurrent.ExecutorService" resolve="newFixedThreadPool" />
                <ref role="1Pybhc" to="5zyv:~Executors" resolve="Executors" />
                <node concept="3cmrfG" id="2pJszzmZLn9" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Xc71" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Xc72" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="TIMEOUT" />
              <node concept="10Oyi0" id="6L3DaT6Xc73" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Xc74" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLhG" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLhH" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="2pJszzmZLhI" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZLhJ" role="33vP2m">
                <node concept="2WthIp" id="2pJszzmZLhK" role="2Oq$k0" />
                <node concept="2XshWL" id="2pJszzmZLhL" role="2OqNvi">
                  <ref role="2WH_rO" node="2pJszzmZcNE" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvQZAz" role="2XxRq1">
                    <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZHA" role="2XxRq1">
                    <ref role="3cqZAo" node="2pJszzmZLmV" resolve="executor" />
                  </node>
                  <node concept="37vLTw" id="6L3DaT6Xc7o" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Xc72" resolve="TIMEOUT" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVko" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLhN" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLhO" role="3cpWs9">
              <property role="TrG5h" value="session" />
              <node concept="3uibUv" id="2pJszzmZLhP" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZLhQ" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZui" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLhS" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLhT" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLhU" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLhV" role="3cpWs9">
              <property role="TrG5h" value="mListener" />
              <property role="3TUv4t" value="true" />
              <node concept="3uibUv" id="2pJszzmZLhW" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="2pJszzmZLhX" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdTT" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLhZ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLi0" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT70qxJ" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT70qxK" role="3cpWs9">
              <property role="TrG5h" value="debuggerListenerRegistry" />
              <node concept="3uibUv" id="6L3DaT70qxL" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
              </node>
              <node concept="2OqwBi" id="6L3DaT70qxM" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTe2T" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT70qxO" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT70qxP" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT70qxQ" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70qxR" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ5G" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT70qxK" resolve="debuggerListenerRegistry" />
              </node>
              <node concept="liA8E" id="6L3DaT70qxT" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6ZrgJ" resolve="register" />
                <node concept="37vLTw" id="5HxjapvQZCR" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVks" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLnu" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLi1" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVku" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLi2" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLi3" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLi4" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdBQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLi6" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLi7" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZLi8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
                <node concept="2YIFZM" id="2pJszzmZLi9" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2pJszzmZLia" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZLib" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2pJszzmZLic" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZLid" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2pJszzmZLie" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="2pJszzmZLif" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
                <node concept="2YIFZM" id="2pJszzmZLig" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLih" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLii" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLij" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZoX" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLil" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLim" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZLin" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLio" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLip" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLiq" role="2Oq$k0">
                <node concept="37vLTw" id="2pJszzmZLir" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLis" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLit" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2pJszzmZLiu" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLiv" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVky" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiw" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLix" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZLiy" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZLiz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhZ" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLi$" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLi_" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTe2_" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZLiB" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhV" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiC" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLiD" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZLiE" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZLiF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi3" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVk_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiG" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLiH" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ9m" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="2pJszzmZLiJ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhR" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLiK" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiL" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZLiM" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdXo" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiO" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZLiP" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="2pJszzmZLiQ" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZEL" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLiS" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLiT" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLiU" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="2pJszzmZLv1" role="8Wnug">
            <node concept="3cpWsn" id="2pJszzmZLv2" role="3cpWs9">
              <property role="TrG5h" value="countDownLatch" />
              <property role="3TUv4t" value="true" />
              <node concept="3uibUv" id="2pJszzmZLv3" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~CountDownLatch" resolve="CountDownLatch" />
              </node>
              <node concept="2ShNRf" id="2pJszzmZLve" role="33vP2m">
                <node concept="1pGfFk" id="2pJszzmZLvg" role="2ShVmc">
                  <ref role="37wK5l" to="5zyv:~CountDownLatch.&lt;init&gt;(int)" resolve="CountDownLatch" />
                  <node concept="3cmrfG" id="2pJszzmZLvh" role="37wK5m">
                    <property role="3cmrfH" value="100" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZONd" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLiV" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jM4" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLiW" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZuw" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhO" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZLiY" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMg" resolve="attach" />
                  <node concept="2YIFZM" id="2pJszzmZLiZ" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="2pJszzmZLj0" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZLj1" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="2pJszzmZLj2" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZLj3" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="2pJszzmZLj4" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jMd" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1JcPmr$KtmC" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLpJ" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLq6" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTe1B" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLmV" resolve="executor" />
              </node>
              <node concept="liA8E" id="2pJszzmZLqc" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="2pJszzmZLqd" role="37wK5m">
                  <node concept="YeOm9" id="2pJszzmZLqh" role="2ShVmc">
                    <node concept="1Y3b0j" id="2pJszzmZLqi" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="2pJszzmZLqj" role="1B3o_S" />
                      <node concept="3clFb_" id="2pJszzmZLqk" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="2pJszzmZLql" role="1B3o_S" />
                        <node concept="3cqZAl" id="2pJszzmZLqm" role="3clF45" />
                        <node concept="3clFbS" id="2pJszzmZLqn" role="3clF47">
                          <node concept="3clFbF" id="2pJszzmZLjh" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZLji" role="3clFbG">
                              <node concept="37vLTw" id="2pJszzmZLjj" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLhV" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZLjk" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="2pJszzmZONf" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZONt" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdwU" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZONz" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZVdC" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZVdy" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZVdz" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZVd$" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="2pJszzmZVd_" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="2pJszzmZVdB" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
                <node concept="Rm8GO" id="2pJszzmZVdA" role="37wK5m">
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLjl" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jMK" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLjm" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvQZCn" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhO" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZLjo" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMv" resolve="resume" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jMQ" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLqE" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLqF" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdGr" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLmV" resolve="executor" />
              </node>
              <node concept="liA8E" id="2pJszzmZLqH" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="2pJszzmZLqI" role="37wK5m">
                  <node concept="YeOm9" id="2pJszzmZLqJ" role="2ShVmc">
                    <node concept="1Y3b0j" id="2pJszzmZLqK" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="2pJszzmZLqL" role="1B3o_S" />
                      <node concept="3clFb_" id="2pJszzmZLqM" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="2pJszzmZLqN" role="1B3o_S" />
                        <node concept="3cqZAl" id="2pJszzmZLqO" role="3clF45" />
                        <node concept="3clFbS" id="2pJszzmZLqP" role="3clF47">
                          <node concept="3clFbF" id="2pJszzmZLjv" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZLjw" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvQZpd" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLhV" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZLjy" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLrT" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLrU" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdE3" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLmV" resolve="executor" />
              </node>
              <node concept="liA8E" id="2pJszzmZLrW" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="2pJszzmZLrX" role="37wK5m">
                  <node concept="YeOm9" id="2pJszzmZLrY" role="2ShVmc">
                    <node concept="1Y3b0j" id="2pJszzmZLrZ" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <node concept="3Tm1VV" id="2pJszzmZLs0" role="1B3o_S" />
                      <node concept="3clFb_" id="2pJszzmZLs1" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="2pJszzmZLs2" role="1B3o_S" />
                        <node concept="3cqZAl" id="2pJszzmZLs3" role="3clF45" />
                        <node concept="3clFbS" id="2pJszzmZLs4" role="3clF47">
                          <node concept="3clFbF" id="2pJszzmZLjz" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZLj$" role="3clFbG">
                              <node concept="37vLTw" id="2pJszzmZLj_" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLhV" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZLjA" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="2pJszzmZS0u" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZS0v" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvQZhB" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZS0x" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6YWyZ" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZYqu" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZYqv" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdOr" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="2pJszzmZYqx" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="2pJszzmZYqy" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
                <node concept="Rm8GO" id="2pJszzmZYqz" role="37wK5m">
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6YWyY" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLjB" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6YWyQ" role="3clFbG">
              <node concept="2OqwBi" id="2pJszzmZLjC" role="2Oq$k0">
                <node concept="37vLTw" id="2pJszzmZLjD" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhO" resolve="session" />
                </node>
                <node concept="liA8E" id="2pJszzmZLjE" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMb" resolve="detach" />
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT6YWyX" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLsP" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZLsQ" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZLsR" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLmV" resolve="executor" />
              </node>
              <node concept="liA8E" id="2pJszzmZLsS" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="2pJszzmZLsT" role="37wK5m">
                  <node concept="YeOm9" id="2pJszzmZLsU" role="2ShVmc">
                    <node concept="1Y3b0j" id="2pJszzmZLsV" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="2pJszzmZLsW" role="1B3o_S" />
                      <node concept="3clFb_" id="2pJszzmZLsX" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="2pJszzmZLsY" role="1B3o_S" />
                        <node concept="3cqZAl" id="2pJszzmZLsZ" role="3clF45" />
                        <node concept="3clFbS" id="2pJszzmZLt0" role="3clF47">
                          <node concept="3clFbF" id="2pJszzmZLjL" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZLjM" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdzg" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLhV" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZLjO" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z37KT6" resolve="debuggerDetached" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="2pJszzmZLvi" role="3cqZAp">
                            <node concept="2OqwBi" id="2pJszzmZLvw" role="3clFbG">
                              <node concept="37vLTw" id="2pJszzmZLvj" role="2Oq$k0">
                                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="2pJszzmZLvC" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLsF" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZYq$" role="8Wnug">
            <node concept="2OqwBi" id="2pJszzmZYq_" role="3clFbG">
              <node concept="37vLTw" id="2pJszzmZYqA" role="2Oq$k0">
                <ref role="3cqZAo" node="2pJszzmZLv2" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="2pJszzmZYqB" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="2pJszzmZYqC" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
                <node concept="Rm8GO" id="2pJszzmZYqD" role="37wK5m">
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLjQ" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZLjR" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="2pJszzmZLjS" role="37wK5m">
                <node concept="37vLTw" id="2pJszzmZLjT" role="2Oq$k0">
                  <ref role="3cqZAo" node="2pJszzmZLhH" resolve="injector" />
                </node>
                <node concept="liA8E" id="2pJszzmZLjU" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="2pJszzmZLjV" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="2pJszzmZLjW" role="8Wnug">
            <node concept="2YIFZM" id="2pJszzmZLjX" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZLf" role="37wK5m">
                <ref role="3cqZAo" node="2pJszzmZLhC" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="2pJszzmZLjP" role="8Wnug" />
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6WDtD" role="1SL9yI">
      <property role="TrG5h" value="receivingTimeout" />
      <node concept="3cqZAl" id="6L3DaT6WDtE" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6WDtF" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVkY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WDtG" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WDtH" role="3cpWs9">
              <property role="TrG5h" value="debugListenerMock" />
              <node concept="3uibUv" id="6L3DaT6WDtI" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6WDtJ" role="33vP2m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="6L3DaT6WDtK" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVkZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WDtL" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WDtM" role="3cpWs9">
              <property role="TrG5h" value="executor" />
              <node concept="3uibUv" id="6L3DaT6Y3jh" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~ExecutorService" resolve="ExecutorService" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6WDtO" role="33vP2m">
                <ref role="1Pybhc" to="5zyv:~Executors" resolve="Executors" />
                <ref role="37wK5l" to="5zyv:~Executors.newFixedThreadPool(int):java.util.concurrent.ExecutorService" resolve="newFixedThreadPool" />
                <node concept="3cmrfG" id="6L3DaT6WDtP" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Xfpn" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Xfpo" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="TIMEOUT" />
              <node concept="10Oyi0" id="6L3DaT6Xfpp" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Xfpq" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WDtQ" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WDtR" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6WDtS" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6WDtT" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6WDtU" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6WDtV" role="2OqNvi">
                  <ref role="2WH_rO" node="2pJszzmZcNE" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvTelY" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6WDtH" resolve="debugListenerMock" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZAR" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6WDtM" resolve="executor" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdYg" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Xfpo" resolve="TIMEOUT" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT70nee" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT70nef" role="3cpWs9">
              <property role="TrG5h" value="debuggerListenerRegistry" />
              <node concept="3uibUv" id="6L3DaT70neg" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
              </node>
              <node concept="2OqwBi" id="6L3DaT70ney" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdG3" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6WDtR" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT70neC" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT70neI" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6Zrg$" resolve="DebuggerListenerRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT70neO" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70nf3" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT70neP" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT70nef" resolve="debuggerListenerRegistry" />
              </node>
              <node concept="liA8E" id="6L3DaT70nf8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6ZrgJ" resolve="register" />
                <node concept="37vLTw" id="6L3DaT70nf9" role="37wK5m">
                  <ref role="3cqZAo" node="6L3DaT6WDtH" resolve="debugListenerMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WDtY" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WDtZ" role="3cpWs9">
              <property role="TrG5h" value="session" />
              <node concept="3uibUv" id="6L3DaT6WDu0" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6WDu1" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6WDu2" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6WDtR" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6WDu3" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6WDu4" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WDv2" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WDuz" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WDuL" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdXf" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6WDtH" resolve="debugListenerMock" />
              </node>
              <node concept="liA8E" id="6L3DaT6WDuU" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6WGSO" resolve="lastRequestTimedout" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WD$y" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WD$z" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdK7" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6WDtH" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WDzD" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WDud" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT70jND" role="3clFbG">
              <node concept="2OqwBi" id="6L3DaT6WDue" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdRs" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6WDtZ" resolve="session" />
                </node>
                <node concept="liA8E" id="6L3DaT6WDug" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgMg" resolve="attach" />
                  <node concept="2YIFZM" id="6L3DaT6WDuh" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="6L3DaT6WDui" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="6L3DaT6WDuj" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="6L3DaT6WDuk" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="6L3DaT6WDul" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="6L3DaT6WDum" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT70jNM" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVla" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WDv0" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WDzy" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WDzK" role="3clFbG">
              <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
              <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
              <node concept="17qRlL" id="6L3DaT6Xq6f" role="37wK5m">
                <node concept="3cmrfG" id="6L3DaT6Xq6i" role="3uHU7w">
                  <property role="3cmrfH" value="2" />
                </node>
                <node concept="37vLTw" id="6L3DaT6Xq62" role="3uHU7B">
                  <ref role="3cqZAo" node="6L3DaT6Xfpo" resolve="TIMEOUT" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WDv1" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVld" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WD$p" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WD$J" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XmOs" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6WDtH" resolve="debugListenerMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6XA_g" role="1SL9yI">
      <property role="TrG5h" value="requestingProgramState" />
      <node concept="3cqZAl" id="6L3DaT6XA_h" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6XA_i" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVle" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XA_j" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XA_k" role="3cpWs9">
              <property role="TrG5h" value="debugListenerMock" />
              <node concept="3uibUv" id="6L3DaT6XA_l" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6XA_m" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="6L3DaT6XA_n" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5HSnKgHPEh_" resolve="DebuggerListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XA_o" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XA_p" role="3cpWs9">
              <property role="TrG5h" value="executor" />
              <node concept="3uibUv" id="6L3DaT6Ybvd" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~ExecutorService" resolve="ExecutorService" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6XA_r" role="33vP2m">
                <ref role="37wK5l" to="5zyv:~Executors.newFixedThreadPool(int):java.util.concurrent.ExecutorService" resolve="newFixedThreadPool" />
                <ref role="1Pybhc" to="5zyv:~Executors" resolve="Executors" />
                <node concept="3cmrfG" id="6L3DaT6XA_s" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XA_t" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XA_u" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="TIMEOUT" />
              <node concept="10Oyi0" id="6L3DaT6XA_v" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6XA_w" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XA_x" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XA_y" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6XA_z" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XA_$" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6XA__" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6XA_A" role="2OqNvi">
                  <ref role="2WH_rO" node="2pJszzmZcNE" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvTds6" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6XA_k" resolve="debugListenerMock" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZwP" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6XA_p" resolve="executor" />
                  </node>
                  <node concept="37vLTw" id="6L3DaT6XA_D" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6XA_u" resolve="TIMEOUT" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVli" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XA_E" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XA_F" role="3cpWs9">
              <property role="TrG5h" value="programStateManager" />
              <node concept="3uibUv" id="6L3DaT6XAAD" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM0" resolve="IProgramStateManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XA_H" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ4u" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_y" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XA_J" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XAAQ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM0" resolve="IProgramStateManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XAAY" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XAAZ" role="3cpWs9">
              <property role="TrG5h" value="session" />
              <node concept="3uibUv" id="6L3DaT6XAB0" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XABg" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdWU" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_y" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XABm" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XABs" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XABA" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XABB" role="3cpWs9">
              <property role="TrG5h" value="mListener" />
              <property role="3TUv4t" value="true" />
              <node concept="3uibUv" id="6L3DaT6XABC" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XABT" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ87" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_y" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XABZ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XAC1" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVll" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XAE3" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XAE4" role="3cpWs9">
              <property role="TrG5h" value="countDownLatch" />
              <property role="3TUv4t" value="true" />
              <node concept="3uibUv" id="6L3DaT6XAE5" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~CountDownLatch" resolve="CountDownLatch" />
              </node>
              <node concept="2ShNRf" id="6L3DaT6XAEa" role="33vP2m">
                <node concept="1pGfFk" id="6L3DaT6XAEc" role="2ShVmc">
                  <ref role="37wK5l" to="5zyv:~CountDownLatch.&lt;init&gt;(int)" resolve="CountDownLatch" />
                  <node concept="3cmrfG" id="6L3DaT6XAEd" role="37wK5m">
                    <property role="3cmrfH" value="100" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XALS" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XALT" role="3cpWs9">
              <property role="TrG5h" value="programStatePoviderMock" />
              <node concept="3uibUv" id="6L3DaT6XALU" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XAMf" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XAM2" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_y" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XAMl" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XAMn" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVln" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Y$pl" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Y$pm" role="3cpWs9">
              <property role="TrG5h" value="mProgramStateManager" />
              <node concept="3uibUv" id="6L3DaT6Y$pp" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Y$pC" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ_I" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_y" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Y$pI" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Y$pK" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Y$ph" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XAM_" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XAMA" role="3cpWs9">
              <property role="TrG5h" value="threadMock" />
              <node concept="3uibUv" id="6L3DaT6XAMB" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6XAMH" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="6L3DaT6XAMJ" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XANj" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XANk" role="3cpWs9">
              <property role="TrG5h" value="stackFrameList" />
              <node concept="_YKpA" id="6L3DaT6XANl" role="1tU5fm">
                <node concept="3uibUv" id="6L3DaT6XANq" role="_ZDj9">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
              <node concept="2ShNRf" id="6L3DaT6XANs" role="33vP2m">
                <node concept="Tc6Ow" id="6L3DaT6XANu" role="2ShVmc">
                  <node concept="3uibUv" id="6L3DaT6XANw" role="HW$YZ">
                    <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XANB" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XANC" role="3cpWs9">
              <property role="TrG5h" value="stackFrameMock" />
              <node concept="3uibUv" id="6L3DaT6XAND" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
              <node concept="2YIFZM" id="6L3DaT6XANJ" role="33vP2m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="6L3DaT6XANL" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVls" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XANT" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAOa" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdWW" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XANk" resolve="stackFrameList" />
              </node>
              <node concept="TSZUe" id="6L3DaT6XAOg" role="2OqNvi">
                <node concept="37vLTw" id="5HxjapvTdCU" role="25WWJ7">
                  <ref role="3cqZAo" node="6L3DaT6XANC" resolve="stackFrameMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAOn" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAOD" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6XAOs" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="6L3DaT6XAN8" role="37wK5m">
                  <node concept="37vLTw" id="6L3DaT6XAMS" role="2Oq$k0">
                    <ref role="3cqZAo" node="6L3DaT6XAMA" resolve="threadMock" />
                  </node>
                  <node concept="liA8E" id="6L3DaT6XANe" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT6XAOI" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvQZla" role="37wK5m">
                  <ref role="3cqZAo" node="6L3DaT6XANk" resolve="stackFrameList" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6YyAU" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6YyAV" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6YyAW" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="6L3DaT6YyBg" role="37wK5m">
                  <node concept="37vLTw" id="6L3DaT6YyB3" role="2Oq$k0">
                    <ref role="3cqZAo" node="6L3DaT6XALT" resolve="programStatePoviderMock" />
                  </node>
                  <node concept="liA8E" id="6L3DaT6YyBm" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT6YyB0" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvQZ8N" role="37wK5m">
                  <ref role="3cqZAo" node="6L3DaT6XAMA" resolve="threadMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAMN" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Y$p7" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Y$p8" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6Y$p9" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="6L3DaT6Y$q3" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZq0" role="2Oq$k0">
                    <ref role="3cqZAo" node="6L3DaT6Y$pm" resolve="mProgramStateManager" />
                  </node>
                  <node concept="liA8E" id="6L3DaT6Y$q9" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:5Y9SYQfc1O8" resolve="getCurrentNode" />
                    <node concept="2YIFZM" id="6L3DaT6Y$qb" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="6L3DaT6Y$qd" role="37wK5m">
                        <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT6Y$pd" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="6L3DaT6Y$qf" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="6L3DaT6Y$qh" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Y$p4" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVly" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Y$rq" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6Y$rr" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZqc" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Y$pm" resolve="mProgramStateManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAOR" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6XAOW" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZnn" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XAMA" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6YyBo" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6YyBp" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="6L3DaT6YyBr" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XALT" resolve="programStatePoviderMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVl_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAOY" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6XAOZ" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdvs" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XANC" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAEe" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XACf" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XACv" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6XACg" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAAZ" resolve="session" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAC$" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgMg" resolve="attach" />
                <node concept="2YIFZM" id="6L3DaT6XACA" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="6L3DaT6XACC" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="Xl_RD" id="6L3DaT6XACO" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="Xl_RD" id="6L3DaT6XACY" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="6L3DaT6XAD7" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="3cmrfG" id="6L3DaT6XAD9" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XADB" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XADC" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6XADD" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XA_p" resolve="executor" />
              </node>
              <node concept="liA8E" id="6L3DaT6XADE" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="6L3DaT6XADF" role="37wK5m">
                  <node concept="YeOm9" id="6L3DaT6XADG" role="2ShVmc">
                    <node concept="1Y3b0j" id="6L3DaT6XADH" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="6L3DaT6XADI" role="1B3o_S" />
                      <node concept="3clFb_" id="6L3DaT6XADJ" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="6L3DaT6XADK" role="1B3o_S" />
                        <node concept="3cqZAl" id="6L3DaT6XADL" role="3clF45" />
                        <node concept="3clFbS" id="6L3DaT6XADM" role="3clF47">
                          <node concept="3clFbF" id="6L3DaT6XADb" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XADp" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdUV" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XABB" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XADy" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT6XADR" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XADS" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvQZeN" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XADU" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XADz" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAEj" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAEk" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdyM" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAEm" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="6L3DaT6XAEn" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="Rm8GO" id="6L3DaT6XAEo" role="37wK5m">
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XABx" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAE$" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAFj" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdCl" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAAZ" resolve="session" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAFo" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgMv" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAEI" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAEJ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZSO" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XA_p" resolve="executor" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAEL" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="6L3DaT6XAEM" role="37wK5m">
                  <node concept="YeOm9" id="6L3DaT6XAEN" role="2ShVmc">
                    <node concept="1Y3b0j" id="6L3DaT6XAEO" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="6L3DaT6XAEP" role="1B3o_S" />
                      <node concept="3clFb_" id="6L3DaT6XAEQ" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="6L3DaT6XAER" role="1B3o_S" />
                        <node concept="3cqZAl" id="6L3DaT6XAES" role="3clF45" />
                        <node concept="3clFbS" id="6L3DaT6XAET" role="3clF47">
                          <node concept="3clFbF" id="6L3DaT6XAEU" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XAEV" role="3clFbG">
                              <node concept="37vLTw" id="6L3DaT6XAEW" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XABB" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XAEX" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT6XAEY" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XAEZ" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdP5" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XAF1" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAEs" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAFw" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAFx" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdX$" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAFz" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="6L3DaT6XAF$" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="Rm8GO" id="6L3DaT6XAF_" role="37wK5m">
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAFA" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAFB" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAFC" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdJc" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAAZ" resolve="session" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAFE" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgM$" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAFF" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAFG" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTemV" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XA_p" resolve="executor" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAFI" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Executor.execute(java.lang.Runnable):void" resolve="execute" />
                <node concept="2ShNRf" id="6L3DaT6XAFJ" role="37wK5m">
                  <node concept="YeOm9" id="6L3DaT6XAFK" role="2ShVmc">
                    <node concept="1Y3b0j" id="6L3DaT6XAFL" role="YeSDq">
                      <property role="2bfB8j" value="true" />
                      <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                      <ref role="1Y3XeK" to="wyt6:~Runnable" resolve="Runnable" />
                      <node concept="3Tm1VV" id="6L3DaT6XAFM" role="1B3o_S" />
                      <node concept="3clFb_" id="6L3DaT6XAFN" role="jymVt">
                        <property role="1EzhhJ" value="false" />
                        <property role="TrG5h" value="run" />
                        <property role="DiZV1" value="false" />
                        <property role="IEkAT" value="false" />
                        <node concept="3Tm1VV" id="6L3DaT6XAFO" role="1B3o_S" />
                        <node concept="3cqZAl" id="6L3DaT6XAFP" role="3clF45" />
                        <node concept="3clFbS" id="6L3DaT6XAFQ" role="3clF47">
                          <node concept="3clFbF" id="6L3DaT6XAFR" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XAFS" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdHY" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XABB" resolve="mListener" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XAFU" role="2OqNvi">
                                <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
                              </node>
                            </node>
                          </node>
                          <node concept="3clFbF" id="6L3DaT6XAFV" role="3cqZAp">
                            <node concept="2OqwBi" id="6L3DaT6XAFW" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvQZFE" role="2Oq$k0">
                                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
                              </node>
                              <node concept="liA8E" id="6L3DaT6XAFY" role="2OqNvi">
                                <ref role="37wK5l" to="5zyv:~CountDownLatch.countDown():void" resolve="countDown" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAEw" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAG4" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6XAG5" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdZn" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAE4" resolve="countDownLatch" />
              </node>
              <node concept="liA8E" id="6L3DaT6XAG7" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~CountDownLatch.await(long,java.util.concurrent.TimeUnit):boolean" resolve="await" />
                <node concept="3cmrfG" id="6L3DaT6XAG8" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="Rm8GO" id="6L3DaT6XAG9" role="37wK5m">
                  <ref role="Rm8GQ" to="5zyv:~TimeUnit.SECONDS" resolve="SECONDS" />
                  <ref role="1Px2BO" to="5zyv:~TimeUnit" resolve="TimeUnit" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAFq" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XAJK" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XAJL" role="3cpWs9">
              <property role="TrG5h" value="programState" />
              <node concept="3uibUv" id="6L3DaT6XAJM" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~Future" resolve="Future" />
                <node concept="3uibUv" id="6L3DaT6Y61$" role="11_B2D">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
              <node concept="2OqwBi" id="6L3DaT6XAGu" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XAGe" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_F" resolve="programStateManager" />
                </node>
                <node concept="liA8E" id="6L3DaT6XAJf" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6L3DaT6XAHY" resolve="getProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="2Hmddi" id="6L3DaT6XAKs" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Y61L" role="2Hmdds">
              <node concept="37vLTw" id="5HxjapvQZ_4" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XAJL" resolve="programState" />
              </node>
              <node concept="liA8E" id="6L3DaT6Y61R" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="6L3DaT6XAKz" role="8Wnug">
            <node concept="3clFbC" id="6L3DaT6XALG" role="3vwVQn">
              <node concept="3cmrfG" id="6L3DaT6XALJ" role="3uHU7w">
                <property role="3cmrfH" value="1" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XRGj" role="3uHU7B">
                <node concept="2OqwBi" id="6L3DaT6XRG0" role="2Oq$k0">
                  <node concept="2OqwBi" id="6L3DaT6XRFq" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvQZG7" role="2Oq$k0">
                      <ref role="3cqZAo" node="6L3DaT6XAJL" resolve="programState" />
                    </node>
                    <node concept="liA8E" id="6L3DaT6XRFw" role="2OqNvi">
                      <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
                    </node>
                  </node>
                  <node concept="liA8E" id="6L3DaT6XRG6" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
                <node concept="liA8E" id="6L3DaT6XRGo" role="2OqNvi">
                  <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Y$mg" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Y$oe" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Y$of" role="3cpWs9">
              <property role="TrG5h" value="node" />
              <node concept="3uibUv" id="6L3DaT6Y$og" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~Future" resolve="Future" />
                <node concept="3uibUv" id="6L3DaT6Y$oi" role="11_B2D">
                  <ref role="3uigEE" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                </node>
              </node>
              <node concept="2OqwBi" id="6L3DaT6Y$ox" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZnD" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6XA_F" resolve="programStateManager" />
                </node>
                <node concept="liA8E" id="6L3DaT6Y$oB" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgM2" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="6L3DaT6Y$oD" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="6L3DaT6Y$oJ" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="2Hmddi" id="6L3DaT6Y$oN" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Y$oO" role="2Hmdds">
              <node concept="37vLTw" id="5HxjapvTdJy" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Y$of" resolve="node" />
              </node>
              <node concept="liA8E" id="6L3DaT6Y$oQ" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6XAP5" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAPb" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6XAPn" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZGt" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XAMA" resolve="threadMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6XAPe" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6XAPp" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdPY" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XANC" resolve="stackFrameMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVlZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6YzuN" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6YzuT" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTdN9" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XALT" resolve="programStatePoviderMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Y$r$" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6Y$rE" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZQK" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Y$pm" resolve="mProgramStateManager" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="6L3DaT6TVwZ">
    <property role="TrG5h" value="RequestTimeoutInterceptor" />
    <property role="3GE5qa" value="api" />
    <node concept="1LZb2c" id="6L3DaT6TVx7" role="1SL9yI">
      <property role="TrG5h" value="requestWithoutReply" />
      <node concept="3cqZAl" id="6L3DaT6TVx8" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6TVx9" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVm1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VMGD" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VMGE" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6VMGF" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6VMGH" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VJu1" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VJu2" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6VJu3" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6VJu4" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6VJu5" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6VJu6" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="6L3DaT6VWlQ" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6VMGE" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VJu7" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VJu8" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6VJu9" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6VJua" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdI$" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6VJu2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6VJuc" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6VJud" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VJue" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VJuf" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6VJug" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6VJuh" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6VJui" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6VJu2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6VJuj" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6VJuk" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VJul" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VJum" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6VJun" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6VJuo" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZR7" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6VJu2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6VJuq" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6VJur" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6VJus" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VJut" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6VJuu" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZj3" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6VJum" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6VJuw" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6TXET" resolve="lastRequestHasTimeout" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VJux" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6VJuy" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6VJuz" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="6L3DaT6VJu$" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="6L3DaT6VJu_" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VJuA" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6VJuB" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="6L3DaT6VJuC" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6VJum" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVma" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6VJuD" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VJuE" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6VJuF" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZRW" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6VJu8" resolve="timeoutInterceptorServices" />
              </node>
              <node concept="liA8E" id="6L3DaT6VJuH" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6VJuM" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VMGA" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6VMH6" role="3clFbG">
              <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
              <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
              <node concept="3cpWs3" id="6L3DaT6VWm9" role="37wK5m">
                <node concept="3cmrfG" id="6L3DaT6VWmc" role="3uHU7w">
                  <property role="3cmrfH" value="50" />
                </node>
                <node concept="37vLTw" id="5HxjapvTd$Z" role="3uHU7B">
                  <ref role="3cqZAo" node="6L3DaT6VMGE" resolve="timeout" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVme" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6VMG_" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6VJuN" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6VJuO" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZ5X" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6VJum" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6Wu9v" role="1SL9yI">
      <property role="TrG5h" value="multipleRequestsWithoutReplies" />
      <node concept="3cqZAl" id="6L3DaT6Wu9w" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6Wu9x" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVmg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wu9y" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wu9z" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6Wu9$" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Wu9_" role="33vP2m">
                <property role="3cmrfH" value="50" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WuaY" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WuaZ" role="3cpWs9">
              <property role="3TUv4t" value="true" />
              <property role="TrG5h" value="amountOfRequests" />
              <node concept="10Oyi0" id="6L3DaT6Wub1" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Wub3" role="33vP2m">
                <property role="3cmrfH" value="4" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wu9A" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wu9B" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6Wu9C" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wu9D" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6Wu9E" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6Wu9F" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvQZDw" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Wu9z" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wu9H" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wu9I" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6Wu9J" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wu9K" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Wu9L" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wu9B" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wu9M" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wu9N" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wu9O" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wu9P" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6Wu9Q" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wu9R" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdOl" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wu9B" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wu9T" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wu9U" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVml" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wu9V" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wu9W" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6Wu9X" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wu9Y" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Wu9Z" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wu9B" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wua0" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wua1" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Wua2" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wua3" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wua4" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdNg" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wu9W" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wua6" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6L3DaT6TXET" resolve="lastRequestHasTimeout" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wua7" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wua8" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6Wua9" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wuaa" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="37vLTw" id="5HxjapvTdvA" role="37wK5m">
                  <ref role="3cqZAo" node="6L3DaT6WuaZ" resolve="amountOfRequests" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wuac" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6Wuad" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6Wuae" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wu9W" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Wuaf" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="1Dw8fO" id="6L3DaT6WuaA" role="8Wnug">
            <node concept="3clFbS" id="6L3DaT6WuaB" role="2LFqv$">
              <node concept="3clFbF" id="6L3DaT6Wuag" role="3cqZAp">
                <node concept="2OqwBi" id="6L3DaT6Wuah" role="3clFbG">
                  <node concept="37vLTw" id="6L3DaT6Wuai" role="2Oq$k0">
                    <ref role="3cqZAo" node="6L3DaT6Wu9I" resolve="timeoutInterceptorServices" />
                  </node>
                  <node concept="liA8E" id="6L3DaT6Wuaj" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="6L3DaT6Wual" role="3cqZAp">
                <node concept="2YIFZM" id="6L3DaT6Wuam" role="3clFbG">
                  <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                  <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                  <node concept="3cpWs3" id="6L3DaT6Wuan" role="37wK5m">
                    <node concept="3cmrfG" id="6L3DaT6Wuao" role="3uHU7w">
                      <property role="3cmrfH" value="50" />
                    </node>
                    <node concept="37vLTw" id="6L3DaT6Wuap" role="3uHU7B">
                      <ref role="3cqZAo" node="6L3DaT6Wu9z" resolve="timeout" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWsn" id="6L3DaT6WuaD" role="1Duv9x">
              <property role="TrG5h" value="invocations" />
              <node concept="10Oyi0" id="6L3DaT6WuaE" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6WuaG" role="33vP2m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
            <node concept="3eOVzh" id="6L3DaT6WuaU" role="1Dwp0S">
              <node concept="37vLTw" id="5HxjapvQZji" role="3uHU7w">
                <ref role="3cqZAo" node="6L3DaT6WuaZ" resolve="amountOfRequests" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZ$D" role="3uHU7B">
                <ref role="3cqZAo" node="6L3DaT6WuaD" resolve="invocations" />
              </node>
            </node>
            <node concept="3uNrnE" id="6L3DaT6Wubj" role="1Dwrff">
              <node concept="37vLTw" id="5HxjapvTdMV" role="2$L3a6">
                <ref role="3cqZAo" node="6L3DaT6WuaD" resolve="invocations" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVms" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Wuaq" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wuar" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6Wuas" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTd_H" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wu9W" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6TY2B" role="1SL9yI">
      <property role="TrG5h" value="requestWithReply" />
      <node concept="3cqZAl" id="6L3DaT6TY2C" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6TY2D" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVmu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6VMGM" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6VMGN" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6VMGO" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6VMGP" role="33vP2m">
                <property role="3cmrfH" value="200" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6TY2K" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6TY2L" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6TY2M" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6TY2N" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6TY2O" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6TY2P" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvQZJ1" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6VMGN" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6TY2Q" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6TY2R" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6TY41" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6TY2T" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZjH" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6TY2L" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6TY2V" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6TY4b" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6TY4$" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6TY4_" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6TY4A" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6TY4T" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZLJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6TY2L" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6TY4V" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6TY54" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6TY5V" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6TY5W" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6TY5X" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6TY6g" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTe4n" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6TY2L" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6TY6m" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6TY6o" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6TY34" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY35" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6TY36" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6TY6s" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6TY5W" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6TY38" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVm_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY39" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6TY3a" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6TY3b" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="6L3DaT6TY3c" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="6L3DaT6TY3d" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY3e" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6TY3f" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdJE" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6TY5W" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6TY3h" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY3i" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6TY3j" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6TY3k" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6TY2R" resolve="timeoutInterceptorServices" />
              </node>
              <node concept="liA8E" id="6L3DaT6TY3l" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY5z" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6TY5L" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdGp" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6TY4_" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6TY5Q" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6TY5R" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6TY3n" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6TY3o" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="6L3DaT6TY6u" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6TY5W" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6Wtka" role="1SL9yI">
      <property role="TrG5h" value="multipleRequestsWithReplies" />
      <node concept="3cqZAl" id="6L3DaT6Wtkb" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6Wtkc" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVmG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtkd" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtke" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6Wtkf" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Wtkg" role="33vP2m">
                <property role="3cmrfH" value="200" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtkh" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtki" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6Wtkj" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtkk" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6Wtkl" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6Wtkm" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvTd$t" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Wtke" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtko" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtkp" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6Wtkq" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtkr" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdsJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtki" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wtkt" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wtku" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtkv" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtkw" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6Wtkx" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtky" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZoB" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtki" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wtk$" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wtk_" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WtkA" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WtkB" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6WtkC" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6WtkD" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6WtkE" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtki" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6WtkF" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6WtkG" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WtkH" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtkI" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtkJ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTenD" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6WtkB" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6WtkL" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtkM" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtkN" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6WtkO" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="6L3DaT6WtkP" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="6L3DaT6WtkQ" role="37wK5m">
                  <property role="3cmrfH" value="3" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtkR" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WtkS" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdJk" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6WtkB" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WtkU" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtkV" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtkW" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6WtkX" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkp" resolve="timeoutInterceptorServices" />
              </node>
              <node concept="liA8E" id="6L3DaT6WtkY" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtkZ" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtl0" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6Wtl1" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkw" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtl2" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1ZspCbdhSnm" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtle" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtlf" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZls" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkp" resolve="timeoutInterceptorServices" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtlh" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtli" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtlj" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6Wtlk" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkw" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtll" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1ZspCbdhSno" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtlm" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtln" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6Wtlo" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkp" resolve="timeoutInterceptorServices" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtlp" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtlq" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtlr" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZcR" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtkw" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtlt" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Wtl3" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVmZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtl4" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6Wtl5" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdz6" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6WtkB" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6Wst3" role="1SL9yI">
      <property role="TrG5h" value="replyWithoutRequest" />
      <node concept="3cqZAl" id="6L3DaT6Wst4" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6Wst5" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVn0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wst6" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wst7" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6Wst8" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Wst9" role="33vP2m">
                <property role="3cmrfH" value="200" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wsta" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wstb" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6Wstc" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wstd" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6Wste" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6Wstf" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvTdGZ" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6Wst7" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wsth" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wsti" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6Wstj" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wstk" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Wstl" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wstb" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wstm" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wstn" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wsto" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wstp" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6Wstq" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wstr" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTekt" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wstb" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wstt" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wstu" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wstv" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wstw" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6Wstx" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wsty" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Wstz" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wstb" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wst$" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wst_" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WstA" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WstB" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WstC" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6WstD" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wstw" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6WstE" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WstF" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WstG" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6WstH" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="6L3DaT6WstI" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="6L3DaT6WstJ" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WstK" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WstL" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="6L3DaT6WstM" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wstw" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WstN" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVna" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WstS" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WstT" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdSe" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wstp" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6WstV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WstW" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WstX" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WstY" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="6L3DaT6WstZ" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wstw" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="6L3DaT6WtiU" role="1SL9yI">
      <property role="TrG5h" value="multipleRepliesWithoutRequest" />
      <node concept="3cqZAl" id="6L3DaT6WtiV" role="3clF45" />
      <node concept="3clFbS" id="6L3DaT6WtiW" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVnd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6WtiX" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6WtiY" role="3cpWs9">
              <property role="TrG5h" value="timeout" />
              <property role="3TUv4t" value="true" />
              <node concept="10Oyi0" id="6L3DaT6WtiZ" role="1tU5fm" />
              <node concept="3cmrfG" id="6L3DaT6Wtj0" role="33vP2m">
                <property role="3cmrfH" value="200" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVne" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtj1" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtj2" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="6L3DaT6Wtj3" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtj4" role="33vP2m">
                <node concept="2WthIp" id="6L3DaT6Wtj5" role="2Oq$k0" />
                <node concept="2XshWL" id="6L3DaT6Wtj6" role="2OqNvi">
                  <ref role="2WH_rO" node="6L3DaT6TVxe" resolve="injectDependencies" />
                  <node concept="37vLTw" id="5HxjapvTemv" role="2XxRq1">
                    <ref role="3cqZAo" node="6L3DaT6WtiY" resolve="timeout" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtj8" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtj9" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorServices" />
              <node concept="3uibUv" id="6L3DaT6Wtja" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtjb" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZOr" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtj2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wtjd" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wtje" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVng" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtjf" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtjg" role="3cpWs9">
              <property role="TrG5h" value="timeoutInterceptorLister" />
              <node concept="3uibUv" id="6L3DaT6Wtjh" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtji" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdKO" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtj2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wtjk" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wtjl" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Wtjm" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Wtjn" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptorListener" />
              <node concept="3uibUv" id="6L3DaT6Wtjo" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Wtjp" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdxw" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6Wtj2" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Wtjr" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Wtjs" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVni" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6Wtjt" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtju" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtjv" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6Wtjw" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjn" resolve="mapperInterceptorListener" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtjx" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtjy" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtjz" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT6Wtj$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtj_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="6L3DaT6WtjA" role="37wK5m">
                  <property role="3cmrfH" value="5" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtjB" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WtjC" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZxS" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wtjn" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WtjE" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtjF" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtjG" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6WtjH" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjg" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6WtjI" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVno" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtjU" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtjV" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6WtjW" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjg" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6WtjX" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtjY" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6WtjZ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ6D" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjg" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtk1" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtk2" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtk3" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZtB" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjg" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtk5" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6Wtk6" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6Wtk7" role="3clFbG">
              <node concept="37vLTw" id="6L3DaT6Wtk8" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Wtjg" resolve="timeoutInterceptorLister" />
              </node>
              <node concept="liA8E" id="6L3DaT6Wtk9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVns" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6WtjJ" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6WtjK" role="8Wnug">
            <node concept="2YIFZM" id="6L3DaT6WtjL" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZuy" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Wtjn" resolve="mapperInterceptorListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="6L3DaT6TVxe" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="6L3DaT6TVxh" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="6L3DaT6TVxg" role="3clF47">
        <node concept="3clFbF" id="6L3DaT6TVxi" role="3cqZAp">
          <node concept="2YIFZM" id="6L3DaT6TVxk" role="3clFbG">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="6L3DaT6TVxl" role="37wK5m">
              <node concept="YeOm9" id="6L3DaT6TVxr" role="2ShVmc">
                <node concept="1Y3b0j" id="6L3DaT6TVxs" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="6L3DaT6TVxt" role="1B3o_S" />
                  <node concept="3clFb_" id="6L3DaT6TVxu" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="6L3DaT6TVxv" role="1B3o_S" />
                    <node concept="3cqZAl" id="6L3DaT6TVxw" role="3clF45" />
                    <node concept="3clFbS" id="6L3DaT6TVxx" role="3clF47">
                      <node concept="3clFbF" id="6L3DaT6TVxB" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TVy6" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TVxC" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY6L" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TVyf" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="6L3DaT6TVyh" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TUQf" resolve="RequestTimeoutInterceptor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY6S" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY7d" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY6T" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY6X" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY7m" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="6L3DaT6TY7n" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TUQf" resolve="RequestTimeoutInterceptor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="6L3DaT6TY9i" role="3cqZAp" />
                      <node concept="3clFbF" id="6L3DaT6TV_p" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TXA7" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TV_q" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY1K" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TXAf" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TXAh" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY1S" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXEH" resolve="MapperInterceptorListener" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY8h" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY8i" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY8j" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY8k" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY8l" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TY8m" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY8n" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY8o" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY8p" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY8q" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY8r" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY8s" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TY8t" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY8u" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT709Jh" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT709Ji" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT709Jj" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT70d1J" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT709Jl" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT709Jm" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT70d1O" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY8v" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY8w" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY8x" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY8y" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY8z" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TY8$" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY8_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XV4_" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XV4A" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XV4B" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XV5K" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XV4D" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XV4E" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6XV5U" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY8A" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY8B" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY8C" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY8D" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY8E" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TY8F" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY8G" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6VE4H" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6VE4I" role="3clFbG">
                          <node concept="2OqwBi" id="6L3DaT6VE5b" role="2Oq$k0">
                            <node concept="3P9mCS" id="6L3DaT6VE4J" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="6L3DaT6VE5I" role="37wK5m">
                                <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6L3DaT6VE5l" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="6L3DaT6VE5p" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6VE45" resolve="RequestTimeout" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6VE4L" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="37vLTw" id="6L3DaT6VMHJ" role="37wK5m">
                              <ref role="3cqZAo" node="6L3DaT6VMHk" resolve="timeout" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1JcPmr$KpYW" role="3cqZAp">
                        <node concept="2OqwBi" id="1JcPmr$KpYX" role="3clFbG">
                          <node concept="3P9mCS" id="1JcPmr$KpYY" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1JcPmr$KpYZ" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1JcPmr$KpZ0" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1JcPmr$KpZ1" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1JcPmr$KpZ2" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6TY8H" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6TY8I" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6TY8J" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6TY8K" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6TY8L" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6TY8M" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6TY8N" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="6L3DaT6VMHk" role="3clF46">
        <property role="TrG5h" value="timeout" />
        <property role="3TUv4t" value="true" />
        <node concept="10Oyi0" id="6L3DaT6VMHl" role="1tU5fm" />
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyH$U0s">
    <property role="TrG5h" value="Attach" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyH$U0t" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyH$U0u" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyH$U0v" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyH$U0w" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyH$U0x" role="3cqZAk">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="1OGsPyH$U0y" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyH$U0z" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyH$U0$" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyH$U0_" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyH$U0A" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyH$U0B" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyH$U0C" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyH$U0D" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyH$U0E" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH$U0F" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyH$U0G" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH$U0H" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvDo" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvDp" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvDq" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvDr" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvDs" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvDt" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvDu" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$U1h" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$U1i" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH$U1j" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyH$U1k" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$U1l" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH$U1m" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH$U1n" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$U1o" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$U1p" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH$U1r" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Zrqf" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$U1v" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH$U1w" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZrGE" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH$U1y" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH$U1z" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH$U1$" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$U1_" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$U1A" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH$U1B" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Y3r3" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$U1D" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgD8" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="6L3DaT6YgC6" role="3cqZAp" />
                      <node concept="3clFbF" id="1OGsPyH$U1F" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$U1G" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH$U1H" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH$U1I" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH$U1J" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH$U1K" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH$X5k" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$U1M" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH$U1N" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH$U1O" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$Ubv" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$Ubw" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH$Ubx" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH$Uby" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH$Ubz" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH$Ub$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH$X5x" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$UbA" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH$UbB" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH$UbC" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH$U1P" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH$U1Q" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH$U1R" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$U1S" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$U1T" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH$U1U" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH$U1V" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH$U1W" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH$U1X" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH$Uan" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$U1Z" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyH$Ua$" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUj9f" resolve="AttachState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH$U21" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyH$U22" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH$U23" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVnu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U24" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U25" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH$U26" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U27" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH$U28" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH$U29" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH$U0t" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U2a" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U2b" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyH$U2c" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U2d" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdOj" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U25" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2f" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH$U2g" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH$U2h" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_1OM" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$U2j" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U2k" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U2l" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U2m" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTenH" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2o" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH$U2p" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U2q" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U2r" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVny" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U2s" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U2t" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U2u" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH$U2v" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2w" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH$U2x" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U2y" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U2z" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U2$" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U2_" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U2A" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZHj" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2C" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH$U2D" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U2E" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U2F" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U2G" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U2H" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U2I" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdxY" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2K" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH$U2L" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U2M" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVn_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U2N" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U2O" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U2P" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ96" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U2R" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH$U2S" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH$U2T" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U2U" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U37" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U38" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U39" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZSQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3b" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3c" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3d" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3e" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3f" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH$U3g" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3h" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3i" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3j" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3k" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3l" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTelt" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3n" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3o" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3p" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3q" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3r" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZEv" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3t" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3u" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3v" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3w" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3x" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdU1" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3z" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyH$U3$" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U3_" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3A" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3B" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3C" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3D" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZKT" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3F" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyH$U3G" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH$U3H" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3I" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3J" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3K" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3L" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZa9" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3N" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3O" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3P" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3Q" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3R" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdMZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3T" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U3U" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U3V" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U3W" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U3X" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe3p" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U3Z" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyH$U40" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U41" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U42" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U43" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U44" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U45" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ_i" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U47" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyH$U48" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U49" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U4a" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$U4b" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$U4c" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$U4d" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH$U4e" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U4f" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyH$U4g" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH$U4h" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH$U4i" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH$Ug4" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH$Ug5" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH$Ug6" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZzt" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U2b" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH$Ug8" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyH$Ug9" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH$Ugl" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_qez" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_qeB" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH$Uh1" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH$Uh3" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="6L3DaT6TLeq" role="3$Qgvv">
              <ref role="3uigEE" to="x30c:2pJszzmZAXj" resolve="WaitingForReplyException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH$U4j" role="1SL9yI">
      <property role="TrG5h" value="transitionFromNotAttachToAttached" />
      <node concept="3cqZAl" id="1OGsPyH$U4k" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH$U4l" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVnM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U4m" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U4n" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH$U4o" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U4p" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH$U4q" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH$U4r" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH$U0t" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U4s" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U4t" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyH$U4u" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U4v" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH$U4w" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U4n" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U4x" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH$U4y" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH$U4z" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_1Pj" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$U4_" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U4A" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U4B" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH$U4C" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U4D" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZwN" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U4n" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U4F" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH$U4G" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$U4H" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$U4I" role="3cpWs9">
              <property role="TrG5h" value="attachedStateMock" />
              <node concept="3uibUv" id="1OGsPyH$U4J" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$U4K" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdKW" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U4n" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$U4M" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH$U4N" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH$U4O" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH$UlR" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XzhT" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XzhU" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XzhV" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XzhW" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZC5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U4n" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XzhY" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XzhZ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$Upy" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$Upz" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrpF" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$Up_" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH$UpA" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$U4n" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$UpB" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zrpz" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$U4X" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U4Y" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$U4Z" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH$U50" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH$U4B" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH$U51" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZCX" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH$U4I" resolve="attachedStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Uq2" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$Uqg" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdsc" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH$Upz" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyH$Uql" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhZ" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Uq1" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U5f" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$U5g" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZIn" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH$U4B" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U5i" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$U5j" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZ$J" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XzhU" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVnZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$U5l" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U5m" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$U5n" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH$U5o" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH$U4t" resolve="notAttachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH$U5p" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$U5w" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U5x" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$U5y" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTdOM" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH$U4B" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$U5$" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$U5_" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZNG" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XzhU" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH$UiV" role="1SL9yI">
      <property role="TrG5h" value="transitionFromNotAttachToDetached" />
      <node concept="3cqZAl" id="1OGsPyH$UiW" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH$UiX" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVo4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$Uqm" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$Uqn" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH$Uqo" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$Uqp" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH$Uqq" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH$Uqr" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH$U0t" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$Uqs" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$Uqt" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyH$Uqu" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$Uqv" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdIC" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$Uqn" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$Uqx" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH$Uqy" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH$Uqz" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_1PB" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Uq_" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$UqA" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$UqB" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH$UqC" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$UqD" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH$UqE" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$Uqn" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$UqF" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH$UqG" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH$UqH" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH$UqI" role="3cpWs9">
              <property role="TrG5h" value="detachedStateMock" />
              <node concept="3uibUv" id="1OGsPyH$UqJ" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH$UqK" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdCa" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$Uqn" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH$UqM" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH$UqN" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH$UqO" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH$Usc" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvXW" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvXX" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvXY" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvXZ" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XvY0" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$Uqn" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvY1" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvY2" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrpH" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrpI" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrpJ" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrpK" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6ZrpL" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH$Uqn" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrpM" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrpN" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVob" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Usn" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Ur7" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$Ur8" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdWp" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH$UqB" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH$Ura" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZ_w" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH$UqI" resolve="detachedStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVod" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Urc" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$Urd" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZGN" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6ZrpI" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyH$Urf" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhR" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoe" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Urg" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVof" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Urh" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$Uri" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZD1" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH$UqB" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVog" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Urk" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$Url" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZ4N" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvXX" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Urn" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Uro" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$Urp" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTemM" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH$Uqt" resolve="notAttachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH$Urr" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$Urs" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVok" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Urt" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$Uru" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdXW" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH$UqB" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVol" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$Urw" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH$Urx" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZxC" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvXX" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyH_20x">
    <property role="TrG5h" value="Attached" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyH_20y" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyH_20z" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyH_20$" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyH_20_" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyH_20A" role="3cqZAk">
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <node concept="2ShNRf" id="1OGsPyH_20B" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyH_20C" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyH_20D" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyH_20E" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyH_20F" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyH_20G" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyH_20H" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyH_20I" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyH_20J" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_20K" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyH_20L" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_20M" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvEL" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvEM" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvEN" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvEO" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvEP" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvEQ" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvER" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_21m" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_21n" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_21o" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyH_21p" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_21q" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_21r" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_21s" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_21t" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_21u" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_21w" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZrIL" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_21$" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_21_" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZrIv" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_21B" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_21C" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_21D" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_21E" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_21F" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_21G" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Y3q7" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_21I" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgGw" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_21U" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_21V" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_21W" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_21X" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_21Y" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_21Z" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_l77" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_221" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_222" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH_223" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_qw_" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_qwA" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_qwB" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_qwC" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_qwD" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_qwE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_qx3" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_qwG" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_qwH" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_qwI" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_224" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_225" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_226" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_227" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_228" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_229" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_22a" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_22b" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_22c" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_2dW" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_22e" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyH_2dK" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUj5k" resolve="AttachedState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_22g" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyH_22h" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_22i" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVom" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_22j" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_22k" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_22l" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_22m" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_22n" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_22o" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_20y" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVon" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_22p" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_22q" role="3cpWs9">
              <property role="TrG5h" value="attachedState" />
              <node concept="3uibUv" id="1OGsPyH_22r" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_22s" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZOx" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22k" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_22u" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_22v" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH_22w" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_l89" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_22y" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVop" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_22F" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_22G" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_22H" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_22I" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_22J" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH_22K" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH_22L" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_22M" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_22N" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_22O" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_22P" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZsg" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_22R" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH_22S" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH_22T" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_22U" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVor" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_22V" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_22W" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_22X" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ_K" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_22Z" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH_230" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_231" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVos" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_232" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_233" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_234" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZot" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_236" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH_237" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_238" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_239" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVot" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23a" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23b" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23c" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_23d" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23e" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23f" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVou" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23g" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23h" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23i" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZlE" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23k" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23l" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVov" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23s" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23t" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23u" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_23v" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23w" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23x" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVow" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23y" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23z" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23$" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZSc" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23A" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyH_23B" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_23C" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23D" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVox" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23E" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23F" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23G" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTeqz" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23I" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyH_23J" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_23K" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23L" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23M" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23N" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_23O" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_23P" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_23Q" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_23R" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_23Y" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_23Z" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_240" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZsA" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_242" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyH_243" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH_244" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_245" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_246" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_247" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_248" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_249" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_24a" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyH_24b" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_24c" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_24d" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVo_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_24e" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_24f" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_24g" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZnz" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_24i" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyH_24j" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH_24k" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_24l" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_24m" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_24n" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_24o" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTduR" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_22q" resolve="attachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_24q" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyH_24r" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_24s" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_qds" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_qdx" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_24x" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_24y" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_24z" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_24$" role="1SL9yI">
      <property role="TrG5h" value="resumingDebugger" />
      <node concept="3cqZAl" id="1OGsPyH_24_" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_24A" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVoB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_24B" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_24C" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_24D" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_24E" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_24F" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_24G" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_20y" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_24H" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_24I" role="3cpWs9">
              <property role="TrG5h" value="attachedState" />
              <node concept="3uibUv" id="1OGsPyH_24J" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_24K" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdL$" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_24C" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_24M" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_24N" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH_24O" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_l8v" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_24Q" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_24R" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_24S" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH_24T" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_24U" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTelS" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_24C" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_24W" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH_24X" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_24Y" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_24Z" role="3cpWs9">
              <property role="TrG5h" value="resumeStateMock" />
              <node concept="3uibUv" id="1OGsPyH_250" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_251" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH_252" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_24C" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_253" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_254" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH_255" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_l9D" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvWK" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvWL" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvWM" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvWN" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZsa" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_24C" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvWP" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvWQ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrHE" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrHF" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrHG" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrHH" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdSM" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_24C" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrHJ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrHK" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_25n" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25o" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_25p" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZPW" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_24S" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH_25r" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZL4" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH_24Z" resolve="resumeStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_qc2" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_qcg" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZJ9" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XvWL" resolve="mapperInterceptor" />
              </node>
              <node concept="liA8E" id="1OGsPyH_qcl" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_q9F" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25y" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_25z" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdNL" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_24S" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25_" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_25A" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="6L3DaT6XvWU" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvWL" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_25C" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25D" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_25E" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZN0" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_24I" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH_25G" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_25H" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25I" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_25J" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZOB" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_24S" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_25L" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_25M" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdUj" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvWL" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_25O" role="1SL9yI">
      <property role="TrG5h" value="transitionFromNotAttachedToDetach" />
      <node concept="3cqZAl" id="1OGsPyH_25P" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_25Q" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVoT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_25R" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_25S" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_25T" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_25U" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_25V" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_25W" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_20y" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_25X" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_25Y" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyH_25Z" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_260" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZNd" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_25S" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_262" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_263" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH_264" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_q8s" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwi" resolve="Attached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_266" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_267" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_268" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH_269" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_26a" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH_26b" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_25S" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_26c" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH_26d" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_26e" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_26f" role="3cpWs9">
              <property role="TrG5h" value="detachStateMock" />
              <node concept="3uibUv" id="1OGsPyH_26g" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_26h" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH_26i" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_25S" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_26j" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_26k" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH_26l" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_qx9" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvWW" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvWX" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvWY" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvWZ" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XvX0" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_25S" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvX1" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvX2" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVoZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrIe" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrIf" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrIg" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrIh" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdVX" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_25S" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrIj" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrIk" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_26B" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_26C" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_26D" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH_26E" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_268" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH_26F" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZKy" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH_26f" resolve="detachStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_vrS" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_vs6" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZm1" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XvWX" resolve="mapperInterceptor" />
              </node>
              <node concept="liA8E" id="1OGsPyH_vsb" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_vsc" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_26M" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_26N" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZPj" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_268" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_26P" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_26Q" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTe4x" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvWX" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_26S" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_26T" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_26U" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZta" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_25Y" resolve="notAttachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH_26W" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_26X" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_26Y" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_26Z" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTe46" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_268" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_271" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_272" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTdPd" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvWX" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyHA555">
    <property role="TrG5h" value="Detach" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyHA556" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyHA557" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyHA558" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyHA559" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyHA55a" role="3cqZAk">
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <node concept="2ShNRf" id="1OGsPyHA55b" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyHA55c" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyHA55d" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyHA55e" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyHA55f" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyHA55g" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyHA55h" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyHA55i" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyHA55j" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA55k" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyHA55l" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA55m" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvLv" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvLw" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvLx" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvLy" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvLz" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvL$" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvL_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA55U" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA55V" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHA55W" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyHA55X" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA55Y" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHA55Z" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyHA560" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA561" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA562" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHA564" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZrLI" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA568" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHA569" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZrLT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHA56b" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHA56c" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA56d" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgHb" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgHc" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgHd" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgHe" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgHf" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgHg" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA56k" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA56l" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyHA56m" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyHA56n" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyHA56o" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyHA56p" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyHA5ig" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA56r" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHA56s" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyHA56t" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHA56u" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHA56v" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA56w" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA56x" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA56y" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyHA56z" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyHA56$" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyHA56_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyHA56A" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyHA5gL" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA56C" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyHA5gB" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjv5" resolve="DetachState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHA56E" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyHA56F" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHA56G" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVpb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA56H" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA56I" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHA56J" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA56K" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHA56L" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHA56M" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyHA556" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA56N" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA56O" role="3cpWs9">
              <property role="TrG5h" value="steppingState" />
              <node concept="3uibUv" id="1OGsPyHA56P" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA56Q" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZSx" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56I" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA56S" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHA56T" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyHA56U" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHAaH5" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA56W" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpe" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA56X" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA56Y" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA56Z" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZin" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA571" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA572" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHA573" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA574" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA575" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA576" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA577" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA578" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA579" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA57a" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA57b" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57c" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57d" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57e" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57f" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdCc" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57h" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA57i" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA57j" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57k" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVph" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57l" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57m" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57n" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTd$P" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57p" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHA57q" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57r" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57s" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57t" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57u" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZyE" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57w" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHA57x" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA57y" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57z" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57$" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57_" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57A" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe1H" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57C" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57D" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57K" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57L" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57M" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdtq" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57O" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA57P" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57Q" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57R" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57S" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdUh" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA57U" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="6L3DaT6TL7E" role="3$Qgvv">
              <ref role="3uigEE" to="x30c:2pJszzmZAXj" resolve="WaitingForReplyException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA57W" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA57X" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA57Y" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA57Z" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA580" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA581" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA582" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA583" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA584" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA585" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA586" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyHA587" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA588" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA589" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58a" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58b" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58c" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA58d" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58e" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyHA58f" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA58g" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58h" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58i" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58j" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58k" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA58l" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58m" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58n" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58o" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58p" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58q" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZAV" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58s" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58t" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58u" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58v" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58w" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA58x" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58y" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyHA58z" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA58$" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58_" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVps" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58A" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58B" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58C" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdIQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58E" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyHA58F" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA58G" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58H" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58I" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58J" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58K" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZq8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58M" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyHA58N" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHA58O" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA58P" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA58Q" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA58R" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA58S" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA58T" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA56O" resolve="steppingState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA58U" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyHA58V" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA58W" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHA58X" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHA58Y" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA58Z" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA590" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA591" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHA592" role="1SL9yI">
      <property role="TrG5h" value="transitionFromDetachToDetached" />
      <node concept="3cqZAl" id="1OGsPyHA593" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHA594" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVpv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA595" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA596" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHA597" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA598" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHA599" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHA59a" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyHA556" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA59b" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA59c" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA59d" role="3cpWs9">
              <property role="TrG5h" value="detachState" />
              <node concept="3uibUv" id="1OGsPyHA59e" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA59f" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdYa" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA596" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA59h" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHA59i" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHA59j" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHA5ix" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA59l" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA59m" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyHA59n" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA59o" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTenR" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA596" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA59q" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyHA59r" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA59s" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA59t" role="3cpWs9">
              <property role="TrG5h" value="detachedStateMock" />
              <node concept="3uibUv" id="1OGsPyHA59u" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA59v" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZQk" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA596" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA59x" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHA59y" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHA59z" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHA5j5" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA59_" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA59A" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvPr" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA59C" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHA59D" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA596" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA59E" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvPs" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVp_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrLs" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrLt" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrLu" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrLv" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZxW" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA596" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrLx" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrLy" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA59P" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA59Q" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHA59R" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTejj" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHA59m" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyHA59T" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZkG" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyHA59t" resolve="detachedStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA59V" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHA59W" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeoD" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6ZrLt" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyHA59Y" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhR" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA59Z" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA5a0" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHA5a1" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="1OGsPyHA5a2" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHA59m" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA5a3" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHA5a4" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZeF" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrLt" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA5a6" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA5a7" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHA5a8" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZzi" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHA59d" resolve="detachState" />
              </node>
              <node concept="liA8E" id="1OGsPyHA5aa" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA5ab" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA5ac" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHA5ad" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="1OGsPyHA5ae" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHA59m" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHA5af" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHA5ag" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZRY" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrLt" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyHA5jh">
    <property role="TrG5h" value="Detached" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyHA5ji" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyHA5jj" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyHA5jk" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyHA5jl" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyHA5jm" role="3cqZAk">
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <node concept="2ShNRf" id="1OGsPyHA5jn" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyHA5jo" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyHA5jp" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyHA5jq" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyHA5jr" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyHA5js" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyHA5jt" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyHA5ju" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyHA5jv" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA5jw" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyHA5jx" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA5jy" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvM$" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvM_" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvMA" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvMB" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvMC" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvMD" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvME" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA5k6" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA5k7" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHA5k8" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyHA5k9" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA5ka" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHA5kb" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyHA5kc" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA5kd" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA5ke" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHA5kg" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZrNj" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA5kk" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHA5kl" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZrNd" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHA5kn" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHA5ko" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA5kp" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgHL" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgHM" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgHN" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgHO" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgHP" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgHQ" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHA5kE" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHA5kF" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHA5kG" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHA5kH" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHA5kI" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyHA5kJ" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyHA5kK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyHA5kL" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyHA5kM" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyHA5px" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHA5kO" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyHA5pm" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjBJ" resolve="DetachedState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHA5kQ" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyHA5kR" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHA5kS" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVpL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA5kT" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA5kU" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHA5kV" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA5kW" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHA5kX" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHA5kY" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyHA5ji" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHA5kZ" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHA5l0" role="3cpWs9">
              <property role="TrG5h" value="detachedState" />
              <node concept="3uibUv" id="1OGsPyHA5l1" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHA5l2" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ63" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5kU" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5l4" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHA5l5" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHA5l6" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHA5pN" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHA5l8" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5l9" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5la" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lb" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdED" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5ld" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA5le" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5lf" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lg" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lh" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5li" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lj" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdrX" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5ll" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA5lm" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5ln" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lo" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lp" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5lq" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lr" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdY8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5lt" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHA5lu" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5lv" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lw" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lx" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5ly" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lz" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA5l$" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5l_" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHA5lA" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lB" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lC" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5lD" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lE" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ_V" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5lG" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHA5lH" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA5lI" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lJ" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lK" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5lL" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lM" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe2a" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5lO" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lP" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lQ" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5lR" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lS" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ9i" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5lU" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5lV" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5pE" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5pF" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5pG" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZJ5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5pI" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5pJ" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5lW" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5lX" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5lY" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZbd" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5m0" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5m1" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5m2" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5m3" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5m4" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA5m5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5m6" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5m7" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5m8" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5m9" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5ma" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZR3" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5mc" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyHA5md" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5me" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mf" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVpZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mg" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mh" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mi" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA5mj" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5mk" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyHA5ml" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA5mm" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mn" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mo" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mp" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mq" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdAI" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5ms" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mt" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mu" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mv" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mw" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHA5mx" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5my" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mz" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5m$" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5m_" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mA" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZMl" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5mC" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyHA5mD" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5mE" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mF" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mG" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mH" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mI" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdMs" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5mK" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyHA5mL" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5mM" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mN" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mO" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mP" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mQ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZK2" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5mS" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyHA5mT" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5mU" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5mV" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHA5mW" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHA5mX" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHA5mY" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTelp" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHA5l0" resolve="detachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHA5n0" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyHA5n1" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHA5n2" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHA5n3" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHA5n4" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA5n5" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHA5n6" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHA5n7" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5HSnKgHUNsd">
    <property role="TrG5h" value="NotAttached" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="5HSnKgHUNsq" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5HSnKgHUNst" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5HSnKgHUNss" role="3clF47">
        <node concept="3cpWs6" id="5HSnKgHUNsu" role="3cqZAp">
          <node concept="2YIFZM" id="5HSnKgHUNsz" role="3cqZAk">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="5HSnKgHUNsD" role="37wK5m">
              <node concept="YeOm9" id="5HSnKgHUNsL" role="2ShVmc">
                <node concept="1Y3b0j" id="5HSnKgHUNsM" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="5HSnKgHUNsN" role="1B3o_S" />
                  <node concept="3clFb_" id="5HSnKgHUNsO" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="5HSnKgHUNsP" role="1B3o_S" />
                    <node concept="3cqZAl" id="5HSnKgHUNsQ" role="3clF45" />
                    <node concept="3clFbS" id="5HSnKgHUNsR" role="3clF47">
                      <node concept="3SKdUt" id="5HSnKgHUNxU" role="3cqZAp">
                        <node concept="3SKdUq" id="5HSnKgHUNxV" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="5HSnKgHUNIp" role="3cqZAp">
                        <node concept="3SKdUq" id="5HSnKgHUNIy" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="5HSnKgHUNxX" role="3cqZAp">
                        <node concept="2OqwBi" id="5HSnKgHUNyk" role="3clFbG">
                          <node concept="3P9mCS" id="5HSnKgHUNxY" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvC1" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5HSnKgHUNys" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="5HSnKgHUNyz" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvCb" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="5HSnKgHUNK9" role="3cqZAp">
                        <node concept="2OqwBi" id="5HSnKgHUNKa" role="3clFbG">
                          <node concept="3P9mCS" id="5HSnKgHUNKb" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="5HSnKgHUNKH" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="5HSnKgHUNKd" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="5HSnKgHUNKe" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="5HSnKgHUNKB" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH$LgT" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH$Ljm" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH$LgU" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZrOy" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH$Ljw" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH$Ljx" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZrOH" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH$LgR" role="3cqZAp" />
                      <node concept="3SKdUt" id="5HSnKgHUNIz" role="3cqZAp">
                        <node concept="3SKdUq" id="5HSnKgHUNIF" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgIJ" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgIK" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgIL" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgIM" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgIN" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgIO" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="5HSnKgHUjxH" role="3cqZAp">
                        <node concept="2OqwBi" id="5HSnKgHUjxI" role="3clFbG">
                          <node concept="2OqwBi" id="5HSnKgHUjxJ" role="2Oq$k0">
                            <node concept="3P9mCS" id="5HSnKgHUjxK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5HSnKgHUjxL" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5HSnKgHUjxM" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="5HSnKgHUnz2" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="5HSnKgHUNKN" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="5HSnKgHUNKP" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyHzPL2" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="5HSnKgHUND$" role="3cqZAp" />
                      <node concept="3SKdUt" id="5HSnKgHUNIG" role="3cqZAp">
                        <node concept="3SKdUq" id="5HSnKgHUNIO" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="5HSnKgHPBSH" role="3cqZAp">
                        <node concept="2OqwBi" id="5HSnKgHPBSI" role="3clFbG">
                          <node concept="2OqwBi" id="5HSnKgHPBSJ" role="2Oq$k0">
                            <node concept="3P9mCS" id="5HSnKgHPBSK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5HSnKgHPBSL" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5HSnKgHPBSM" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="5HSnKgHPBT4" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLiVe" resolve="NotAttached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="5HSnKgHPBSO" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="5HSnKgHPBSP" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHLgQA" resolve="NotAttachedState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5HSnKgHUNsh" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="5HSnKgHUNsi" role="3clF45" />
      <node concept="3clFbS" id="5HSnKgHUNsj" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVq6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUNvp" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUNvq" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5HSnKgHUNvr" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUNvt" role="33vP2m">
                <node concept="2WthIp" id="5HSnKgHUNvu" role="2Oq$k0" />
                <node concept="2XshWL" id="5HSnKgHUNvv" role="2OqNvi">
                  <ref role="2WH_rO" node="5HSnKgHUNsq" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUNv_" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUNvA" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="5HSnKgHUNvB" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUNw2" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdND" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvq" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNw8" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="5HSnKgHUNwe" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="5HSnKgHUNwj" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="5HSnKgHUNwE" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLiVe" resolve="NotAttached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUNPl" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNOW" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNP0" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNPe" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNP1" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNPk" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="5HSnKgHUNPn" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="5HSnKgHUNPq" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNOZ" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNPu" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNPv" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNPw" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZJM" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNPy" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="5HSnKgHUNPz" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="5HSnKgHUNP$" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNP_" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNPD" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNPE" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNQV" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZDN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNR1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="5HSnKgHUNR9" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5HSnKgHUNRe" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNPK" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNRj" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNRk" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNRF" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNRm" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNRL" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="5HSnKgHUNRW" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNRq" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNRX" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNRY" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNRZ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdtW" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNS1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="5HSnKgHUNS2" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="5HSnKgHUNSe" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNS3" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqe" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNTj" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNTk" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNTl" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZEb" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNTA" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNTu" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNUF" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNUG" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNUH" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTenw" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNUR" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNUK" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNUS" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNUT" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNUU" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNUV" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNUW" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNUX" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNV3" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNV4" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNV5" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTd$l" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNV7" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNV8" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNVd" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNVe" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNVy" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNVg" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNVC" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNVi" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNVD" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNVE" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNVY" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNVG" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNW4" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNVI" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNW5" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNW6" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNWq" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZJS" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNWw" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="5HSnKgHUNWz" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5HSnKgHUNWC" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNWa" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVql" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNWH" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNWI" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNX7" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdYx" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNXd" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="5HSnKgHUNXe" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="5HSnKgHUNXm" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNWO" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNXn" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNXo" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNXM" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdAT" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNXS" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNXu" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNZc" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNZd" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUNZB" role="3clFbG">
                <node concept="37vLTw" id="5HSnKgHUNZf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUNZH" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNZj" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUNZI" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUNZJ" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUO05" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZov" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO0b" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="5HSnKgHUO0d" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="5HSnKgHUO0j" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUNZN" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUO0n" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUO0o" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUO0p" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZwL" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO0r" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="5HSnKgHUO0s" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5HSnKgHUO0t" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUO0u" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5HSnKgHUO0B" role="8Wnug">
            <node concept="3clFbF" id="5HSnKgHUO0C" role="3$Oloe">
              <node concept="2OqwBi" id="5HSnKgHUO0D" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZAr" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUNvA" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO0F" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="5HSnKgHUO0G" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="5HSnKgHUO0H" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5HSnKgHUO0I" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5HSnKgHUNsn" role="1SL9yI">
      <property role="TrG5h" value="transitionFromNotAttachedToAttach" />
      <node concept="3cqZAl" id="5HSnKgHUNso" role="3clF45" />
      <node concept="3clFbS" id="5HSnKgHUNsp" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVqr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUO22" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUO23" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5HSnKgHUO24" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUO25" role="33vP2m">
                <node concept="2WthIp" id="5HSnKgHUO26" role="2Oq$k0" />
                <node concept="2XshWL" id="5HSnKgHUO27" role="2OqNvi">
                  <ref role="2WH_rO" node="5HSnKgHUNsq" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqs" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUO28" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUO29" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="5HSnKgHUO2a" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUO2b" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZRI" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUO23" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO2d" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="5HSnKgHUO2e" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="5HSnKgHUO2f" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="5HSnKgHUO2g" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLiVe" resolve="NotAttached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUO1Y" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUO2$" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUO2_" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="5HSnKgHUO2A" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUO2P" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdLi" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUO23" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO2V" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5HSnKgHUO2X" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5HSnKgHUO3Z" role="8Wnug">
            <node concept="3cpWsn" id="5HSnKgHUO40" role="3cpWs9">
              <property role="TrG5h" value="attachStateMock" />
              <node concept="3uibUv" id="5HSnKgHUO41" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="5HSnKgHUO42" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZy6" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUO23" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUO44" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="5HSnKgHUO45" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="5HSnKgHUO46" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="5HSnKgHUO4J" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XziO" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XziP" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XziQ" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XziR" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XziS" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUO23" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XziT" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XziU" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUO6q" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO33" role="8Wnug">
            <node concept="2OqwBi" id="5HSnKgHUO3h" role="3clFbG">
              <node concept="37vLTw" id="5HSnKgHUO34" role="2Oq$k0">
                <ref role="3cqZAo" node="5HSnKgHUO2_" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="5HSnKgHUO3Y" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvTdsW" role="37wK5m">
                  <ref role="3cqZAo" node="5HSnKgHUO40" resolve="attachStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO6A" role="8Wnug">
            <node concept="2OqwBi" id="5HSnKgHUO6T" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ7j" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XziP" resolve="mapperInterceptor" />
              </node>
              <node concept="liA8E" id="5HSnKgHUO6Z" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
                <node concept="2YIFZM" id="5HSnKgHUO71" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="5HSnKgHUO73" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5HSnKgHUO7b" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5HSnKgHUO7f" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5HSnKgHUO7n" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="5HSnKgHUO7o" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5HSnKgHUO7y" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
                <node concept="2YIFZM" id="5HSnKgHUO7F" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO4Z" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUO56" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdTv" role="37wK5m">
                <ref role="3cqZAo" node="5HSnKgHUO2_" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVq_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO7G" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUO7H" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XziY" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XziP" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUO32" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUNSg" role="8Wnug">
            <node concept="2OqwBi" id="5HSnKgHUNSh" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ$l" role="2Oq$k0">
                <ref role="3cqZAo" node="5HSnKgHUO29" resolve="notAttachedState" />
              </node>
              <node concept="liA8E" id="5HSnKgHUNSj" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                <node concept="2YIFZM" id="5HSnKgHUNT4" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5HSnKgHUNTf" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5HSnKgHUNSt" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="Xl_RD" id="5HSnKgHUNSk" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5HSnKgHUNT0" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="3cmrfG" id="5HSnKgHUNSl" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5HSnKgHUO2r" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO7P" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUO7W" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTepB" role="37wK5m">
                <ref role="3cqZAo" node="5HSnKgHUO2_" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5HSnKgHUO7Y" role="8Wnug">
            <node concept="2YIFZM" id="5HSnKgHUO7Z" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XziZ" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XziP" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHzWkg" role="1SL9yI">
      <property role="TrG5h" value="attachingFails" />
      <node concept="3cqZAl" id="1OGsPyHzWkh" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHzWki" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVqF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHzWkj" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHzWkk" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHzWkl" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHzWkm" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHzWkn" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHzWko" role="2OqNvi">
                  <ref role="2WH_rO" node="5HSnKgHUNsq" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHzWkp" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHzWkq" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyHzWkr" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHzWks" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHzWkt" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkk" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHzWku" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHzWkv" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHzWkw" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHzWkx" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLiVe" resolve="NotAttached" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHzWky" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHzWkz" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHzWk$" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyHzWk_" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHzWkA" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHzWkB" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkk" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHzWkC" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyHzWkD" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHzWkE" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHzWkF" role="3cpWs9">
              <property role="TrG5h" value="attachStateMock" />
              <node concept="3uibUv" id="1OGsPyHzWkG" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHzWkH" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHzWkI" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkk" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHzWkJ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHzWkK" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyHzWkL" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHzWkM" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHUnwu" resolve="Attach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvZw" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvZx" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvZy" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvZz" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XvZ$" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkk" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvZ_" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvZA" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrO6" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrO7" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrO8" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrO9" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTeqT" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkk" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrOb" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrOc" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$QlN" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWl0" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHzWl1" role="3clFbG">
              <node concept="liA8E" id="1OGsPyHzWl3" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagctR" resolve="attach" />
                <node concept="2YIFZM" id="1OGsPyHzWl4" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="1OGsPyHzWl5" role="37wK5m">
                    <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                  </node>
                </node>
                <node concept="2YIFZM" id="1OGsPyHzWl6" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="1OGsPyHzWl7" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="1OGsPyHzWl8" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="1OGsPyHzWl9" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                  </node>
                </node>
                <node concept="2YIFZM" id="1OGsPyHzWla" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                </node>
                <node concept="2YIFZM" id="1OGsPyHzWlb" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                </node>
              </node>
              <node concept="37vLTw" id="5HxjapvTe5n" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XvZx" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWm9" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHzWmo" role="3clFbG">
              <node concept="2YIFZM" id="1OGsPyHzWmb" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="1OGsPyH$l0C" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="1OGsPyH$l0D" role="37wK5m">
                  <node concept="1pGfFk" id="1OGsPyH$lfZ" role="2ShVmc">
                    <ref role="37wK5l" to="x30c:2fjdrD4GamE" resolve="MControllingSessionFailedException" />
                    <node concept="Xl_RD" id="1OGsPyH$lg0" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH$II_" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH$IIN" role="3clFbG">
              <node concept="2YIFZM" id="1OGsPyH$IIA" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              </node>
              <node concept="liA8E" id="1OGsPyH$IIS" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
                <node concept="3cmrfG" id="1OGsPyH$IIT" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT6X8Kc" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWpo" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWpq" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZ_u" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrO7" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWlc" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWld" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdUd" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHzWk$" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWlf" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWlg" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XvZE" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvZx" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH$dyu" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6YTai" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6YTaj" role="3cpWs9">
              <property role="TrG5h" value="future" />
              <node concept="3uibUv" id="6L3DaT6YTak" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~Future" resolve="Future" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHzWlk" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZaS" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHzWkq" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHzWlm" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyHzWln" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHzWlo" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHzWlp" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHzWlq" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHzWlr" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHzWls" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="6L3DaT6YWw4" role="8Wnug">
            <node concept="3uibUv" id="6L3DaT6YWw8" role="3$Qgvv">
              <ref role="3uigEE" to="5zyv:~ExecutionException" resolve="ExecutionException" />
            </node>
            <node concept="3clFbF" id="6L3DaT6YWw7" role="3$Oloe">
              <node concept="2OqwBi" id="6L3DaT6YTaC" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdGO" role="2Oq$k0">
                  <ref role="3cqZAo" node="6L3DaT6YTaj" resolve="future" />
                </node>
                <node concept="liA8E" id="6L3DaT6YTaI" role="2OqNvi">
                  <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHzWlF" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWlG" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWlH" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZfb" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHzWk$" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVqZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWlJ" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWlK" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XvZF" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvZx" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHzWpR" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHzWpS" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="1OGsPyHzWpU" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrO7" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyH_$qi">
    <property role="TrG5h" value="Resume" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyH_$qj" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyH_$qk" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyH_$ql" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyH_$qm" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyH_$qn" role="3cqZAk">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="1OGsPyH_$qo" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyH_$qp" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyH_$qq" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyH_$qr" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyH_$qs" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyH_$qt" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyH_$qu" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyH_$qv" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyH_$qw" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$qx" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyH_$qy" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$qz" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvFD" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvFE" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvFF" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvFG" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvFH" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvFI" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvFJ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_$r7" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_$r8" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_$r9" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyH_$ra" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_$rb" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_$rc" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH_$rd" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_$re" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_$rf" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_$rh" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Zs3K" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_$rl" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_$rm" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6Zs42" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_$ro" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_$rp" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$rq" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgJz" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgJ$" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgJ_" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgJA" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgJB" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgJC" role="37wK5m">
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_$rF" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_$rG" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_$rH" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_$rI" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_$rJ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_$rK" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_$Vv" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_$rM" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_$rN" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_$rO" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_$rP" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_$rQ" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$rR" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_$rS" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_$rT" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_$rU" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_$rV" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_$rW" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_$rX" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_$yZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_$rZ" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyH_$yO" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjct" resolve="ResumeState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_$s1" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyH_$s2" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_$s3" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVr1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$s4" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$s5" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_$s6" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$s7" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_$s8" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_$s9" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$qj" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$sa" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$sb" role="3cpWs9">
              <property role="TrG5h" value="resumeState" />
              <node concept="3uibUv" id="1OGsPyH_$sc" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$sd" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZB1" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$s5" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$sf" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_$sg" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH_$sh" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_$FJ" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_$QX" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$OK" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$OL" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$OM" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe05" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$OO" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH_$OP" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$OQ" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$OR" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$OS" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$OT" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$OU" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ4C" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$OW" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH_$OX" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$OY" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$OZ" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$P0" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$P1" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$P2" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$R2" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$P4" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH_$P5" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$P6" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$P7" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$P8" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$P9" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Pa" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZEZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Pc" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH_$Pd" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Pe" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Pf" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Pg" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Ph" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZF8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Pj" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH_$Pk" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_$Pl" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Pm" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Pn" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Po" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Pp" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$Ra" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Pr" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Ps" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVra" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Pt" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Pu" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Pv" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$R5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Px" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Py" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$PD" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$PE" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$PF" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZe0" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$PH" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$PI" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$PJ" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$PK" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$PL" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$R8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$PN" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$PO" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$PP" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$PQ" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$PR" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZgF" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$PT" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$PU" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVre" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$PV" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$PW" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$PX" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZCZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$PZ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyH_$Q0" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$Q1" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Q2" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Q3" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Q4" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Q5" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZx$" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Q7" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyH_$Q8" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_$Q9" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Qa" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Qb" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Qc" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Qd" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$Rf" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Qf" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Qg" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Qh" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Qi" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Qj" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$Re" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Ql" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="6L3DaT6TLbe" role="3$Qgvv">
              <ref role="3uigEE" to="x30c:2pJszzmZAXj" resolve="WaitingForReplyException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVri" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Qn" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Qo" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Qp" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH_$Rh" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Qr" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyH_$Qs" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$Qt" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$Qu" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$Qv" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$Qw" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$Qx" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZSe" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$Qz" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyH_$Q$" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$Q_" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$QA" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_$QB" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_$QC" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_$QD" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZAF" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$sb" resolve="resumeState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$QF" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyH_$QG" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_$QH" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_$QI" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_$tZ" role="1SL9yI">
      <property role="TrG5h" value="debuggerRunning" />
      <node concept="3cqZAl" id="1OGsPyH_$u0" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_$u1" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVrl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$u2" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$u3" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_$u4" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$u5" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_$u6" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_$u7" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$qj" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$u8" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$u9" role="3cpWs9">
              <property role="TrG5h" value="resumeState" />
              <node concept="3uibUv" id="1OGsPyH_$ua" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$ub" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdGK" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$u3" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$ud" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_$ue" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH_$uf" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_Hlj" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_$uh" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVro" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$ui" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$uj" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH_$uk" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$ul" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZif" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$u3" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$un" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH_$uo" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_$up" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_$uq" role="3cpWs9">
              <property role="TrG5h" value="runningStateMock" />
              <node concept="3uibUv" id="1OGsPyH_$ur" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_$us" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZdJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$u3" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_$uu" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_$uv" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH_$uw" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_$T_" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6ZrPm" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6ZrPn" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6ZrPo" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6ZrPp" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdL6" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_$u3" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6ZrPr" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZrPs" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_$uM" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrs" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$uN" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_$uO" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZEB" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_$uj" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH_$uQ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvTekD" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH_$uq" resolve="runningStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$UT" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_$V7" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH_$UU" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6ZrPn" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyH_$Vc" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEhV" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVru" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_MoB" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$uX" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_$uY" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTeq5" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_$uj" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$Vd" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_$Ve" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdz0" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrPn" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_$v3" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVry" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$v4" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH_$v5" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZFl" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH_$u9" resolve="resumeState" />
              </node>
              <node concept="liA8E" id="1OGsPyH_$v7" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH_$v8" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$v9" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_$va" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZeD" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH_$uj" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVr_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH_$vc" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH_$vd" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="1OGsPyH_MoA" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6ZrPn" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyH_$Zz">
    <property role="TrG5h" value="Running" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyH_$Z$" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyH_$Z_" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyH_$ZA" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyH_$ZB" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyH_$ZC" role="3cqZAk">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="1OGsPyH_$ZD" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyH_$ZE" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyH_$ZF" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyH_$ZG" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyH_$ZH" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyH_$ZI" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyH_$ZJ" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyH_$ZK" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyH_$ZL" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$ZM" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyH_$ZN" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_$ZO" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvHG" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvHH" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvHI" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvHJ" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvHK" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvHL" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvHM" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH__0o" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH__0p" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH__0q" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyH__0r" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH__0s" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH__0t" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH__0u" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH__0v" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH__0w" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH__0y" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6Zs7b" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH__0A" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH__0B" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6Zs7m" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH__0D" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH__0E" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH__0F" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgLk" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgLl" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgLm" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgLn" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgLo" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgLp" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH__0M" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH__0N" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH__0O" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH__0P" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH__0Q" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH__0R" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_Cjx" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH__0T" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH__0U" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH__0V" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_CjB" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_CjC" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_CjD" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_CjE" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_CjF" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_CjG" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_CjZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_CjI" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_CjJ" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_CjK" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH__0W" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH__0X" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH__0Y" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH__0Z" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH__10" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH__11" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH__12" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH__13" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH__14" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH__15" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH__16" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH__17" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH__18" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH__19" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH__1a" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH__1b" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH__1c" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH__1d" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH__1e" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH__92" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH__1g" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyH__8R" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjdY" resolve="RunningState" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1JcPmr$Kq0p" role="3cqZAp">
                        <node concept="2OqwBi" id="1JcPmr$Kq0q" role="3clFbG">
                          <node concept="2OqwBi" id="1JcPmr$Kq0r" role="2Oq$k0">
                            <node concept="3P9mCS" id="1JcPmr$Kq0s" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1JcPmr$Kq0t" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1JcPmr$Kq0u" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1JcPmr$Kq0P" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjJ" resolve="Detached" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1JcPmr$Kq0w" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1JcPmr$Kq1a" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjBJ" resolve="DetachedState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH__1i" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyH__1j" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH__1k" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVrA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__1l" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__1m" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH__1n" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__1o" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH__1p" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH__1q" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$Z$" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__1r" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__1s" role="3cpWs9">
              <property role="TrG5h" value="runningState" />
              <node concept="3uibUv" id="1OGsPyH__1t" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__1u" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZtq" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1m" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__1w" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__1x" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH__1y" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__bT" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__1$" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__1_" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__1A" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__1B" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyH__1C" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__1D" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH__1E" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH__1F" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__1G" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__1H" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__1I" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__1J" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZw5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__1L" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyH__1M" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH__1N" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__1O" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__1P" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__1Q" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__1R" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe4z" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__1T" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH__1U" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__1V" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__1W" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__1X" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__1Y" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdt0" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__20" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyH__21" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH__22" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__23" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__24" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__25" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__26" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZQx" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__28" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__29" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2g" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2h" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2i" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe50" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__2k" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__2l" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2m" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2n" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2o" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZgV" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__2q" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyH__2r" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH__2s" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__2t" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2u" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2v" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2w" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZEN" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__2y" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyH__2z" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH__2$" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__2_" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2G" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2H" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2I" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdJ8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__2K" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyH__2L" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyH__2M" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__2N" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2O" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2P" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2Q" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe0k" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__2S" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyH__2T" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH__2U" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__2V" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__2W" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__2X" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__2Y" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTeqf" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__30" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyH__31" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH__32" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__33" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH__34" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH__35" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH__36" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTd_1" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__1s" resolve="runningState" />
                </node>
                <node concept="liA8E" id="1OGsPyH__38" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyH__39" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH__3a" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH__3b" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH__3c" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH__3d" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH__3e" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH__3f" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH__3g" role="1SL9yI">
      <property role="TrG5h" value="debuggerGetsSuspended" />
      <node concept="3cqZAl" id="1OGsPyH__3h" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH__3i" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVrP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__3j" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__3k" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH__3l" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__3m" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH__3n" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH__3o" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$Z$" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__3p" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__3q" role="3cpWs9">
              <property role="TrG5h" value="runningState" />
              <node concept="3uibUv" id="1OGsPyH__3r" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__3s" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTemf" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__3k" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__3u" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__3v" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__3w" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__dz" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvTw" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvTx" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvTy" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvTz" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTe0J" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__3k" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvT_" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvTA" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__3y" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__3z" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__3$" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH__3_" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__3A" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH__3B" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__3k" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__3C" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH__3D" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__3E" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__3F" role="3cpWs9">
              <property role="TrG5h" value="suspendedStateMock" />
              <node concept="3uibUv" id="1OGsPyH__3G" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__3H" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZlz" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__3k" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__3J" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__3K" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__3L" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__dU" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Zs5A" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Zs5B" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6Zs5C" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Zs5D" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Zs5E" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__3k" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Zs5F" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zs5G" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__43" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__44" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__45" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH__46" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__3$" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH__47" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvQZyZ" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH__3F" resolve="suspendedStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__e7" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__el" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH__e8" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Zs5B" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyH__eq" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi3" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVrZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__4d" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__4e" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__4f" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZ$v" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__3$" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__4h" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__4i" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdx9" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Zs5B" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__4k" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__4l" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__4m" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ83" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__3q" resolve="runningState" />
              </node>
              <node concept="liA8E" id="1OGsPyH__4o" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__4p" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__4q" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__4r" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="1OGsPyH__4s" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__3$" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__4t" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__4u" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTeml" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6Zs5B" resolve="debuggerListener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH__fo" role="1SL9yI">
      <property role="TrG5h" value="suspendingDebugger" />
      <node concept="3cqZAl" id="1OGsPyH__fp" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH__fq" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVs7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__fr" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__fs" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH__ft" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__fu" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH__fv" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH__fw" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$Z$" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__fx" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__fy" role="3cpWs9">
              <property role="TrG5h" value="attachedState" />
              <node concept="3uibUv" id="1OGsPyH__fz" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__f$" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH__f_" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__fs" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__fA" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__fB" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__fC" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__fD" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__fE" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsa" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__fF" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__fG" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH__fH" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__fI" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZzD" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__fs" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__fK" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH__fL" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__fM" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__fN" role="3cpWs9">
              <property role="TrG5h" value="suspendStateMock" />
              <node concept="3uibUv" id="1OGsPyH__fO" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__fP" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdNB" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__fs" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__fR" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__fS" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__fT" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__fU" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvU4" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvU5" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvU6" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvU7" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZI7" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__fs" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvU9" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvUa" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Zs6n" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Zs6o" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6Zs6p" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Zs6q" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTeiL" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__fs" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Zs6s" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zs6t" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVse" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__gb" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__hX" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__jt" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZBj" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XvU5" resolve="mapperInterceptor" />
              </node>
              <node concept="liA8E" id="1OGsPyH__jz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagW" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__kQ" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__l4" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyH__kR" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__fG" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH__l9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="1OGsPyH__la" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH__fN" resolve="suspendStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__gF" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsi" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__ld" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__lf" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZlG" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvU5" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__lh" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__li" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZpr" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__fG" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__lc" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__gc" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__gd" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeoH" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__fy" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH__gf" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__ll" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__ln" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__lp" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZtH" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvU5" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVso" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__lr" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__ls" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="1OGsPyH__lu" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__fG" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH__5E" role="1SL9yI">
      <property role="TrG5h" value="TryingToDetachDebugger" />
      <node concept="3cqZAl" id="1OGsPyH__5F" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH__5G" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVsp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__rs" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__rt" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH__ru" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__rv" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH__rw" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH__rx" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$Z$" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__ry" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__rz" role="3cpWs9">
              <property role="TrG5h" value="attachedState" />
              <node concept="3uibUv" id="1OGsPyH__r$" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__r_" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdyt" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__rt" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__rB" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__rC" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__rD" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__rE" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__rF" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVss" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__rG" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__rH" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH__rI" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__rJ" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH__rK" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__rt" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__rL" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH__rM" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVst" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__rN" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__rO" role="3cpWs9">
              <property role="TrG5h" value="suspendStateMock" />
              <node concept="3uibUv" id="1OGsPyH__rP" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__rQ" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH__rR" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__rt" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__rS" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__rT" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH__rU" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__tl" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Zs6w" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Zs6x" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6Zs6y" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Zs6z" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTe3f" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__rt" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Zs6_" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zs6A" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__sc" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__sd" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__se" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZx3" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__rz" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH__sg" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH__lv" role="1SL9yI">
      <property role="TrG5h" value="TryingToDetachDebuggerMultipleTimes" />
      <node concept="3cqZAl" id="1OGsPyH__lw" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH__lx" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVsx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__ph" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__pi" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH__pj" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__pk" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH__pl" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH__pm" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_$Z$" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__pn" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__po" role="3cpWs9">
              <property role="TrG5h" value="attachedState" />
              <node concept="3uibUv" id="1OGsPyH__pp" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__pq" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZB3" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__pi" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__ps" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__pt" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyH__pu" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__pv" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEje" resolve="Running" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__pw" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__px" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__py" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyH__pz" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__p$" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZOl" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__pi" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__pA" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyH__pB" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVs_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH__pC" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH__pD" role="3cpWs9">
              <property role="TrG5h" value="detachStateMock" />
              <node concept="3uibUv" id="1OGsPyH__pE" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH__pF" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyH__pG" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__pi" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH__pH" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH__pI" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH__pJ" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH__rg" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvUg" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvUh" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvUi" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvUj" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6XvUk" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__pi" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvUl" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvUm" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Zs6D" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Zs6E" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6Zs6F" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Zs6G" role="33vP2m">
                <node concept="37vLTw" id="6L3DaT6Zs6H" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH__pi" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Zs6I" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zs6J" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__q1" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__q2" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__q3" role="3clFbG">
              <node concept="liA8E" id="1OGsPyH__q5" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
              <node concept="37vLTw" id="5HxjapvTdWC" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6XvUh" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__q6" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__q7" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZAN" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__py" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyH__q9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="1OGsPyH__qa" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyH__pD" resolve="detachStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__qb" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__qc" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__qd" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZtk" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvUh" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__qf" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__qg" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdxo" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__py" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__qi" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__qj" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyH__qk" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZM4" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyH__po" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="1OGsPyH__qm" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyH__qn" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__qo" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__qp" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="6L3DaT6XvUr" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvUh" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyH__qr" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyH__qs" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTdFq" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyH__py" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyHAo0B">
    <property role="TrG5h" value="Suspend" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyHAo0C" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyHAo0D" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyHAo0E" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyHAo0F" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyHAo0G" role="3cqZAk">
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <node concept="2ShNRf" id="1OGsPyHAo0H" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyHAo0I" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyHAo0J" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyHAo0K" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyHAo0L" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyHAo0M" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyHAo0N" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyHAo0O" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyHAo0P" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHAo0Q" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyHAo0R" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHAo0S" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvNt" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvNu" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvNv" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvNw" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvNx" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvNy" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvNz" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHAo1s" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHAo1t" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHAo1u" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyHAo1v" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHAo1w" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHAo1x" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyHAo1y" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHAo1z" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHAo1$" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyHAo1A" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZsC9" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHAo1E" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHAo1F" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6ZsCk" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHAo1H" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHAo1I" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHAo1J" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgOJ" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgOK" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgOL" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgOM" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgON" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgOO" role="37wK5m">
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHAo1Q" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHAo1R" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyHAo1S" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyHAo1T" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyHAo1U" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyHAo1V" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyHAokX" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHAo1X" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyHAo1Y" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyHAo1Z" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyHAo2u" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyHAo2v" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyHAo2w" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyHAo2x" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyHAo2y" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyHAo2z" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyHAo2$" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyHAo2_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyHAo2A" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyHAo5p" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyHAo2C" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyHAo5f" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjgS" resolve="SuspendState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHAo2E" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyHAo2F" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHAo2G" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVsN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAoci" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAocj" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHAock" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAocl" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHAocm" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHAocn" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyHAo0C" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAoco" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAocp" role="3cpWs9">
              <property role="TrG5h" value="suspendState" />
              <node concept="3uibUv" id="1OGsPyHAocq" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAocr" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHAocs" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocj" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoct" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHAocu" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyHAocv" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHAtDr" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAocx" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAocy" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAocz" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAoc$" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe33" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAocA" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgUZ" resolve="addBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHAocB" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHAocC" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAocD" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAocE" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAocF" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAocG" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZnJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAocI" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgV6" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHAocJ" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHAocK" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAocL" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAocM" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAocN" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAocO" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZQz" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAocQ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWo" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2YIFZM" id="1OGsPyHAocR" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHAocS" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAocT" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAocU" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAocV" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAocW" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHAocX" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAocY" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWv" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHAocZ" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAod0" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAod1" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAod2" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAod3" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdMR" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAod5" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWf" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="1OGsPyHAod6" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHAod7" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAod8" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAod9" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAoda" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodb" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ9N" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodd" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAode" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodl" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAodm" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodn" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdLR" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodp" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVm" resolve="detach" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAodq" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodr" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAods" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodt" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZKh" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodv" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAodw" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodx" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAody" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodz" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHAod$" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAod_" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVd" resolve="getCurrentNode" />
                  <node concept="2YIFZM" id="1OGsPyHAodA" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHAodB" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAodC" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVsZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodD" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAodE" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodF" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdLs" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodH" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWA" resolve="getInstructionAdresses" />
                  <node concept="Xl_RD" id="1OGsPyHAodI" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHAodJ" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAodK" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodL" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAodM" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodN" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZpb" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodP" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="6L3DaT6TL98" role="3$Qgvv">
              <ref role="3uigEE" to="x30c:2pJszzmZAXj" resolve="WaitingForReplyException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodR" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAodS" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodT" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe4L" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAodV" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVE" resolve="resume" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAodW" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAodX" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAodY" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAodZ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZfo" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoe1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW1" resolve="stepInto" />
                  <node concept="2YIFZM" id="1OGsPyHAoe2" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHAoe3" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAoe4" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAoe5" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAoe6" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAoe7" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe5p" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoe9" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVU" resolve="stepOver" />
                  <node concept="2YIFZM" id="1OGsPyHAoea" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="1OGsPyHAoeb" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAoec" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAoed" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAoee" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAoef" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdtu" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoeh" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgW8" resolve="stepOut" />
                  <node concept="2YIFZM" id="1OGsPyHAoei" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHAoej" role="37wK5m">
                      <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAoek" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAoel" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAoem" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAoen" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHAoeo" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAocp" resolve="suspendState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoep" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyHAoeq" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyHAoer" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHAoes" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyHAoet" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHAoeu" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyHAoev" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAoew" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHAof4" role="1SL9yI">
      <property role="TrG5h" value="transitionFromSuspendToSuspended" />
      <node concept="3cqZAl" id="1OGsPyHAof5" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHAof6" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVt6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAohA" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAohB" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHAohC" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAohD" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHAohE" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHAohF" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyHAo0C" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAohG" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAohH" role="3cpWs9">
              <property role="TrG5h" value="suspendState" />
              <node concept="3uibUv" id="1OGsPyHAohI" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAohJ" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHAohK" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAohB" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHAohL" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHAohM" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHAohN" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHAojB" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAohP" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAohQ" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAohR" role="3cpWs9">
              <property role="TrG5h" value="stateContextMock" />
              <node concept="3uibUv" id="1OGsPyHAohS" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAohT" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZBf" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAohB" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHAohV" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="1OGsPyHAohW" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVta" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAohX" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAohY" role="3cpWs9">
              <property role="TrG5h" value="suspendedStateMock" />
              <node concept="3uibUv" id="1OGsPyHAohZ" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAoi0" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZeB" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAohB" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoi2" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHAoi3" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyHAoi4" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHAokF" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHAoi6" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHAoi7" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvO4" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHAoi9" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZi5" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAohB" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHAoib" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvO9" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6Zspp" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6Zspq" role="3cpWs9">
              <property role="TrG5h" value="debuggerListener" />
              <node concept="3uibUv" id="6L3DaT6Zspr" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6Zsps" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZiQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHAohB" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6Zspu" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6Zspv" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAoim" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVte" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoin" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHAoio" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTej9" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHAohR" resolve="stateContextMock" />
              </node>
              <node concept="liA8E" id="1OGsPyHAoiq" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHUiED" resolve="setState" />
                <node concept="37vLTw" id="5HxjapvTd$3" role="37wK5m">
                  <ref role="3cqZAo" node="1OGsPyHAohY" resolve="suspendedStateMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAois" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHAoit" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTepx" role="2Oq$k0">
                <ref role="3cqZAo" node="6L3DaT6Zspq" resolve="debuggerListener" />
              </node>
              <node concept="liA8E" id="1OGsPyHAoiv" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi3" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtg" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAoiw" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVth" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoix" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHAoiy" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTdNs" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHAohR" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVti" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoi$" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHAoi_" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="1OGsPyHAoiA" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHAoi7" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAoiB" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoiC" role="8Wnug">
            <node concept="2OqwBi" id="1OGsPyHAoiD" role="3clFbG">
              <node concept="37vLTw" id="1OGsPyHAoiE" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHAohH" resolve="suspendState" />
              </node>
              <node concept="liA8E" id="1OGsPyHAoiF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtl" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHAoiG" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtm" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoiH" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHAoiI" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvQZq2" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHAohR" resolve="stateContextMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtn" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHAoiK" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHAoiL" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="1OGsPyHAoiM" role="37wK5m">
                <ref role="3cqZAo" node="1OGsPyHAoi7" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="1OGsPyH_MM8">
    <property role="TrG5h" value="Suspended" />
    <property role="3GE5qa" value="api" />
    <node concept="2XrIbr" id="1OGsPyH_MM9" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="1OGsPyH_MMa" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="1OGsPyH_MMb" role="3clF47">
        <node concept="3cpWs6" id="1OGsPyH_MMc" role="3cqZAp">
          <node concept="2YIFZM" id="1OGsPyH_MMd" role="3cqZAk">
            <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
            <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
            <node concept="2ShNRf" id="1OGsPyH_MMe" role="37wK5m">
              <node concept="YeOm9" id="1OGsPyH_MMf" role="2ShVmc">
                <node concept="1Y3b0j" id="1OGsPyH_MMg" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                  <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                  <node concept="3Tm1VV" id="1OGsPyH_MMh" role="1B3o_S" />
                  <node concept="3clFb_" id="1OGsPyH_MMi" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="configure" />
                    <property role="DiZV1" value="false" />
                    <property role="IEkAT" value="false" />
                    <node concept="3Tmbuc" id="1OGsPyH_MMj" role="1B3o_S" />
                    <node concept="3cqZAl" id="1OGsPyH_MMk" role="3clF45" />
                    <node concept="3clFbS" id="1OGsPyH_MMl" role="3clF47">
                      <node concept="3SKdUt" id="1OGsPyH_MMm" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_MMn" role="3SKWNk">
                          <property role="3SKdUp" value="Dependencies" />
                        </node>
                      </node>
                      <node concept="3SKdUt" id="1OGsPyH_MMo" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_MMp" role="3SKWNk">
                          <property role="3SKdUp" value="Mocks" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6XvIy" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6XvIz" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6XvI$" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6XvI_" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6XvIA" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6XvIB" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="6L3DaT6XvIC" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_MMX" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_MMY" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_MMZ" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="1OGsPyH_MN0" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_MN1" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_MN2" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_MN3" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHUiEB" resolve="DebuggerStateContext" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_MN4" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_MN5" role="3clFbG">
                          <node concept="3P9mCS" id="1OGsPyH_MN7" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6ZsRD" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_MNb" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_MNc" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="6L3DaT6Zt5z" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6L3DaT6ZrkU" resolve="IDebuggerListenerManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_MNe" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_MNf" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_MNg" role="3SKWNk">
                          <property role="3SKdUp" value="Real Objects" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="6L3DaT6YgNa" role="3cqZAp">
                        <node concept="2OqwBi" id="6L3DaT6YgNb" role="3clFbG">
                          <node concept="3P9mCS" id="6L3DaT6YgNc" role="2Oq$k0">
                            <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                            <node concept="3VsKOn" id="6L3DaT6YgNd" role="37wK5m">
                              <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                            </node>
                          </node>
                          <node concept="liA8E" id="6L3DaT6YgNe" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="6L3DaT6YgNf" role="37wK5m">
                              <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                              <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_MNx" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_MNy" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_MNz" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_MN$" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_MN_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_MNA" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_ZS4" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEj$" resolve="Detach" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_MNC" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_MND" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_MNE" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_TaH" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_TaI" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_TaJ" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_TaK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_TaL" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_TaM" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_TbW" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEiN" resolve="Suspend" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_TaO" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_TaP" role="37wK5m">
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="3VsKOn" id="1OGsPyH_TaQ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_Tcu" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_Tcv" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_Tcw" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_Tcx" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_Tcy" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_Tcz" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_TcO" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLh4e" resolve="Resume" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_Tc_" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                            <node concept="2YIFZM" id="1OGsPyH_TcA" role="37wK5m">
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                              <node concept="3VsKOn" id="1OGsPyH_TcB" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="1OGsPyH_MNF" role="3cqZAp" />
                      <node concept="3SKdUt" id="1OGsPyH_MNG" role="3cqZAp">
                        <node concept="3SKdUq" id="1OGsPyH_MNH" role="3SKWNk">
                          <property role="3SKdUp" value="Class to Test" />
                        </node>
                      </node>
                      <node concept="3clFbF" id="1OGsPyH_MNI" role="3cqZAp">
                        <node concept="2OqwBi" id="1OGsPyH_MNJ" role="3clFbG">
                          <node concept="2OqwBi" id="1OGsPyH_MNK" role="2Oq$k0">
                            <node concept="3P9mCS" id="1OGsPyH_MNL" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="1OGsPyH_MNM" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="1OGsPyH_MNN" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.Class):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                              <node concept="3VsKOn" id="1OGsPyH_MUg" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="1OGsPyH_MNP" role="2OqNvi">
                            <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                            <node concept="3VsKOn" id="1OGsPyH_MTT" role="37wK5m">
                              <ref role="3VsUkX" to="x30c:5HSnKgHUjiO" resolve="SuspendedState" />
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyH_MNR" role="1SL9yI">
      <property role="TrG5h" value="illegalInvocations" />
      <node concept="3cqZAl" id="1OGsPyH_MNS" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyH_MNT" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVto" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_MNU" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_MNV" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyH_MNW" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_MNX" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyH_MNY" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyH_MNZ" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_MM9" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtp" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyH_MO0" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyH_MO1" role="3cpWs9">
              <property role="TrG5h" value="notAttachedState" />
              <node concept="3uibUv" id="1OGsPyH_MO2" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyH_MO3" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdvU" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MNV" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyH_MO5" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyH_MO6" role="37wK5m">
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <node concept="3VsKOn" id="1OGsPyH_MO7" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyH_TPb" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAdSX" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAdSY" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAdSZ" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHAdT0" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAdT1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWS" resolve="debuggerAttached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAdT2" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtr" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAdTD" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAdTE" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAdTF" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZH4" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAdTH" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWK" resolve="debuggerDetached" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAdTI" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVts" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyHAdVw" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyHAdVx" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyHAdVy" role="3clFbG">
                <node concept="37vLTw" id="1OGsPyHAdVz" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyHAdV$" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWO" resolve="debuggerResumed" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyHAdV_" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtt" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_MOR" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_MOS" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_MOT" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTejy" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_MOV" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgWW" resolve="debuggerSuspended" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_MOW" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_MP3" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_MP4" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_MP5" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ9P" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_MP7" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVO" resolve="getConsoleStream" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_MP8" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_MPp" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_MPq" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_MPr" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ6H" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_MPt" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVJ" resolve="pause" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_MPu" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="1OGsPyH_MPX" role="8Wnug">
            <node concept="3clFbF" id="1OGsPyH_MPY" role="3$Oloe">
              <node concept="2OqwBi" id="1OGsPyH_MPZ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZFn" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyH_MO1" resolve="notAttachedState" />
                </node>
                <node concept="liA8E" id="1OGsPyH_MQ1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5HSnKgHLgVr" resolve="attach" />
                  <node concept="2YIFZM" id="1OGsPyH_MQ2" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="1OGsPyH_MQ3" role="37wK5m">
                      <ref role="3VsUkX" to="w1kc:~SModel" resolve="SModel" />
                    </node>
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_MQ4" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="Xl_RD" id="1OGsPyH_MQ5" role="37wK5m">
                    <property role="Xl_RC" value="" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_MQ6" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                  <node concept="3cmrfG" id="1OGsPyH_MQ7" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="1OGsPyH_MQ8" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="1OGsPyHB9Mu" role="1SL9yI">
      <property role="TrG5h" value="invokeQueries" />
      <node concept="3cqZAl" id="1OGsPyHB9Mv" role="3clF45" />
      <node concept="3clFbS" id="1OGsPyHB9Mw" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVtx" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHB9NO" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHB9NP" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="1OGsPyHB9NQ" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHB9NR" role="33vP2m">
                <node concept="2WthIp" id="1OGsPyHB9NS" role="2Oq$k0" />
                <node concept="2XshWL" id="1OGsPyHB9NT" role="2OqNvi">
                  <ref role="2WH_rO" node="1OGsPyH_MM9" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVty" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHB9NU" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHB9NV" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHB9NW" role="3cpWs9">
              <property role="TrG5h" value="suspendedState" />
              <node concept="3uibUv" id="1OGsPyHB9NX" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
              </node>
              <node concept="2OqwBi" id="1OGsPyHB9NY" role="33vP2m">
                <node concept="37vLTw" id="1OGsPyHB9NZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHB9NP" resolve="injector" />
                </node>
                <node concept="liA8E" id="1OGsPyHB9O0" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="1OGsPyHB9O1" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="3VsKOn" id="1OGsPyHB9O2" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHLgQG" resolve="AbstractDebuggerState" />
                    </node>
                    <node concept="3VsKOn" id="1OGsPyHB9RN" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:5HSnKgHPEjp" resolve="Suspended" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT6XvRM" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT6XvRN" role="3cpWs9">
              <property role="TrG5h" value="mapperInterceptor" />
              <node concept="3uibUv" id="6L3DaT6XvRO" role="1tU5fm">
                <ref role="3uigEE" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
              </node>
              <node concept="2OqwBi" id="6L3DaT6XvRP" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTem8" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHB9NP" resolve="injector" />
                </node>
                <node concept="liA8E" id="6L3DaT6XvRR" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6XvRS" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6L3DaT6TXBW" resolve="MapperInterceptor" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVt_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHB9O$" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="6L3DaT706op" role="8Wnug">
            <node concept="3cpWsn" id="6L3DaT706oq" role="3cpWs9">
              <property role="TrG5h" value="threadMock" />
              <node concept="3uibUv" id="6L3DaT706or" role="1tU5fm">
                <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
              <node concept="2YIFZM" id="6L3DaT706ou" role="33vP2m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="6L3DaT706o$" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT706oN" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT706pC" role="3clFbG">
              <node concept="2YIFZM" id="6L3DaT706pr" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="6L3DaT706p2" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZiy" role="2Oq$k0">
                    <ref role="3cqZAo" node="6L3DaT6XvRN" resolve="mapperInterceptor" />
                  </node>
                  <node concept="liA8E" id="6L3DaT706p8" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6MI7HAgl_fy" resolve="getProgramState" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="6L3DaT706pH" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="6L3DaT706pI" role="37wK5m">
                  <ref role="3cqZAo" node="6L3DaT706oq" resolve="threadMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHB9OI" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHB9OM" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHB9ON" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XvRW" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvRN" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHB9OP" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="1OGsPyHB9Xf" role="8Wnug">
            <node concept="3cpWsn" id="1OGsPyHB9Xg" role="3cpWs9">
              <property role="TrG5h" value="result" />
              <node concept="3uibUv" id="1OGsPyHB9Xh" role="1tU5fm">
                <ref role="3uigEE" to="5zyv:~Future" resolve="Future" />
                <node concept="3uibUv" id="6L3DaT706oi" role="11_B2D">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                </node>
              </node>
              <node concept="2OqwBi" id="1OGsPyHB9OR" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTe3j" role="2Oq$k0">
                  <ref role="3cqZAo" node="1OGsPyHB9NW" resolve="suspendedState" />
                </node>
                <node concept="liA8E" id="6L3DaT706og" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6L3DaT6XBnC" resolve="getProgramState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="2Hmddi" id="6L3DaT706pO" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT706q4" role="2Hmdds">
              <node concept="37vLTw" id="5HxjapvTdAd" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHB9Xg" resolve="result" />
              </node>
              <node concept="liA8E" id="6L3DaT706qa" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vMLTj" id="6L3DaT706qb" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT706qs" role="3tpDZB">
              <node concept="37vLTw" id="6L3DaT706qf" role="2Oq$k0">
                <ref role="3cqZAo" node="1OGsPyHB9Xg" resolve="result" />
              </node>
              <node concept="liA8E" id="6L3DaT706qy" role="2OqNvi">
                <ref role="37wK5l" to="5zyv:~Future.get():java.lang.Object" resolve="get" />
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZp_" role="3tpDZA">
              <ref role="3cqZAo" node="6L3DaT706oq" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="1OGsPyHB9OU" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="1OGsPyHB9OV" role="8Wnug">
            <node concept="2YIFZM" id="1OGsPyHB9OW" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="6L3DaT6XvRX" role="37wK5m">
                <ref role="3cqZAo" node="6L3DaT6XvRN" resolve="mapperInterceptor" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="2XOHcx" id="5XU7UUGbc$C">
    <property role="2XOHcw" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger/" />
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbnz">
    <property role="TrG5h" value="MapperModule" />
    <property role="3GE5qa" value="mapper" />
    <node concept="1LZb2c" id="5XU7UUGbbn$" role="1SL9yI">
      <property role="TrG5h" value="createModule" />
      <node concept="3cqZAl" id="5XU7UUGbbn_" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbnA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbnB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbnC" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbnD" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbnE" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbbnF" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbbnG" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:4iuDOPeNwS$" resolve="MapperModule" />
                </node>
              </node>
              <node concept="2ShNRf" id="5XU7UUGbbnH" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbbnI" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbbnJ" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbbnK" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbbnL" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbbnM" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbbnN" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbbnO" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbboH" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbboI" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbboJ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="28Ru$KVy1AZ" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbboL" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbboM" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="28Ru$KV$iyP" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbnP" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbnQ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbnR" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbnS" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbnT" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbnU" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbnV" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbnW" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbnX" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbnY" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbnZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbo0" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbo1" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbo2" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbo3" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbo4" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbo5" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbo6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbo7" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbo8" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbo9" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbboa" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbob" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbboc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbod" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbboe" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbof" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbog" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbboh" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbboi" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbboj" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbok" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbol" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbom" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbon" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbboo" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbop" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbboq" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbor" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbos" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbot" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbou" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbov" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbow" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbox" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbboy" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbboz" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbo$" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbo_" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbboA" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbboB" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbboC" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbboD" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbboE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbboF" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbboG" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKuzPP" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKuzPQ" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKuzRn" role="2Oq$k0">
                              <node concept="3P9mCS" id="7W4QWPKuzPR" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKuzR4" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7W4QWPKuzRx" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7W4QWPKuzRP" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="7W4QWPKuzRV" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKuzPT" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="7W4QWPKuzPX" role="37wK5m">
                                <property role="3cmrfH" value="200" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbboO" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbboP" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcMs" resolve="areNumberOfInstances" />
            <node concept="37vLTw" id="5XU7UUGbboQ" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbboR" role="37wK5m">
              <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGbboS" role="37wK5m">
              <property role="3cmrfH" value="3" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbboT" role="3cqZAp">
          <node concept="2YIFZM" id="29so9VbS0Fi" role="3vwVQn">
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <node concept="37vLTw" id="29so9VbS0Fj" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="29so9VbS0Fk" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbboX" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbboY" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvQZfB" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbp0" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbp1" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbp2" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTem_" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbp4" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbp5" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbp6" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTd_n" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbp8" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbp9" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpa" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdP2" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpc" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpd" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpe" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvQZvG" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpg" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbph" role="3cqZAp">
          <node concept="2YIFZM" id="29so9VbS1h7" role="3vwVQn">
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <node concept="37vLTw" id="29so9VbS1h8" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="29so9VbS1h9" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpl" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpm" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcMs" resolve="areNumberOfInstances" />
            <node concept="37vLTw" id="5XU7UUGbbpn" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpo" role="37wK5m">
              <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGbbpp" role="37wK5m">
              <property role="3cmrfH" value="3" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpq" role="3cqZAp">
          <node concept="2YIFZM" id="29so9VbS1Ry" role="3vwVQn">
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <node concept="37vLTw" id="29so9VbS1Rz" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="29so9VbS1R$" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpu" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpv" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbbpw" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpx" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpy" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpz" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdsg" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbp_" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpA" role="3cqZAp">
          <node concept="2YIFZM" id="29so9VbS2tn" role="3vwVQn">
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <node concept="37vLTw" id="29so9VbS2to" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="29so9VbS2tp" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpE" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpF" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdYD" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpH" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpI" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpJ" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvQZrD" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpL" role="37wK5m">
              <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpM" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpN" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbbpO" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpP" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpQ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpR" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbbpS" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpT" role="37wK5m">
              <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpU" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpV" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTe4c" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbpX" role="37wK5m">
              <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbpY" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbpZ" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbbq0" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbnC" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbbq1" role="37wK5m">
              <ref role="3VsUkX" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbc96">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="UnusedWatchablesCreator" />
    <node concept="3Tm1VV" id="5XU7UUGbc97" role="1B3o_S" />
    <node concept="3clFbW" id="5XU7UUGbc98" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbc99" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbc9a" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbc9b" role="3clF47" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbc9c" role="jymVt">
      <property role="TrG5h" value="constructStructVariable" />
      <property role="DiZV1" value="false" />
      <node concept="3uibUv" id="5XU7UUGbc9d" role="3clF45">
        <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbc9e" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc9f" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc9g" role="3cpWs9">
            <property role="TrG5h" value="cVariable" />
            <node concept="3uibUv" id="5XU7UUGbc9h" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbc9i" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbc9j" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXph0" resolve="WStructVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc9k" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc9l" role="3cpWs9">
            <property role="TrG5h" value="secondMember" />
            <node concept="3uibUv" id="5XU7UUGbc9m" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbc9n" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbc9o" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc9p" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc9q" role="3cpWs9">
            <property role="TrG5h" value="firstMember" />
            <node concept="3uibUv" id="5XU7UUGbc9r" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbc9s" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbc9t" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc9u" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc9v" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc9w" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc9x" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbc9y" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbc9z" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc9$" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbc9_" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbc9A" role="37wK5m">
                <property role="Xl_RC" value="first" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc9B" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc9C" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc9D" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbc9E" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTem4" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc9G" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6a" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbc9H" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbc9I" role="37wK5m">
                <property role="Xl_RC" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc9J" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc9K" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc9L" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbc9M" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZet" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc9O" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPR" resolve="getKind" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbc9P" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Rm8GO" id="5XU7UUGbc9Q" role="37wK5m">
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB2" resolve="LOCAL" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc9R" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc9S" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc9T" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbc9U" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbc9V" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc9W" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6f" resolve="getChildren" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbc9X" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2ShNRf" id="5XU7UUGbc9Y" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbc9Z" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbca0" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbca1" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbca2" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbca3" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZaQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbca5" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbca6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbca7" role="37wK5m">
                <property role="Xl_RC" value="second" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbca8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbca9" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcaa" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbcab" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbcac" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcad" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6a" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcae" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbcaf" role="37wK5m">
                <property role="Xl_RC" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcag" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcah" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcai" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbcaj" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZ9C" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcal" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPR" resolve="getKind" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcam" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Rm8GO" id="5XU7UUGbcan" role="37wK5m">
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB2" resolve="LOCAL" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcao" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcap" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcaq" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbcar" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZM2" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcat" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6f" resolve="getChildren" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcau" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2ShNRf" id="5XU7UUGbcav" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbcaw" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~UnsupportedOperationException.&lt;init&gt;()" resolve="UnsupportedOperationException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcax" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcay" role="3cpWs9">
            <property role="TrG5h" value="children" />
            <node concept="_YKpA" id="5XU7UUGbcaz" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbca$" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbca_" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbcaA" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbcaB" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcaC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcaD" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdC4" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcay" resolve="children" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbcaF" role="2OqNvi">
              <node concept="37vLTw" id="5HxjapvQZ54" role="25WWJ7">
                <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcaH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcaI" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTe0z" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcay" resolve="children" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbcaK" role="2OqNvi">
              <node concept="37vLTw" id="5HxjapvQZuI" role="25WWJ7">
                <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcaM" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcaN" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcaO" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbcaP" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTemX" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcaR" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6f" resolve="getChildren" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcaS" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvTdUn" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbcay" resolve="children" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcaU" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcaV" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcaW" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbcaX" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTe5j" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcaZ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcb0" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbcb1" role="37wK5m">
                <property role="Xl_RC" value="aStruct" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcb2" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcb3" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcb4" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbcb5" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbcb6" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcb7" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6a" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcb8" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Xl_RD" id="5XU7UUGbcb9" role="37wK5m">
                <property role="Xl_RC" value="struct" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcba" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcbb" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbcbc" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbcbd" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZev" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcbf" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPR" resolve="getKind" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcbg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="Rm8GO" id="5XU7UUGbcbh" role="37wK5m">
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB2" resolve="LOCAL" />
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcbi" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbcbj" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcbk" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZyG" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcbm" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcbn" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdY_" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc9l" resolve="secondMember" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcbp" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcbq" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ6F" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc9q" resolve="firstMember" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcbs" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbcbt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcbu" role="3cpWs9">
            <property role="TrG5h" value="unmappedVariable" />
            <node concept="3uibUv" id="5XU7UUGbcbv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcbw" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbcbx" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n1V" resolve="MUnmappedVariableImpl" />
                <node concept="37vLTw" id="5XU7UUGbcby" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc9g" resolve="cVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcbz" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZtN" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcbu" resolve="unmappedVariable" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcb_" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcbA" role="jymVt">
      <property role="TrG5h" value="constructPrimitiveVariable" />
      <property role="DiZV1" value="false" />
      <node concept="3uibUv" id="5XU7UUGbcbB" role="3clF45">
        <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcbC" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcbD" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcbE" role="3cpWs9">
            <property role="TrG5h" value="cVariable" />
            <node concept="3uibUv" id="5XU7UUGbcbF" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcbG" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbcbH" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcbI" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbcbJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcbK" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcbL" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcbM" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbcbN" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTemj" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcbP" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:4qrUVeH3W6f" resolve="getChildren" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcbQ" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbcbR" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbcbS" role="2ShVmc">
                    <ref role="37wK5l" to="x30c:2RztF93bP8P" resolve="WResolvingChildrenFailedExcepton" />
                    <node concept="Xl_RD" id="5XU7UUGbcbT" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcbU" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcbV" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcbW" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcbX" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcbY" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbcbZ" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZBX" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcc1" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcc2" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbcc3" role="37wK5m">
                  <property role="Xl_RC" value="aStruct" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcc4" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcc5" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcc6" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcc7" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcc8" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbcc9" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbcca" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbccb" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:4qrUVeH3W6a" resolve="getValueRepresentation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbccc" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbccd" role="37wK5m">
                  <property role="Xl_RC" value="struct" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcce" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbccf" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbccg" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcch" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcci" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbccj" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbcck" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbccl" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2RztF939YPR" resolve="getKind" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbccm" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Rm8GO" id="5XU7UUGbccn" role="37wK5m">
                  <ref role="Rm8GQ" to="x30c:3SnnFeu9rB2" resolve="LOCAL" />
                  <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcco" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbccp" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbccq" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbccr" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTd8I" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcct" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbccu" role="3cqZAp">
          <node concept="2ShNRf" id="5XU7UUGbccv" role="3clFbG">
            <node concept="1pGfFk" id="5XU7UUGbccw" role="2ShVmc">
              <ref role="37wK5l" to="x30c:3gwY0Fa4n1V" resolve="MUnmappedVariableImpl" />
              <node concept="37vLTw" id="5XU7UUGbccx" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbcbE" resolve="cVariable" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbccy" role="1B3o_S" />
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbbq2">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="CrossTestFunctionality" />
    <node concept="3Tm1VV" id="5XU7UUGbbs5" role="1B3o_S" />
    <node concept="3clFbW" id="5XU7UUGbbs6" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbbs7" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbbs8" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbbs9" role="3clF47" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbbq3" role="jymVt">
      <property role="TrG5h" value="constructValidStackFrame" />
      <node concept="3uibUv" id="5XU7UUGbbq4" role="3clF45">
        <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbbq5" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbbq6" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbq7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbq8" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="5XU7UUGbbq9" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbqa" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbqb" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbqc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbqd" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="5XU7UUGbbqe" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbqf" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbbqg" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbqh" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbqi" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbqj" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbqk" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbql" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbqm" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbqn" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbqd" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbqo" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbqp" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGbbqq" role="37wK5m">
                  <property role="3cmrfH" value="10" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbqr" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbqs" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbqt" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbqu" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbqv" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbqw" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbqx" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbqd" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbqy" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbqz" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbq$" role="37wK5m">
                  <property role="Xl_RC" value="Main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbq_" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbqA" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbqB" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbqC" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbqD" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbqE" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdPW" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbqd" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbqG" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbqH" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbqI" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbqJ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbqK" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbqL" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbqM" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbqN" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbqO" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTe0v" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbq8" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbqQ" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbqR" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdFZ" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbqd" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbqT" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbqU" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbqV" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbqW" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbbqX" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbq8" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbqY" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbqZ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZb6" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbqd" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbr1" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGbbr2" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZxU" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbq8" resolve="stackFrameMock" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbbr4" role="jymVt">
      <property role="TrG5h" value="constructInvalidStackFrame" />
      <node concept="3uibUv" id="5XU7UUGbbr5" role="3clF45">
        <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbbr6" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbbr7" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbr8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbr9" role="3cpWs9">
            <property role="TrG5h" value="stackFrameMock" />
            <node concept="3uibUv" id="5XU7UUGbbra" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbrb" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbbrc" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbrd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbre" role="3cpWs9">
            <property role="TrG5h" value="locationMock" />
            <node concept="3uibUv" id="5XU7UUGbbrf" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbrg" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbbrh" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbri" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbrj" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbrk" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbrl" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbrm" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbrn" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTe0t" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbre" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbrp" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbrq" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGbbrr" role="37wK5m">
                  <property role="3cmrfH" value="10" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbrs" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbrt" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbru" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbrv" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbrw" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbrx" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdX3" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbre" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbrz" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbr$" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbr_" role="37wK5m">
                  <property role="Xl_RC" value="Main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbrA" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbrB" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbrC" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbrD" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbrE" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbrF" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTelg" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbre" resolve="locationMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbrH" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbrI" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbrJ" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbrK" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbrL" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbrM" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbrN" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbrO" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbrP" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZ8o" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbr9" resolve="stackFrameMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbrR" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbrS" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTd_3" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbre" resolve="locationMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbrU" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbrV" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbrW" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbrX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZuu" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbr9" resolve="stackFrameMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbrZ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbs0" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTej1" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbre" resolve="locationMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbs2" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGbbs3" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbbs4" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbr9" resolve="stackFrameMock" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbsa">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="BreakpointMapper" />
    <node concept="1LZb2c" id="5XU7UUGbbsb" role="1SL9yI">
      <property role="TrG5h" value="createlineLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbsc" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbsd" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbse" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbsf" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbsg" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbsh" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbsi" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbsj" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbsk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbsl" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbsm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbsn" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdxS" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbsf" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbsp" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbsq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbsr" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbss" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbst" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbsu" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbsv" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbsf" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbsw" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbsx" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbsy" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbsz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbs$" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbs_" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbsA" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbsB" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTe2k" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbss" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbsD" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbsE" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbsF" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbbsG" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbsH" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbsI" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbsJ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbsK" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbsL" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbsM" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ9$" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbss" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbsO" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbbsP" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbsQ" role="2Hmdds">
            <node concept="37vLTw" id="5XU7UUGbbsR" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbsl" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbsS" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
              <node concept="Xl_RD" id="5XU7UUGbbsT" role="37wK5m">
                <property role="Xl_RC" value="Main.c" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGbbsU" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbsV" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbsW" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZer" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbsl" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbsY" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
              <node concept="Xl_RD" id="5XU7UUGbbsZ" role="37wK5m">
                <property role="Xl_RC" value="Sensor.c" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGbbt0" role="37wK5m">
                <property role="3cmrfH" value="100" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbt1" role="1SL9yI">
      <property role="TrG5h" value="illegalLineLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbt2" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbt3" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbt4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbt5" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbt6" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbt7" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbt8" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbt9" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbta" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbtb" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbtc" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbtd" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTek5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbt5" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbtf" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbtg" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbth" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbti" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbtj" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbtk" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZJW" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbt5" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbtm" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbtn" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbto" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbtp" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbtq" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbtr" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbts" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbtt" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbtu" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbti" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbtv" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbtw" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbtx" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbbty" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbtz" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbt$" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbt_" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbtA" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbtB" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbtC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ$r" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbti" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbtE" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbtF" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbtG" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbtH" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbtI" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ5p" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbtb" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbtK" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGbbtL" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbtM" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbtN" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbtO" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbtP" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbtQ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZy2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbtb" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbtS" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGbbtT" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbtU" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbtV" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbtW" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbtX" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbtY" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZz3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbtb" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbu0" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
                <node concept="10Nm6u" id="5XU7UUGbbu1" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbu2" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbu3" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbu4" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbu5" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbu6" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTele" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbtb" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbu8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGbbu9" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbua" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbub" role="1SL9yI">
      <property role="TrG5h" value="createAddressLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbuc" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbud" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbue" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbuf" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbug" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbuh" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbui" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbuj" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbuk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbul" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbum" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbun" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdt6" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbuf" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbup" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbuq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbur" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbus" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbut" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbuu" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe0U" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbuf" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbuw" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbux" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbuy" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbuz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbu$" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbu_" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbuA" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbuB" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZ3Z" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbus" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbuD" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbuE" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbuF" role="37wK5m">
                        <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbuG" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbuH" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbuI" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbuJ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbuK" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbuL" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdB3" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbus" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbuN" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbbuO" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbuP" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZdW" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbul" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbuR" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
              <node concept="2ShNRf" id="5XU7UUGbbuS" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbbuT" role="2ShVmc">
                  <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                  <node concept="Xl_RD" id="5XU7UUGbbuU" role="37wK5m">
                    <property role="Xl_RC" value="100" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbuV" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbuW" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZhb" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbul" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbuY" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
              <node concept="2ShNRf" id="5XU7UUGbbuZ" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbbv0" role="2ShVmc">
                  <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                  <node concept="Xl_RD" id="5XU7UUGbbv1" role="37wK5m">
                    <property role="Xl_RC" value="1" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbv2" role="1SL9yI">
      <property role="TrG5h" value="illegalAddressLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbv3" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbv4" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbv5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbv6" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbv7" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbv8" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbv9" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbva" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbvb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbvc" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbvd" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbve" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ4b" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbv6" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbvg" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbvh" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbvi" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbvj" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbvk" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbvl" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZzk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbv6" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbvn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbvo" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbvp" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbvq" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbvr" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbvs" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbvt" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbvu" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdLL" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbvj" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbvw" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbvx" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="5XU7UUGbbvy" role="37wK5m">
                        <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbvz" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbv$" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbv_" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbvA" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbvB" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbvC" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZ_s" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbvj" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbvE" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbvF" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbvG" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbvH" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbvI" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTejA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbvc" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbvK" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
                <node concept="10Nm6u" id="5XU7UUGbbvL" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbvM" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbvN" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbvO" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbvP" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbvQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbvc" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbvR" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
                <node concept="2ShNRf" id="5XU7UUGbbvS" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbvT" role="2ShVmc">
                    <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                    <node concept="Xl_RD" id="5XU7UUGbbvU" role="37wK5m">
                      <property role="Xl_RC" value="-1" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbvV" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbvW" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbvX" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbvY" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZRU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbvc" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbw0" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
                <node concept="2ShNRf" id="5XU7UUGbbw1" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbw2" role="2ShVmc">
                    <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                    <node concept="Xl_RD" id="5XU7UUGbbw3" role="37wK5m">
                      <property role="Xl_RC" value="0" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbw4" role="1SL9yI">
      <property role="TrG5h" value="functionLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbw5" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbw6" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbw7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbw8" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbw9" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbwa" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbwb" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbwc" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbwd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbwe" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbwf" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbwg" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZyK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbw8" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbwi" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbwj" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbwk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbwl" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbwm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbwn" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZH2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbw8" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbwp" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbwq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbwr" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbws" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbwt" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbwu" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbwv" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbww" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbwx" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbwl" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbwy" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbwz" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbw$" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbw_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbwA" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbwB" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbwC" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbwD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbwE" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdwo" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbwl" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbwG" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbbwH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbwI" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdwW" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbwe" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbwK" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
              <node concept="Xl_RD" id="5XU7UUGbbwL" role="37wK5m">
                <property role="Xl_RC" value="aFunction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbwM" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbwN" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZcg" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbwe" resolve="breakpointMapper" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbwP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
              <node concept="Xl_RD" id="5XU7UUGbbwQ" role="37wK5m">
                <property role="Xl_RC" value="main" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbwR" role="1SL9yI">
      <property role="TrG5h" value="illegalFunctionLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbwS" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbwT" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbwU" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbwV" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbwW" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbwX" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbwY" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbwZ" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbx0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbx1" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbx2" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbx3" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeiF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbwV" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbx5" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbx6" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbx7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbx8" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbx9" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbxa" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbxb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbwV" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbxc" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbxd" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbxe" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbxf" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbxg" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbxh" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbxi" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbxj" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTe2D" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbx8" resolve="breakpointLocationFactoryMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbxl" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbxm" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="5XU7UUGbbxn" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbxo" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbxp" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbxq" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbxr" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbxs" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbxt" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbbxu" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbx8" resolve="breakpointLocationFactoryMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbxv" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbxw" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbxx" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbxy" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbxz" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdF$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbx1" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbx_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
                <node concept="Xl_RD" id="5XU7UUGbbxA" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbxB" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbxC" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbxD" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbxE" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbxF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbx1" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbxG" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
                <node concept="10Nm6u" id="5XU7UUGbbxH" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbxI" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbxJ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbxK" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbxL" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZhJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbx1" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbxN" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
                <node concept="Xl_RD" id="5XU7UUGbbxO" role="37wK5m">
                  <property role="Xl_RC" value="123" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbzp" role="1SL9yI">
      <property role="TrG5h" value="mapIllegalBreakpoints" />
      <node concept="3cqZAl" id="5XU7UUGbbzq" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbzr" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbzs" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbzt" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbzu" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbzv" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbzw" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbzx" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbzS" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbzy" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbzz" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapper" />
            <node concept="3uibUv" id="5XU7UUGbbz$" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbz_" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZqJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbzt" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbzB" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbzC" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbzD" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbzE" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocationFactoryMock" />
            <node concept="3uibUv" id="5XU7UUGbbzF" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbzG" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdEX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbzt" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbzI" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbzJ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbzK" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbzL" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbzM" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbzN" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbzO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbzz" resolve="breakpointMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbzP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaCA" resolve="map" />
                <node concept="10Nm6u" id="5XU7UUGbbzQ" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbzR" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbzS" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbbzT" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbzU" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbzV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbzW" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbzX" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbzY" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbbzZ" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbb$0" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbb$1" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbb$2" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbb$3" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbb$4" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbb$5" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbb$6" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbb$7" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbb$8" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbb$9" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbb$a" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbb$b" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbb$c" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbb$d" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbb$e" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbb$f" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbb$g" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbb$h" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbb$i" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbb$j" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6HGoZgQ1kss" resolve="MLocationAndBreakpointMapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbb$k" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbb$l" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbb$m" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbb$n" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbb$o" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbb$p" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbb$q" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2cOIosl5Df7" role="3cqZAp">
                          <node concept="2OqwBi" id="2cOIosl5Df8" role="3clFbG">
                            <node concept="3P9mCS" id="2cOIosl5Df9" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2cOIosl5Dfu" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2cOIosl5D9O" resolve="IMTracesProvider" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2cOIosl5Dfb" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2cOIosl5Dfc" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="2cOIosl5Df$" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2cOIosl5D9O" resolve="IMTracesProvider" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2cOIosl6t6j" role="3cqZAp">
                          <node concept="2OqwBi" id="2cOIosl6t6k" role="3clFbG">
                            <node concept="3P9mCS" id="2cOIosl6t6l" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2cOIosl6t6$" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2cOIosl6t0w" resolve="IMAstAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2cOIosl6t6n" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2cOIosl6t6o" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="2cOIosl6t6I" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2cOIosl6t0w" resolve="IMAstAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbb$r" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbb$s" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbzW" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbb$t">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="LocationMapper" />
    <node concept="1LZb2c" id="5XU7UUGbb$u" role="1SL9yI">
      <property role="TrG5h" value="getNodeForValidPosition" />
      <node concept="3cqZAl" id="5XU7UUGbb$v" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb$w" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb$x" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb$y" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb$z" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb$$" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb$_" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb$A" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbAO" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb$B" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb$C" role="3cpWs9">
            <property role="TrG5h" value="debugAPIWrapper" />
            <node concept="3uibUv" id="5XU7UUGbb$D" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb$E" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTduN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb$y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb$G" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb$H" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb$I" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb$J" role="3cpWs9">
            <property role="TrG5h" value="locationMapper" />
            <node concept="3uibUv" id="5XU7UUGbb$K" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb$L" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZSg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb$y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb$N" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb$O" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb$P" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb$Q" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb$R" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbb$S" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbb$T" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdGt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb$C" resolve="debugAPIWrapper" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb$V" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5QfD$m0JVs_" resolve="getNode" />
                  <node concept="2YIFZM" id="5XU7UUGbb$W" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="5XU7UUGbb$X" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbb$Y" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbb$Z" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbb_0" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbb_1" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="2ShNRf" id="5XU7UUGbb_2" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbb_3" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:57r6BQpGnfH" resolve="TNodeProxy" />
                  <node concept="10Nm6u" id="5XU7UUGbb_4" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb_5" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb_6" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTeqL" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb$C" resolve="debugAPIWrapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb_8" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbb_9" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb_a" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2PERJEltghr" resolve="MMissingTracesException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb_b" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb_c" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb_d" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb$J" resolve="locationMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb_e" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5QfD$m0JStf" resolve="getNodeForCurrentPosition" />
                <node concept="2YIFZM" id="5XU7UUGbb_f" role="37wK5m">
                  <ref role="1Pybhc" node="5XU7UUGbbq2" resolve="CrossTestFunctionality" />
                  <ref role="37wK5l" node="5XU7UUGbbq3" resolve="constructValidStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb_g" role="1SL9yI">
      <property role="TrG5h" value="getNodeForUnknownPosition" />
      <node concept="3cqZAl" id="5XU7UUGbb_h" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb_i" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb_j" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb_k" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb_l" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb_m" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb_n" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb_o" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbAO" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb_p" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb_q" role="3cpWs9">
            <property role="TrG5h" value="debugAPIWrapper" />
            <node concept="3uibUv" id="5XU7UUGbb_r" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb_s" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbb_t" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb_k" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb_u" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb_v" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb_w" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb_x" role="3cpWs9">
            <property role="TrG5h" value="locationMapper" />
            <node concept="3uibUv" id="5XU7UUGbb_y" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb_z" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTelz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb_k" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb__" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb_A" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb_B" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb_C" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb_D" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbb_E" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbb_F" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZEj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb_q" resolve="debugAPIWrapper" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb_H" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5QfD$m0JVs_" resolve="getNode" />
                  <node concept="2YIFZM" id="5XU7UUGbb_I" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="5XU7UUGbb_J" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbb_K" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="5XU7UUGbb_L" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbb_M" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbb_N" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="2ShNRf" id="5XU7UUGbb_O" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbb_P" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:57r6BQpGnfH" resolve="TNodeProxy" />
                  <node concept="10Nm6u" id="5XU7UUGbb_Q" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb_R" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb_S" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbb_T" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb_q" resolve="debugAPIWrapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb_U" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbb_V" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb_W" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2PERJEltghr" resolve="MMissingTracesException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb_X" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb_Y" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZvL" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb_x" resolve="locationMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbA0" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5QfD$m0JStf" resolve="getNodeForCurrentPosition" />
                <node concept="2YIFZM" id="5XU7UUGbbA1" role="37wK5m">
                  <ref role="37wK5l" node="5XU7UUGbbq3" resolve="constructValidStackFrame" />
                  <ref role="1Pybhc" node="5XU7UUGbbq2" resolve="CrossTestFunctionality" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbA2" role="1SL9yI">
      <property role="TrG5h" value="getNodeForNullLocation" />
      <node concept="3cqZAl" id="5XU7UUGbbA3" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbA4" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbA5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbA6" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbA7" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbA8" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbA9" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbAa" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbAO" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbAb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbAc" role="3cpWs9">
            <property role="TrG5h" value="debugAPIWrapper" />
            <node concept="3uibUv" id="5XU7UUGbbAd" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbAe" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZQM" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbA6" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbAg" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbAh" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbAi" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbAj" role="3cpWs9">
            <property role="TrG5h" value="locationMapper" />
            <node concept="3uibUv" id="5XU7UUGbbAk" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbAl" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbAm" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbA6" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbAn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbAo" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbAp" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbAq" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbAr" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbbAs" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGbbAt" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTe55" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbAc" resolve="debugAPIWrapper" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbAv" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5QfD$m0JVs_" resolve="getNode" />
                  <node concept="2YIFZM" id="5XU7UUGbbAw" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="5XU7UUGbbAx" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbbAy" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="3VsKOn" id="5XU7UUGbbAz" role="37wK5m">
                      <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                    </node>
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbbA$" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbA_" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="2ShNRf" id="5XU7UUGbbAA" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbbAB" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:57r6BQpGnfH" resolve="TNodeProxy" />
                  <node concept="10Nm6u" id="5XU7UUGbbAC" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbAD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbAE" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZ_T" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbAc" resolve="debugAPIWrapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbAG" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbAH" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbAI" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbAJ" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbAK" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ9k" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbAj" resolve="locationMapper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbAM" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5QfD$m0JStf" resolve="getNodeForCurrentPosition" />
                <node concept="10Nm6u" id="5XU7UUGbbAN" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbAO" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbbAP" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbAQ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbAR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbAS" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbAT" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbAU" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbbAV" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbbAW" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbbAX" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbbAY" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbbAZ" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbbB0" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbbB1" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbbB2" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbbB3" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbB4" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbB5" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbB6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbB7" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbB8" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbB9" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbBa" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbBb" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbBc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbBd" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbBe" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbBf" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6HGoZgQ1kss" resolve="MLocationAndBreakpointMapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbBg" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbBh" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbBi" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbBj" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbBk" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbBl" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbBm" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2cOIosl6J1s" role="3cqZAp">
                          <node concept="2OqwBi" id="2cOIosl6J1t" role="3clFbG">
                            <node concept="3P9mCS" id="2cOIosl6J1u" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2cOIosl6J1J" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2cOIosl5D9O" resolve="IMTracesProvider" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2cOIosl6J1w" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2cOIosl6J1x" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2cOIosl6J1T" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2cOIosl5D9O" resolve="IMTracesProvider" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2cOIosl6M5k" role="3cqZAp">
                          <node concept="2OqwBi" id="2cOIosl6M5l" role="3clFbG">
                            <node concept="3P9mCS" id="2cOIosl6M5m" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2cOIosl6M5_" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2cOIosl6t0w" resolve="IMAstAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2cOIosl6M5o" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2cOIosl6M5p" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2cOIosl6M5F" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2cOIosl6t0w" resolve="IMAstAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbBn" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZRS" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbAS" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbBp">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MBreakpointManager" />
    <node concept="1LZb2c" id="5XU7UUGbbDU" role="1SL9yI">
      <property role="TrG5h" value="addAndRemoveBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbDV" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbDW" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbDY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbDZ" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbE0" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbE1" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbE2" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbE3" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbE4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbE5" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbE6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbE7" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZGz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbE9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEa" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbEb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEc" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbEd" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbEe" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbEf" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbEg" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEh" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbEi" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEj" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbEk" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbEl" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbEm" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbEn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEo" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbEp" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEq" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbEr" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbEs" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdxU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbEu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEv" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbEw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEx" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbEy" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbEz" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbE$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbE_" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEA" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbEB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEC" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbED" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbEE" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZkx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbDZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbEG" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbEH" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbEI" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbEJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbEK" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbEL" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbEM" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbEN" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbEO" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbEj" resolve="breakpointManagerMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbEP" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                    <node concept="2YIFZM" id="7W4QWPK_bmY" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="7W4QWPK_bmZ" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbES" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbET" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbEU" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbEV" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPK_hyw" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPK_hyi" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdRS" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbEj" resolve="breakpointManagerMock" />
            </node>
            <node concept="liA8E" id="7W4QWPK_hyk" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
              <node concept="2YIFZM" id="7W4QWPK_hyl" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="7W4QWPK_hy$" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPK_hye" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPK_hyf" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPK_hyx" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="7W4QWPK_hyq" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPK_5bD" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbEW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbEX" role="3cpWs9">
            <property role="TrG5h" value="mbeddrBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGbbEY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbEZ" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbF0" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbF1" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbF2" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbbF3" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGbbF4" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZcX" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbEx" resolve="breakpointMapperMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbF6" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
                  <node concept="2YIFZM" id="5XU7UUGbbF7" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbF8" role="37wK5m">
                      <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbF9" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2ShNRf" id="5XU7UUGbbFa" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbbFb" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2cOIosl6sZk" role="3cqZAp">
          <node concept="3cpWsn" id="2cOIosl6sZl" role="3cpWs9">
            <property role="TrG5h" value="locations" />
            <node concept="_YKpA" id="2cOIosl6sZm" role="1tU5fm">
              <node concept="3uibUv" id="2cOIosl6sZo" role="_ZDj9">
                <ref role="3uigEE" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
              </node>
            </node>
            <node concept="2ShNRf" id="2cOIosl6sZq" role="33vP2m">
              <node concept="Tc6Ow" id="2cOIosl6sZs" role="2ShVmc">
                <node concept="3uibUv" id="2cOIosl6sZu" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2cOIosl6sZx" role="3cqZAp">
          <node concept="2OqwBi" id="2cOIosl6sZJ" role="3clFbG">
            <node concept="37vLTw" id="2cOIosl6sZy" role="2Oq$k0">
              <ref role="3cqZAo" node="2cOIosl6sZl" resolve="locations" />
            </node>
            <node concept="TSZUe" id="2cOIosl6sZP" role="2OqNvi">
              <node concept="2YIFZM" id="7W4QWPK_5bE" role="25WWJ7">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="7W4QWPK_5bF" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7W4QWPK_5bk" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPK_5bz" role="3clFbG">
            <node concept="2YIFZM" id="7W4QWPK_5bm" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="7W4QWPK_59l" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZvt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbEx" resolve="breakpointMapperMock" />
                </node>
                <node concept="liA8E" id="7W4QWPK_59r" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4GaCA" resolve="map" />
                  <node concept="2YIFZM" id="7W4QWPK_59t" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7W4QWPK_59y" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPK_5bC" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvTdUJ" role="37wK5m">
                <ref role="3cqZAo" node="2cOIosl6sZl" resolve="locations" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbFc" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbFd" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ8B" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbEx" resolve="breakpointMapperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbFf" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbFg" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdRc" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbEj" resolve="breakpointManagerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbFi" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGbbFj" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbFk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbFl" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZah" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbEq" resolve="permanentBreakpointCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbFn" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaA8" resolve="addBreakpoint" />
              <node concept="37vLTw" id="5XU7UUGbbFo" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbEX" resolve="mbeddrBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbFp" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbFq" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdHW" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbEq" resolve="permanentBreakpointCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbFs" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaAi" resolve="removeBreakpoint" />
              <node concept="37vLTw" id="5HxjapvQZIJ" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbEX" resolve="mbeddrBreakpoint" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbFu" role="1SL9yI">
      <property role="TrG5h" value="removeUnknownBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbFv" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbFw" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbFx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbFy" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbFz" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbF$" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbF_" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbFA" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbFB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbFC" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbFD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbFE" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbFF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbFG" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbFH" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbFI" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbFJ" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbFK" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbFL" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdUB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbFN" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbFO" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbFP" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbFQ" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbFR" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbFS" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZuX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbFU" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbFV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbFW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbFX" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbFY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbFZ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZJt" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbG1" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbG2" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbG3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbG4" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbG5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbG6" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZQO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbG8" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbG9" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbGa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbGb" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbGc" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbGd" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdTp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFy" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGf" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbGg" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2xksOhMF4xC" role="3cqZAp" />
        <node concept="3cpWs8" id="2xksOhMF8s8" role="3cqZAp">
          <node concept="3cpWsn" id="2xksOhMF8s9" role="3cpWs9">
            <property role="TrG5h" value="breakpointMock" />
            <node concept="3uibUv" id="2xksOhMF8sa" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbGo" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbGp" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8s_" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMF8tq" role="3clFbG">
            <node concept="2OqwBi" id="2xksOhMF8t6" role="2Oq$k0">
              <node concept="2YIFZM" id="2xksOhMF8sB" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="2xksOhMF8st" role="37wK5m">
                  <node concept="37vLTw" id="2xksOhMF8sg" role="2Oq$k0">
                    <ref role="3cqZAo" node="2xksOhMF8s9" resolve="breakpointMock" />
                  </node>
                  <node concept="liA8E" id="2xksOhMF8sz" role="2OqNvi">
                    <ref role="37wK5l" to="rw00:3SnNvqCaK2M" resolve="isValid" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2xksOhMF8tc" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3clFbT" id="2xksOhMF8td" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2xksOhMF8tv" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8tz" role="3cqZAp">
          <node concept="2YIFZM" id="2xksOhMF8tA" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZSU" role="37wK5m">
              <ref role="3cqZAo" node="2xksOhMF8s9" resolve="breakpointMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2xksOhMF8t_" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbGi" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbGj" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2fjdrD4GaGN" resolve="MTryingToRemoveUnknownBreakpoint" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbGk" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbGl" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZzV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFX" resolve="permanentBreakpointCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGn" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaAi" resolve="removeBreakpoint" />
                <node concept="37vLTw" id="5HxjapvQZNM" role="37wK5m">
                  <ref role="3cqZAo" node="2xksOhMF8s9" resolve="breakpointMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2xksOhMF4xy" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbGq" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbGr" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbGs" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbGt" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdKY" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbFX" resolve="permanentBreakpointCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGv" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaAi" resolve="removeBreakpoint" />
                <node concept="10Nm6u" id="5XU7UUGbbGw" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbGx" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromWrapperWhileAddingBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbGy" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbGz" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbG$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbG_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbGA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbGB" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbGC" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbGD" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbGE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbGF" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbGG" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbGH" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdLg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGJ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbGK" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbGL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbGM" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbGN" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbGO" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbGP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbGR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbGS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbGT" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbGU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbGV" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbGW" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbGX" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbGY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbGZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbH0" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbH1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbH2" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdMN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbH4" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbH5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbH6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbH7" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbH8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbH9" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdQb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbHb" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbHc" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbHd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbHe" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbHf" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbHg" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdG1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbG_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbHi" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbHj" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbHk" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbHl" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbHm" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbHn" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbHo" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbHp" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTelQ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbGT" resolve="breakpointManagerMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbHr" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                    <node concept="2YIFZM" id="5XU7UUGbbHs" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbHt" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbHu" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2YIFZM" id="5XU7UUGbbHv" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbHw" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2$vlzIIenuK" resolve="WFailedToCreateBreakpointException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbHx" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbHy" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbHz" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdZO" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbGT" resolve="breakpointManagerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbH_" role="3cqZAp" />
        <node concept="3cpWs8" id="2xksOhMF8tE" role="3cqZAp">
          <node concept="3cpWsn" id="2xksOhMF8tF" role="3cpWs9">
            <property role="TrG5h" value="breakpointMock" />
            <node concept="3uibUv" id="2xksOhMF8tG" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="2YIFZM" id="2xksOhMF8tH" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="2xksOhMF8tI" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8tJ" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMF8tK" role="3clFbG">
            <node concept="2OqwBi" id="2xksOhMF8tL" role="2Oq$k0">
              <node concept="2YIFZM" id="2xksOhMF8tM" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="2xksOhMF8tN" role="37wK5m">
                  <node concept="37vLTw" id="2xksOhMF8tO" role="2Oq$k0">
                    <ref role="3cqZAo" node="2xksOhMF8tF" resolve="breakpointMock" />
                  </node>
                  <node concept="liA8E" id="2xksOhMF8tP" role="2OqNvi">
                    <ref role="37wK5l" to="rw00:3SnNvqCaK2M" resolve="isValid" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2xksOhMF8tQ" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3clFbT" id="2xksOhMF8tR" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2xksOhMF8tS" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMFQ3j" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMFQ3k" role="3clFbG">
            <node concept="37vLTw" id="2xksOhMFQ3l" role="2Oq$k0">
              <ref role="3cqZAo" node="2xksOhMF8tF" resolve="breakpointMock" />
            </node>
            <node concept="liA8E" id="2xksOhMFQ3m" role="2OqNvi">
              <ref role="37wK5l" to="x30c:13C5RDfy8Yn" resolve="setValid" />
              <node concept="3clFbT" id="2xksOhMFWdF" role="37wK5m">
                <property role="3clFbU" value="false" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMFQ3o" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMFQ3p" role="3clFbG">
            <node concept="2YIFZM" id="2xksOhMFQ3q" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="2xksOhMFWdI" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="2xksOhMFWdJ" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8tT" role="3cqZAp">
          <node concept="2YIFZM" id="2xksOhMF8tU" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZfm" role="37wK5m">
              <ref role="3cqZAo" node="2xksOhMF8tF" resolve="breakpointMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2xksOhMF8tC" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbHB" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbHC" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdy2" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbH0" resolve="permanentBreakpointCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbHE" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaA8" resolve="addBreakpoint" />
              <node concept="37vLTw" id="5HxjapvTdt8" role="37wK5m">
                <ref role="3cqZAo" node="2xksOhMF8tF" resolve="breakpointMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbHI" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromWrapperWhileRemovingBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbHJ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbHK" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbHL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbHM" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbHN" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbHO" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbHP" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbHQ" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbHR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbHS" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbHT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbHU" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbHV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbHW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbHX" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbHY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbHZ" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbI0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbI1" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTej7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbI3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbI4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbI5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbI6" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbI7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbI8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZQg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbIa" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbIb" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbIc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbId" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbIe" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbIf" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdze" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbIh" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbIi" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbIj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbIk" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbIl" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbIm" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZGd" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbIo" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbIp" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbIq" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbIr" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbIs" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbIt" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZCV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbHM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbIv" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbIw" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbIx" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbIy" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbIz" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdVx" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbI6" resolve="breakpointManagerMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbI_" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
              <node concept="2YIFZM" id="5XU7UUGbbIA" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbbIB" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbIC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbID" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbbIE" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbIF" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="5XU7UUGbbIG" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbbIH" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2$vlzIIenuK" resolve="WFailedToCreateBreakpointException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbII" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbIJ" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbIK" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbIL" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbIM" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZ5Z" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbI6" resolve="breakpointManagerMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbIO" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                    <node concept="2YIFZM" id="5XU7UUGbbIP" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbIQ" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbIR" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbIS" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbIT" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbIU" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbIV" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbIW" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdUD" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbI6" resolve="breakpointManagerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2xksOhMF8uk" role="3cqZAp" />
        <node concept="3cpWs8" id="2xksOhMF8u0" role="3cqZAp">
          <node concept="3cpWsn" id="2xksOhMF8u1" role="3cpWs9">
            <property role="TrG5h" value="breakpointMock" />
            <node concept="3uibUv" id="2xksOhMF8u2" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="2YIFZM" id="2xksOhMF8u3" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2xksOhMF8u4" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8u5" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMF8u6" role="3clFbG">
            <node concept="2OqwBi" id="2xksOhMF8u7" role="2Oq$k0">
              <node concept="2YIFZM" id="2xksOhMF8u8" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="2xksOhMF8u9" role="37wK5m">
                  <node concept="37vLTw" id="2xksOhMF8ua" role="2Oq$k0">
                    <ref role="3cqZAo" node="2xksOhMF8u1" resolve="breakpointMock" />
                  </node>
                  <node concept="liA8E" id="2xksOhMF8ub" role="2OqNvi">
                    <ref role="37wK5l" to="rw00:3SnNvqCaK2M" resolve="isValid" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="2xksOhMF8uc" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3clFbT" id="2xksOhMF8ud" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2xksOhMF8ue" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMFQ3h" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMFMZz" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdIg" role="2Oq$k0">
              <ref role="3cqZAo" node="2xksOhMF8u1" resolve="breakpointMock" />
            </node>
            <node concept="liA8E" id="2xksOhMFMZ_" role="2OqNvi">
              <ref role="37wK5l" to="x30c:13C5RDfy8Yn" resolve="setValid" />
              <node concept="2YIFZM" id="2xksOhMFMZA" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyBoolean():boolean" resolve="anyBoolean" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMFMZw" role="3cqZAp">
          <node concept="2OqwBi" id="2xksOhMFMZx" role="3clFbG">
            <node concept="2YIFZM" id="2xksOhMFQ3i" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="2xksOhMFMZB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2xksOhMF8uf" role="3cqZAp">
          <node concept="2YIFZM" id="2xksOhMF8ug" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="2xksOhMF8uh" role="37wK5m">
              <ref role="3cqZAo" node="2xksOhMF8u1" resolve="breakpointMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbIY" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbJ4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbJ5" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZNy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbId" resolve="permanentBreakpointCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbJ7" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaA8" resolve="addBreakpoint" />
              <node concept="37vLTw" id="5HxjapvQZm9" role="37wK5m">
                <ref role="3cqZAo" node="2xksOhMF8u1" resolve="breakpointMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbJ9" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbJa" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2PERJElsJb6" resolve="DebuggerException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbJb" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbJc" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZoF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbId" resolve="permanentBreakpointCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbJe" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaAi" resolve="removeBreakpoint" />
                <node concept="37vLTw" id="5HxjapvTdxK" role="37wK5m">
                  <ref role="3cqZAo" node="2xksOhMF8u1" resolve="breakpointMock" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbJg" role="1SL9yI">
      <property role="TrG5h" value="functionBraekpointAddedAndRemoved" />
      <node concept="3cqZAl" id="5XU7UUGbbJh" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbJi" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVtK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJk" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJl" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbbJm" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJn" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbbJo" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbbJp" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJq" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJr" role="3cpWs9">
              <property role="TrG5h" value="breakpointRegistryMock" />
              <node concept="3uibUv" id="5XU7UUGbbJs" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJt" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTd$_" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbJv" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbJw" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJx" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJy" role="3cpWs9">
              <property role="TrG5h" value="wrapperEventListenerMock" />
              <node concept="3uibUv" id="5XU7UUGbbJz" role="1tU5fm">
                <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJ$" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZO2" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbJA" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbJB" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJC" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJD" role="3cpWs9">
              <property role="TrG5h" value="breakpointManagerMock" />
              <node concept="3uibUv" id="5XU7UUGbbJE" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJF" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTd_L" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbJH" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbJI" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJJ" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJK" role="3cpWs9">
              <property role="TrG5h" value="permanentBreakpointCreator" />
              <node concept="3uibUv" id="5XU7UUGbbJL" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJM" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbJN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbJO" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbJP" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJQ" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJR" role="3cpWs9">
              <property role="TrG5h" value="breakpointMapperMock" />
              <node concept="3uibUv" id="5XU7UUGbbJS" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbJT" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdEN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbJV" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbJW" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbJX" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbJY" role="3cpWs9">
              <property role="TrG5h" value="eventManager" />
              <node concept="3uibUv" id="5XU7UUGbbJZ" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbK0" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZLD" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbK2" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbK3" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbK4" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbK5" role="3cpWs9">
              <property role="TrG5h" value="temporalBreakpointCreatorMock" />
              <node concept="3uibUv" id="5XU7UUGbbK6" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbK7" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZAP" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbJl" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbK9" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbKa" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7W4QWPK_H_R" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbKb" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbKc" role="3clFbG">
              <node concept="liA8E" id="5XU7UUGbbKd" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6dGtzfiO6Oh" resolve="addTemporalFunctionBreakpoint" />
                <node concept="Xl_RD" id="5XU7UUGbbKe" role="37wK5m">
                  <property role="Xl_RC" value="Main" />
                </node>
              </node>
              <node concept="37vLTw" id="5XU7UUGbbKf" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbK5" resolve="temporalBreakpointCreatorMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7W4QWPK_H_C" role="8Wnug">
            <node concept="2OqwBi" id="7W4QWPK_H_D" role="3clFbG">
              <node concept="2OqwBi" id="7W4QWPK_H_E" role="2Oq$k0">
                <node concept="2YIFZM" id="7W4QWPK_H_F" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="7W4QWPK_H_G" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZdS" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbJD" resolve="breakpointManagerMock" />
                    </node>
                    <node concept="liA8E" id="7W4QWPK_H_I" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                      <node concept="2YIFZM" id="7W4QWPK_H_J" role="37wK5m">
                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                        <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                        <node concept="3VsKOn" id="7W4QWPK_H_K" role="37wK5m">
                          <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7W4QWPK_H_L" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="7W4QWPK_H_M" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="7W4QWPK_H_N" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPK_H_O" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7W4QWPK_nGh" role="8Wnug">
            <node concept="2OqwBi" id="7W4QWPK_nGi" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTe2z" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbJD" resolve="breakpointManagerMock" />
              </node>
              <node concept="liA8E" id="7W4QWPK_nGk" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
                <node concept="2YIFZM" id="7W4QWPK_nGl" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="7W4QWPK_nGm" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7W4QWPK_nGn" role="8Wnug">
            <node concept="2OqwBi" id="7W4QWPK_nGo" role="3clFbG">
              <node concept="2YIFZM" id="7W4QWPK_nGp" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="7W4QWPK_nGq" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbKv" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbKw" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5XU7UUGbbKx" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbJD" resolve="breakpointManagerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7W4QWPK_nGt" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVtZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbKy" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbKz" role="3cpWs9">
              <property role="TrG5h" value="temporalBreakpointsField" />
              <node concept="3uibUv" id="5XU7UUGbbK$" role="1tU5fm">
                <ref role="3uigEE" to="t6h5:~Field" resolve="Field" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbK_" role="33vP2m">
                <node concept="3VsKOn" id="5XU7UUGbbKA" role="2Oq$k0">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbKB" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Class.getDeclaredField(java.lang.String):java.lang.reflect.Field" resolve="getDeclaredField" />
                  <node concept="Xl_RD" id="5XU7UUGbbKC" role="37wK5m">
                    <property role="Xl_RC" value="temporalBreakpoints" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbKD" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbKE" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbKF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbKz" resolve="temporalBreakpointsField" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbKG" role="2OqNvi">
                <ref role="37wK5l" to="t6h5:~AccessibleObject.setAccessible(boolean):void" resolve="setAccessible" />
                <node concept="3clFbT" id="5XU7UUGbbKH" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5XU7UUGbbKI" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbKJ" role="3vwVQn">
              <node concept="1eOMI4" id="5XU7UUGbbKK" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbbKL" role="1eOMHV">
                  <node concept="_YKpA" id="5XU7UUGbbKM" role="10QFUM">
                    <node concept="3uibUv" id="5XU7UUGbbKN" role="_ZDj9">
                      <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbbKO" role="10QFUP">
                    <node concept="37vLTw" id="5HxjapvTd$N" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbKz" resolve="temporalBreakpointsField" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbKQ" role="2OqNvi">
                      <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5HxjapvTe1m" role="37wK5m">
                        <ref role="3cqZAo" node="5XU7UUGbbK5" resolve="temporalBreakpointCreatorMock" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3GX2aA" id="5XU7UUGbbKS" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbKT" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbKU" role="3clFbG">
              <node concept="liA8E" id="5XU7UUGbbKV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:SL5gXl3x1S" resolve="suspended" />
              </node>
              <node concept="1eOMI4" id="5XU7UUGbbKW" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbbKX" role="1eOMHV">
                  <node concept="37vLTw" id="5HxjapvTdyS" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbbK5" resolve="temporalBreakpointCreatorMock" />
                  </node>
                  <node concept="3uibUv" id="5XU7UUGbbKZ" role="10QFUM">
                    <ref role="3uigEE" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3vwNmj" id="5XU7UUGbbL0" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbL1" role="3vwVQn">
              <node concept="1eOMI4" id="5XU7UUGbbL2" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbbL3" role="1eOMHV">
                  <node concept="_YKpA" id="5XU7UUGbbL4" role="10QFUM">
                    <node concept="3uibUv" id="5XU7UUGbbL5" role="_ZDj9">
                      <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbbL6" role="10QFUP">
                    <node concept="37vLTw" id="5HxjapvQZMn" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbKz" resolve="temporalBreakpointsField" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbL8" role="2OqNvi">
                      <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                      <node concept="37vLTw" id="5XU7UUGbbL9" role="37wK5m">
                        <ref role="3cqZAo" node="5XU7UUGbbK5" resolve="temporalBreakpointCreatorMock" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="1v1jN8" id="5XU7UUGbbLa" role="2OqNvi" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbLk" role="1SL9yI">
      <property role="TrG5h" value="tryingToAddIllegalFunctionBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbLl" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbLm" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVu4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbLo" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLp" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbbLq" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLr" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbbLs" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbbLt" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbLu" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLv" role="3cpWs9">
              <property role="TrG5h" value="breakpointRegistryMock" />
              <node concept="3uibUv" id="5XU7UUGbbLw" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLx" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ7a" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbLz" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbL$" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbL_" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLA" role="3cpWs9">
              <property role="TrG5h" value="wrapperEventListenerMock" />
              <node concept="3uibUv" id="5XU7UUGbbLB" role="1tU5fm">
                <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLC" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZaf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbLE" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbLF" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbLG" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLH" role="3cpWs9">
              <property role="TrG5h" value="breakpointManagerMock" />
              <node concept="3uibUv" id="5XU7UUGbbLI" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLJ" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ_m" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbLL" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbLM" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbLN" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLO" role="3cpWs9">
              <property role="TrG5h" value="permanentBreakpointCreator" />
              <node concept="3uibUv" id="5XU7UUGbbLP" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLQ" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTeq3" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbLS" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbLT" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbLU" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbLV" role="3cpWs9">
              <property role="TrG5h" value="breakpointMapperMock" />
              <node concept="3uibUv" id="5XU7UUGbbLW" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbLX" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbLY" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbLZ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbM0" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVua" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbM1" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbM2" role="3cpWs9">
              <property role="TrG5h" value="eventManager" />
              <node concept="3uibUv" id="5XU7UUGbbM3" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbM4" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ81" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbM6" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbM7" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVub" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbM8" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbM9" role="3cpWs9">
              <property role="TrG5h" value="temporalBreakpointCreatorMock" />
              <node concept="3uibUv" id="5XU7UUGbbMa" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbMb" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZkz" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbMd" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbMe" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7W4QWPK_xat" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVud" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbMh" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbMi" role="3clFbG">
              <node concept="2YIFZM" id="5XU7UUGbbMj" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbMk" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZuG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbLV" resolve="breakpointMapperMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbMm" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4GaJX" resolve="createFunctionLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbMn" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbMo" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7W4QWPK_xcU" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="7W4QWPK_xeG" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="7W4QWPK_xeL" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVue" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="7W4QWPK_xcy" role="8Wnug">
            <node concept="2OqwBi" id="7W4QWPK_xcL" role="3clFbG">
              <node concept="2YIFZM" id="7W4QWPK_xc$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="7W4QWPK_xcR" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbMq" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbMr" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="7W4QWPK_xcw" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVug" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbMs" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbMt" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGbbMu" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGbbMv" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGbbMw" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZnt" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbLH" resolve="breakpointManagerMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbMy" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                      <node concept="2YIFZM" id="5XU7UUGbbMz" role="37wK5m">
                        <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                        <node concept="3VsKOn" id="5XU7UUGbbM$" role="37wK5m">
                          <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbbM_" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="5XU7UUGbbMA" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbMB" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbMC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuh" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbMD" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbME" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZBh" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbLV" resolve="breakpointMapperMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVui" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbMG" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbMH" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZ8D" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbLH" resolve="breakpointManagerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuj" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbbMJ" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuk" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbMK" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbML" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbMM" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbMN" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbMO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbM9" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbMP" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6dGtzfiO6Oh" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="5XU7UUGbbMQ" role="37wK5m">
                    <property role="Xl_RC" value="." />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVul" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbMR" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbMS" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbMT" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbMU" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbMV" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbM9" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbMW" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6dGtzfiO6Oh" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="Xl_RD" id="5XU7UUGbbMX" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVum" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbMY" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbMZ" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbN0" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbN1" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdT9" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbM9" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbN3" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6dGtzfiO6Oh" resolve="addTemporalFunctionBreakpoint" />
                  <node concept="10Nm6u" id="5XU7UUGbbN4" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbN5" role="1SL9yI">
      <property role="TrG5h" value="LineBraekpointAddedAndRemoved" />
      <node concept="3cqZAl" id="5XU7UUGbbN6" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbN7" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVun" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbN9" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNa" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbbNb" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNc" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbbNd" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbbNe" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuo" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNf" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNg" role="3cpWs9">
              <property role="TrG5h" value="breakpointRegistryMock" />
              <node concept="3uibUv" id="5XU7UUGbbNh" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNi" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbNj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNk" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNl" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVup" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNm" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNn" role="3cpWs9">
              <property role="TrG5h" value="wrapperEventListenerMock" />
              <node concept="3uibUv" id="5XU7UUGbbNo" role="1tU5fm">
                <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNp" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdHl" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNr" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNs" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuq" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNt" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNu" role="3cpWs9">
              <property role="TrG5h" value="breakpointManagerMock" />
              <node concept="3uibUv" id="5XU7UUGbbNv" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNw" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbNx" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNy" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNz" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVur" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbN$" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbN_" role="3cpWs9">
              <property role="TrG5h" value="permanentBreakpointCreator" />
              <node concept="3uibUv" id="5XU7UUGbbNA" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNB" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbNC" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbND" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNE" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVus" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNF" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNG" role="3cpWs9">
              <property role="TrG5h" value="breakpointMapperMock" />
              <node concept="3uibUv" id="5XU7UUGbbNH" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNI" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdYv" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNK" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNL" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVut" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNM" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNN" role="3cpWs9">
              <property role="TrG5h" value="eventManager" />
              <node concept="3uibUv" id="5XU7UUGbbNO" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNP" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZy8" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNR" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNS" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuu" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbNT" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbNU" role="3cpWs9">
              <property role="TrG5h" value="temporalBreakpointCreatorMock" />
              <node concept="3uibUv" id="5XU7UUGbbNV" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbNW" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZqL" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbNa" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbNY" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbNZ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuv" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbbO0" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuw" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbO1" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbO2" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdTr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbNU" resolve="temporalBreakpointCreatorMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbO4" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                <node concept="Xl_RD" id="5XU7UUGbbO5" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbO6" role="37wK5m">
                  <property role="3cmrfH" value="123" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVux" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbO7" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbO8" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGbbO9" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGbbOa" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGbbOb" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvTdNP" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbNu" resolve="breakpointManagerMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbOd" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                      <node concept="2YIFZM" id="5XU7UUGbbOe" role="37wK5m">
                        <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                        <node concept="3VsKOn" id="5XU7UUGbbOf" role="37wK5m">
                          <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbbOg" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="5XU7UUGbbOh" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbOi" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbOj" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuy" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbOk" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbOl" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvQZtP" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbNu" resolve="breakpointManagerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuz" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbOn" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbOo" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5XU7UUGbbOp" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbNU" resolve="temporalBreakpointCreatorMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVu$" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="SfApY" id="5XU7UUGbbOq" role="8Wnug">
            <node concept="3clFbS" id="5XU7UUGbbOr" role="SfCbr">
              <node concept="3cpWs8" id="5XU7UUGbbOs" role="3cqZAp">
                <node concept="3cpWsn" id="5XU7UUGbbOt" role="3cpWs9">
                  <property role="TrG5h" value="temporalBreakpointsField" />
                  <node concept="3uibUv" id="5XU7UUGbbOu" role="1tU5fm">
                    <ref role="3uigEE" to="t6h5:~Field" resolve="Field" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbbOv" role="33vP2m">
                    <node concept="3VsKOn" id="5XU7UUGbbOw" role="2Oq$k0">
                      <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbOx" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Class.getDeclaredField(java.lang.String):java.lang.reflect.Field" resolve="getDeclaredField" />
                      <node concept="Xl_RD" id="5XU7UUGbbOy" role="37wK5m">
                        <property role="Xl_RC" value="temporalBreakpoints" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbF" id="5XU7UUGbbOz" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbbO$" role="3clFbG">
                  <node concept="37vLTw" id="5XU7UUGbbO_" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbOt" resolve="temporalBreakpointsField" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbOA" role="2OqNvi">
                    <ref role="37wK5l" to="t6h5:~AccessibleObject.setAccessible(boolean):void" resolve="setAccessible" />
                    <node concept="3clFbT" id="5XU7UUGbbOB" role="37wK5m">
                      <property role="3clFbU" value="true" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3vwNmj" id="5XU7UUGbbOC" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbbOD" role="3vwVQn">
                  <node concept="1eOMI4" id="5XU7UUGbbOE" role="2Oq$k0">
                    <node concept="10QFUN" id="5XU7UUGbbOF" role="1eOMHV">
                      <node concept="_YKpA" id="5XU7UUGbbOG" role="10QFUM">
                        <node concept="3uibUv" id="5XU7UUGbbOH" role="_ZDj9">
                          <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                        </node>
                      </node>
                      <node concept="2OqwBi" id="5XU7UUGbbOI" role="10QFUP">
                        <node concept="37vLTw" id="5HxjapvTdRy" role="2Oq$k0">
                          <ref role="3cqZAo" node="5XU7UUGbbOt" resolve="temporalBreakpointsField" />
                        </node>
                        <node concept="liA8E" id="5XU7UUGbbOK" role="2OqNvi">
                          <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                          <node concept="37vLTw" id="5HxjapvTept" role="37wK5m">
                            <ref role="3cqZAo" node="5XU7UUGbbNU" resolve="temporalBreakpointCreatorMock" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="3GX2aA" id="5XU7UUGbbOM" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbF" id="5XU7UUGbbON" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbbOO" role="3clFbG">
                  <node concept="liA8E" id="5XU7UUGbbOP" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:SL5gXl3x1S" resolve="suspended" />
                  </node>
                  <node concept="1eOMI4" id="5XU7UUGbbOQ" role="2Oq$k0">
                    <node concept="10QFUN" id="5XU7UUGbbOR" role="1eOMHV">
                      <node concept="37vLTw" id="5HxjapvTdRM" role="10QFUP">
                        <ref role="3cqZAo" node="5XU7UUGbbNU" resolve="temporalBreakpointCreatorMock" />
                      </node>
                      <node concept="3uibUv" id="5XU7UUGbbOT" role="10QFUM">
                        <ref role="3uigEE" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3vwNmj" id="5XU7UUGbbOU" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbbOV" role="3vwVQn">
                  <node concept="1eOMI4" id="5XU7UUGbbOW" role="2Oq$k0">
                    <node concept="10QFUN" id="5XU7UUGbbOX" role="1eOMHV">
                      <node concept="_YKpA" id="5XU7UUGbbOY" role="10QFUM">
                        <node concept="3uibUv" id="5XU7UUGbbOZ" role="_ZDj9">
                          <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                        </node>
                      </node>
                      <node concept="2OqwBi" id="5XU7UUGbbP0" role="10QFUP">
                        <node concept="37vLTw" id="5HxjapvQZnX" role="2Oq$k0">
                          <ref role="3cqZAo" node="5XU7UUGbbOt" resolve="temporalBreakpointsField" />
                        </node>
                        <node concept="liA8E" id="5XU7UUGbbP2" role="2OqNvi">
                          <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                          <node concept="37vLTw" id="5XU7UUGbbP3" role="37wK5m">
                            <ref role="3cqZAo" node="5XU7UUGbbNU" resolve="temporalBreakpointCreatorMock" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="1v1jN8" id="5XU7UUGbbP4" role="2OqNvi" />
                </node>
              </node>
              <node concept="3clFbH" id="5XU7UUGbbP5" role="3cqZAp" />
            </node>
            <node concept="TDmWw" id="5XU7UUGbbP6" role="TEbGg">
              <node concept="3cpWsn" id="5XU7UUGbbP7" role="TDEfY">
                <property role="TrG5h" value="e" />
                <node concept="3uibUv" id="5XU7UUGbbP8" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                </node>
              </node>
              <node concept="3clFbS" id="5XU7UUGbbP9" role="TDEfX">
                <node concept="3xETmq" id="5XU7UUGbbPa" role="3cqZAp">
                  <node concept="3_1$Yv" id="5XU7UUGbbPb" role="3_9lra">
                    <node concept="2OqwBi" id="5XU7UUGbbPc" role="3_1BAH">
                      <node concept="37vLTw" id="5XU7UUGbbPd" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbbP7" resolve="e" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbbPe" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbPf" role="1SL9yI">
      <property role="TrG5h" value="tryingToAddIllegalLineBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbPg" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbPh" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVu_" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPj" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPk" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbbPl" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPm" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbbPn" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbbPo" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuA" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPp" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPq" role="3cpWs9">
              <property role="TrG5h" value="breakpointRegistryMock" />
              <node concept="3uibUv" id="5XU7UUGbbPr" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPs" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZMW" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbPu" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbPv" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuB" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPw" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPx" role="3cpWs9">
              <property role="TrG5h" value="wrapperEventListenerMock" />
              <node concept="3uibUv" id="5XU7UUGbbPy" role="1tU5fm">
                <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPz" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbP$" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbP_" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbPA" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuC" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPB" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPC" role="3cpWs9">
              <property role="TrG5h" value="breakpointManagerMock" />
              <node concept="3uibUv" id="5XU7UUGbbPD" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPE" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZ6T" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbPG" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbPH" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuD" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPI" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPJ" role="3cpWs9">
              <property role="TrG5h" value="permanentBreakpointCreator" />
              <node concept="3uibUv" id="5XU7UUGbbPK" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPL" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZPo" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbPN" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbPO" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuE" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPP" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPQ" role="3cpWs9">
              <property role="TrG5h" value="breakpointMapperMock" />
              <node concept="3uibUv" id="5XU7UUGbbPR" role="1tU5fm">
                <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPS" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZj$" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbPU" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbPV" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuF" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbPW" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbPX" role="3cpWs9">
              <property role="TrG5h" value="eventManager" />
              <node concept="3uibUv" id="5XU7UUGbbPY" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbPZ" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbbQ0" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbQ1" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbQ2" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuG" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbQ3" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbQ4" role="3cpWs9">
              <property role="TrG5h" value="temporalBreakpointCreatorMock" />
              <node concept="3uibUv" id="5XU7UUGbbQ5" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbQ6" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdNH" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbPk" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbQ8" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbQ9" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuH" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbbQa" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuI" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbQb" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbQc" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGbbQd" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGbbQe" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGbbQf" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvTdx0" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbPC" resolve="breakpointManagerMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbQh" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                      <node concept="2YIFZM" id="5XU7UUGbbQi" role="37wK5m">
                        <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                        <node concept="3VsKOn" id="5XU7UUGbbQj" role="37wK5m">
                          <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbbQk" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="5XU7UUGbbQl" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbQm" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbQn" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuJ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbQo" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbQp" role="3clFbG">
              <node concept="2YIFZM" id="5XU7UUGbbQq" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbQr" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZaK" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbPQ" resolve="breakpointMapperMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbQt" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4GaJB" resolve="createLineLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbQu" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbQv" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbbQw" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbQx" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbQy" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbQz" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuK" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbQ$" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbQ_" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvQZzX" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbPQ" resolve="breakpointMapperMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuL" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbQB" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbQC" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5XU7UUGbbQD" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbPC" resolve="breakpointManagerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuM" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbbQE" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuN" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbQF" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbQG" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbQH" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbQI" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTd8M" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbQ4" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbQK" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="5XU7UUGbbQL" role="37wK5m">
                    <property role="Xl_RC" value="Main" />
                  </node>
                  <node concept="3cmrfG" id="5XU7UUGbbQM" role="37wK5m">
                    <property role="3cmrfH" value="123" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuO" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbQN" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbQO" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbQP" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbQQ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZBK" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbQ4" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbQS" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="5XU7UUGbbQT" role="37wK5m" />
                  <node concept="3cmrfG" id="5XU7UUGbbQU" role="37wK5m">
                    <property role="3cmrfH" value="123" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuP" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbQV" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbQW" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbQX" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbQY" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdBO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbQ4" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbR0" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                  <node concept="10Nm6u" id="5XU7UUGbbR1" role="37wK5m" />
                  <node concept="3cmrfG" id="5XU7UUGbbR2" role="37wK5m">
                    <property role="3cmrfH" value="123" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuQ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbR3" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbR4" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbR5" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbR6" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbR7" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbQ4" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbR8" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                  <node concept="10Nm6u" id="5XU7UUGbbR9" role="37wK5m" />
                  <node concept="3cmrfG" id="5XU7UUGbbRa" role="37wK5m">
                    <property role="3cmrfH" value="-123" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuR" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3$NI$W" id="5XU7UUGbbRb" role="8Wnug">
            <node concept="3uibUv" id="5XU7UUGbbRc" role="3$Qgvv">
              <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
            </node>
            <node concept="3clFbF" id="5XU7UUGbbRd" role="3$Oloe">
              <node concept="2OqwBi" id="5XU7UUGbbRe" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbRf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbQ4" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbRg" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5LmHPgOIL_C" resolve="addTemporalLineBreakpoint" />
                  <node concept="Xl_RD" id="5XU7UUGbbRh" role="37wK5m">
                    <property role="Xl_RC" value="Main" />
                  </node>
                  <node concept="3cmrfG" id="5XU7UUGbbRi" role="37wK5m">
                    <property role="3cmrfH" value="-123" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbRj" role="1SL9yI">
      <property role="TrG5h" value="AddressBraekpointAdded" />
      <node concept="3cqZAl" id="5XU7UUGbbRk" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbRl" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbRn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbRo" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbRp" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRq" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbRr" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbRs" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbRt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbRu" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbRv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRw" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbRx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbRy" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbRz" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbR$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbR_" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbRA" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRB" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe5b" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbRD" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbRE" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbRF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbRG" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbRH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRI" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdC0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbRK" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbRL" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbRM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbRN" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbRO" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRP" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbRQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbRR" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbRS" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbRT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbRU" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbRV" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbRW" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbRX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbRY" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbRZ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbS0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbS1" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbS2" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbS3" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZhz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbS5" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbS6" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbS7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbS8" role="3cpWs9">
            <property role="TrG5h" value="temporalBreakpointCreatorMock" />
            <node concept="3uibUv" id="5XU7UUGbbS9" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbSa" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZiG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbRo" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbSc" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbSd" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbbSe" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbbSf" role="SfCbr">
            <node concept="3clFbH" id="5XU7UUGbbSg" role="3cqZAp" />
            <node concept="3clFbF" id="5XU7UUGbbSh" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbSi" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGbbSj" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGbbSk" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGbbSl" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGbbSm" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbbRG" resolve="breakpointManagerMock" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbbSn" role="2OqNvi">
                        <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                        <node concept="2YIFZM" id="5XU7UUGbbSo" role="37wK5m">
                          <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                          <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                          <node concept="3VsKOn" id="5XU7UUGbbSp" role="37wK5m">
                            <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbSq" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="2YIFZM" id="5XU7UUGbbSr" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbSs" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbbSt" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7W4QWPK_Bo$" role="3cqZAp">
              <node concept="2OqwBi" id="7W4QWPK_Boi" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ6k" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbRG" resolve="breakpointManagerMock" />
                </node>
                <node concept="liA8E" id="7W4QWPK_Bok" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
                  <node concept="2YIFZM" id="7W4QWPK_Bol" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7W4QWPK_Boy" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7W4QWPK_Boe" role="3cqZAp">
              <node concept="2OqwBi" id="7W4QWPK_Bof" role="3clFbG">
                <node concept="2YIFZM" id="7W4QWPK_Bo_" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                </node>
                <node concept="liA8E" id="7W4QWPK_Boq" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbbSu" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGbbSv" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="37vLTw" id="5HxjapvTdN5" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbRG" resolve="breakpointManagerMock" />
                </node>
              </node>
            </node>
            <node concept="3clFbH" id="5XU7UUGbbSx" role="3cqZAp" />
            <node concept="3clFbF" id="5XU7UUGbbSy" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbSz" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbS$" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbS8" resolve="temporalBreakpointCreatorMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbS_" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3IzB1DMiEu1" resolve="addTemporalAddressBreakpoint" />
                  <node concept="2ShNRf" id="5XU7UUGbbSA" role="37wK5m">
                    <node concept="1pGfFk" id="5XU7UUGbbSB" role="2ShVmc">
                      <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                      <node concept="Xl_RD" id="5XU7UUGbbSC" role="37wK5m">
                        <property role="Xl_RC" value="123" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5XU7UUGbbSD" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbbSE" role="3cpWs9">
                <property role="TrG5h" value="temporalBreakpointsField" />
                <node concept="3uibUv" id="5XU7UUGbbSF" role="1tU5fm">
                  <ref role="3uigEE" to="t6h5:~Field" resolve="Field" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGbbSG" role="33vP2m">
                  <node concept="3VsKOn" id="5XU7UUGbbSH" role="2Oq$k0">
                    <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbSI" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Class.getDeclaredField(java.lang.String):java.lang.reflect.Field" resolve="getDeclaredField" />
                    <node concept="Xl_RD" id="5XU7UUGbbSJ" role="37wK5m">
                      <property role="Xl_RC" value="temporalBreakpoints" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbbSK" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbSL" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdRi" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbSE" resolve="temporalBreakpointsField" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbSN" role="2OqNvi">
                  <ref role="37wK5l" to="t6h5:~AccessibleObject.setAccessible(boolean):void" resolve="setAccessible" />
                  <node concept="3clFbT" id="5XU7UUGbbSO" role="37wK5m">
                    <property role="3clFbU" value="true" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGbbSP" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbSQ" role="3vwVQn">
                <node concept="1eOMI4" id="5XU7UUGbbSR" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGbbSS" role="1eOMHV">
                    <node concept="_YKpA" id="5XU7UUGbbST" role="10QFUM">
                      <node concept="3uibUv" id="5XU7UUGbbSU" role="_ZDj9">
                        <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbbSV" role="10QFUP">
                      <node concept="37vLTw" id="5HxjapvQZ7T" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbbSE" resolve="temporalBreakpointsField" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbbSX" role="2OqNvi">
                        <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                        <node concept="37vLTw" id="5HxjapvTdOn" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGbbS8" resolve="temporalBreakpointCreatorMock" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="3GX2aA" id="5XU7UUGbbSZ" role="2OqNvi" />
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbbT0" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbT1" role="3clFbG">
                <node concept="liA8E" id="5XU7UUGbbT2" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:SL5gXl3x1S" resolve="suspended" />
                </node>
                <node concept="1eOMI4" id="5XU7UUGbbT3" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGbbT4" role="1eOMHV">
                    <node concept="37vLTw" id="5HxjapvQZc6" role="10QFUP">
                      <ref role="3cqZAo" node="5XU7UUGbbRN" resolve="permanentBreakpointCreator" />
                    </node>
                    <node concept="3uibUv" id="5XU7UUGbbT6" role="10QFUM">
                      <ref role="3uigEE" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGbbT7" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbT8" role="3vwVQn">
                <node concept="1eOMI4" id="5XU7UUGbbT9" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGbbTa" role="1eOMHV">
                    <node concept="_YKpA" id="5XU7UUGbbTb" role="10QFUM">
                      <node concept="3uibUv" id="5XU7UUGbbTc" role="_ZDj9">
                        <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbbTd" role="10QFUP">
                      <node concept="37vLTw" id="5HxjapvTdrR" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbbSE" resolve="temporalBreakpointsField" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbbTf" role="2OqNvi">
                        <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                        <node concept="37vLTw" id="5XU7UUGbbTg" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGbbS8" resolve="temporalBreakpointCreatorMock" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1v1jN8" id="5XU7UUGbbTh" role="2OqNvi" />
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbbTi" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbbTj" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbbTk" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbbTl" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbbTm" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbbTn" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGbbTo" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTdIu" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbTj" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbTq" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbTr" role="1SL9yI">
      <property role="TrG5h" value="tryingToAddIllegalAddressBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGbbTs" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbTt" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbTv" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbTw" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbTx" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbTy" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbTz" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbT$" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbV8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbT_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbTA" role="3cpWs9">
            <property role="TrG5h" value="breakpointRegistryMock" />
            <node concept="3uibUv" id="5XU7UUGbbTB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbTC" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdOW" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbTE" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbTF" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbTG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbTH" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListenerMock" />
            <node concept="3uibUv" id="5XU7UUGbbTI" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbTJ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdxM" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbTL" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbTM" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbTN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbTO" role="3cpWs9">
            <property role="TrG5h" value="breakpointManagerMock" />
            <node concept="3uibUv" id="5XU7UUGbbTP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbTQ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZiI" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbTS" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbTT" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbTU" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbTV" role="3cpWs9">
            <property role="TrG5h" value="permanentBreakpointCreator" />
            <node concept="3uibUv" id="5XU7UUGbbTW" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbTX" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbTY" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbTZ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbU0" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbU1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbU2" role="3cpWs9">
            <property role="TrG5h" value="breakpointMapperMock" />
            <node concept="3uibUv" id="5XU7UUGbbU3" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbU4" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbbU5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbU6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbU7" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbU8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbU9" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbbUa" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbUb" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdte" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbUd" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbUe" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbUf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbUg" role="3cpWs9">
            <property role="TrG5h" value="temporalBreakpointCreatorMock" />
            <node concept="3uibUv" id="5XU7UUGbbUh" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbUi" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTemx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbTw" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbUk" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbUl" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbUm" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbbUn" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbUo" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbUp" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbUq" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbUr" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdw9" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbTO" resolve="breakpointManagerMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbUt" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                    <node concept="2YIFZM" id="5XU7UUGbbUu" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbUv" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbUw" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbbUx" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbUy" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbUz" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbU$" role="3cqZAp">
          <node concept="2OqwBi" id="7W4QWPK_x6R" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbU_" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbUA" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbUB" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZBI" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbU2" resolve="breakpointMapperMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbUD" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4GaJS" resolve="createAddressLocation" />
                    <node concept="2YIFZM" id="5XU7UUGbbUE" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbbUF" role="37wK5m">
                        <ref role="3VsUkX" to="xlxw:~BigInteger" resolve="BigInteger" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbUG" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGbbUH" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbUI" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~IllegalArgumentException.&lt;init&gt;()" resolve="IllegalArgumentException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7W4QWPK_x6W" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbUJ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbUK" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZ_q" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbU2" resolve="breakpointMapperMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbUM" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbUN" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdYe" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbTO" resolve="breakpointManagerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbUP" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbUQ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbUR" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbUS" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbUT" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbUU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbUg" resolve="temporalBreakpointCreatorMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbUV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3IzB1DMiEu1" resolve="addTemporalAddressBreakpoint" />
                <node concept="2ShNRf" id="5XU7UUGbbUW" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbUX" role="2ShVmc">
                    <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                    <node concept="Xl_RD" id="5XU7UUGbbUY" role="37wK5m">
                      <property role="Xl_RC" value="0" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbUZ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbV0" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbV1" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbV2" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTemZ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbUg" resolve="temporalBreakpointCreatorMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbV4" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3IzB1DMiEu1" resolve="addTemporalAddressBreakpoint" />
                <node concept="2ShNRf" id="5XU7UUGbbV5" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbbV6" role="2ShVmc">
                    <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                    <node concept="Xl_RD" id="5XU7UUGbbV7" role="37wK5m">
                      <property role="Xl_RC" value="-1" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbV8" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbbV9" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbVa" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbVb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbVc" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbVd" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbVe" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbbVf" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbbVg" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbbVh" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbbVi" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbbVj" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbbVk" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbbVl" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbbVm" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbbVn" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVo" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVp" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVq" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVr" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbVs" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbVt" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbVu" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVv" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVw" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVx" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVy" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbVz" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3snw" resolve="MBreakpointMappingManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbV$" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbV_" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVA" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVB" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVC" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbVD" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbVE" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVF" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVG" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVH" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVI" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbVJ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPK_NMa" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPK_NMb" role="3clFbG">
                            <node concept="3P9mCS" id="7W4QWPK_NMc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7W4QWPK_NMq" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPK_NMe" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="7W4QWPK_NMf" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbVK" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVL" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVM" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVN" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVO" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbVP" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbVQ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVR" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVS" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbVT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbVU" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbVV" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbVW" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbVX" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbVY" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbVZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbW0" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbW1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbW2" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbW3" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbW4" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbW5" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbW6" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbW7" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbW8" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbW9" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbWa" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="IFEsicePPv" role="3cqZAp">
                          <node concept="2OqwBi" id="IFEsiceRta" role="3clFbG">
                            <node concept="1rXfSq" id="IFEsicePPu" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="IFEsiceR4R" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7Hpw6GdRNYc" resolve="IDebugSessionConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="IFEsiceSP0" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="IFEsiceTch" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="IFEsiceWEK" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:7Hpw6GdRNYc" resolve="IDebugSessionConfiguration" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKusxV" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKusyX" role="3clFbG">
                            <node concept="2OqwBi" id="7W4QWPKusxW" role="2Oq$k0">
                              <node concept="3P9mCS" id="7W4QWPKusxX" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="7W4QWPKusyj" role="37wK5m">
                                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                                </node>
                              </node>
                              <node concept="liA8E" id="7W4QWPKusyr" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="7W4QWPKusyD" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="Xl_RD" id="7W4QWPKusyI" role="37wK5m">
                                    <property role="Xl_RC" value="timeout" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKusxZ" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="3cmrfG" id="7W4QWPKusz9" role="37wK5m">
                                <property role="3cmrfH" value="200" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbWb" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdO6" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbVc" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbWd">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="Mappings" />
    <node concept="2XrIbr" id="5XU7UUGbbWe" role="1qtyYc">
      <property role="TrG5h" value="createCBreakpoints" />
      <node concept="3clFbS" id="5XU7UUGbbWf" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbWg" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbWh" role="3cpWs9">
            <property role="TrG5h" value="breakpoints" />
            <node concept="_YKpA" id="5XU7UUGbbWi" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbWj" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbWk" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbbWl" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbbWm" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbbWn" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbbWo" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGbbWp" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbWq" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbbWr" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbWh" resolve="breakpoints" />
                </node>
                <node concept="TSZUe" id="5XU7UUGbbWs" role="2OqNvi">
                  <node concept="2YIFZM" id="5XU7UUGbbWt" role="25WWJ7">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbWu" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbbWv" role="1Duv9x">
            <property role="TrG5h" value="counter" />
            <node concept="10Oyi0" id="5XU7UUGbbWw" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbbWx" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbbWy" role="1Dwp0S">
            <node concept="3cmrfG" id="5XU7UUGbbWz" role="3uHU7w">
              <property role="3cmrfH" value="10" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZpf" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbbWv" resolve="counter" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbbW_" role="1Dwrff">
            <node concept="37vLTw" id="5XU7UUGbbWA" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbbWv" resolve="counter" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbWB" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdwf" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbWh" resolve="breakpoints" />
          </node>
        </node>
      </node>
      <node concept="_YKpA" id="5XU7UUGbbWD" role="3clF45">
        <node concept="3uibUv" id="5XU7UUGbbWE" role="_ZDj9">
          <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbWF" role="1qtyYc">
      <property role="TrG5h" value="createMPSBreakpoints" />
      <node concept="3clFbS" id="5XU7UUGbbWG" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbWH" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbWI" role="3cpWs9">
            <property role="TrG5h" value="breakpoints" />
            <node concept="_YKpA" id="5XU7UUGbbWJ" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbWK" role="_ZDj9">
                <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbWL" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbbWM" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbbWN" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbbWO" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbbWP" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGbbWQ" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbWR" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdS8" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbWI" resolve="breakpoints" />
                </node>
                <node concept="TSZUe" id="5XU7UUGbbWT" role="2OqNvi">
                  <node concept="2YIFZM" id="5XU7UUGbbWU" role="25WWJ7">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbWV" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbbWW" role="1Duv9x">
            <property role="TrG5h" value="counter" />
            <node concept="10Oyi0" id="5XU7UUGbbWX" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbbWY" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbbWZ" role="1Dwp0S">
            <node concept="3cmrfG" id="5XU7UUGbbX0" role="3uHU7w">
              <property role="3cmrfH" value="10" />
            </node>
            <node concept="37vLTw" id="5HxjapvTd$X" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbbWW" resolve="counter" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbbX2" role="1Dwrff">
            <node concept="37vLTw" id="5HxjapvQZsy" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbbWW" resolve="counter" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbX4" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZfd" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbWI" resolve="breakpoints" />
          </node>
        </node>
      </node>
      <node concept="_YKpA" id="5XU7UUGbbX6" role="3clF45">
        <node concept="3uibUv" id="5XU7UUGbbX7" role="_ZDj9">
          <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbX8" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3clFbS" id="5XU7UUGbbX9" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbXa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbXb" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbXc" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbXd" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbbXe" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbbXf" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbbXg" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbbXh" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbbXi" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbbXj" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbbXk" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbbXl" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbbXm" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbXn" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbXo" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbXp" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbXq" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbbXr" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3snw" resolve="MBreakpointMappingManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbXs" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZFR" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbXb" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGbbXu" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbXv" role="1SL9yI">
      <property role="TrG5h" value="addAndRemoveMapping" />
      <node concept="3cqZAl" id="5XU7UUGbbXw" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbXx" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbXy" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbXz" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbX$" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbX_" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbXA" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbXB" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbX8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbXC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbXD" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbbXE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbXF" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZmw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbXz" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbXH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbXI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbXJ" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbXK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbXL" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints1" />
            <node concept="_YKpA" id="5XU7UUGbbXM" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbXN" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbXO" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbXP" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbXQ" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3C$qtALCd73" role="3cqZAp">
          <node concept="3cpWsn" id="3C$qtALCd74" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints2" />
            <node concept="_YKpA" id="3C$qtALCd75" role="1tU5fm">
              <node concept="3uibUv" id="3C$qtALCd76" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="3C$qtALCd77" role="33vP2m">
              <node concept="2WthIp" id="3C$qtALCd78" role="2Oq$k0" />
              <node concept="2XshWL" id="3C$qtALCd79" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3C$qtALCd7c" role="3cqZAp">
          <node concept="3cpWsn" id="3C$qtALCd7d" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints3" />
            <node concept="_YKpA" id="3C$qtALCd7e" role="1tU5fm">
              <node concept="3uibUv" id="3C$qtALCd7f" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="3C$qtALCd7g" role="33vP2m">
              <node concept="2WthIp" id="3C$qtALCd7h" role="2Oq$k0" />
              <node concept="2XshWL" id="3C$qtALCd7i" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbXR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbXS" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbbXT" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbXU" role="_ZDj9">
                <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbXV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbXW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbXX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWF" resolve="createMPSBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbXY" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbbXZ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbY0" role="3vwVQn">
            <node concept="37vLTw" id="5XU7UUGbbY1" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbY2" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbY3" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbY4" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZv9" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbY6" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
              <node concept="37vLTw" id="5XU7UUGbbY8" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbXL" resolve="cBreakpoints1" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbYa" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdEJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbXS" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbbYc" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3C$qtALCd7k" role="3cqZAp" />
        <node concept="3vFxKo" id="5XU7UUGbbYd" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYe" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZHp" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYg" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbYh" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYi" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdwY" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYk" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZT" resolve="removeMapping" />
              <node concept="2OqwBi" id="5XU7UUGbbYl" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbbYm" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbXL" resolve="cBreakpoints1" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbbYn" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3C$qtALCd7l" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbbYo" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYp" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdT7" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYr" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbYs" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYt" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZf3" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYv" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
              <node concept="37vLTw" id="5HxjapvQZp2" role="37wK5m">
                <ref role="3cqZAo" node="3C$qtALCd74" resolve="cBreakpoints2" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbYz" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbbY$" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbXS" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbbY_" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3C$qtALCd7m" role="3cqZAp" />
        <node concept="3vFxKo" id="5XU7UUGbbYA" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYB" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvTdUN" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYD" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbYE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYF" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbbYG" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYH" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZF" resolve="removeMapping" />
              <node concept="2OqwBi" id="5XU7UUGbbYI" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbbYJ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbXS" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbbYK" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3C$qtALCd7n" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbbYL" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbYM" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdXO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbXD" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbYO" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbYP" role="1SL9yI">
      <property role="TrG5h" value="clearAfterAdding" />
      <node concept="3cqZAl" id="5XU7UUGbbYQ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbYR" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbYS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbYT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbYU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbYV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbYW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbYX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbX8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbYY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbYZ" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbbZ0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbZ1" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZFc" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbYT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbZ3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbZ4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbZ5" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbZ6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbZ7" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbbZ8" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbZ9" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbZa" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbZb" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbZc" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbZd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbZe" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbbZf" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbZg" role="_ZDj9">
                <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbZh" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbZi" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbZj" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWF" resolve="createMPSBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbZk" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbbZl" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbZm" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdM$" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbYZ" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbZo" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbZp" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbZq" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbbZr" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbYZ" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbZs" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
              <node concept="37vLTw" id="5HxjapvQZSJ" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbZ7" resolve="cBreakpoints" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbZw" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTejT" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbZe" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbbZy" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbbZz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbZ$" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZhN" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbYZ" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbZA" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbZB" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbZC" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZu1" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbYZ" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbZE" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GjdY" resolve="clear" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbZF" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbZG" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdA0" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbYZ" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbZI" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbZJ" role="1SL9yI">
      <property role="TrG5h" value="contains" />
      <node concept="3cqZAl" id="5XU7UUGbbZK" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbZL" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbZM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbZN" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbZO" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbZP" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbZQ" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbZR" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbX8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbZS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbZT" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbbZU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbZV" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdAs" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbZN" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbZX" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbbZY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbZZ" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbc00" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc01" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbc02" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbc03" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc04" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc05" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc06" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc07" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc08" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbc09" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbc0a" role="_ZDj9">
                <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc0b" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc0c" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc0d" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWF" resolve="createMPSBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc0e" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc0f" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0g" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbc0h" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0i" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
              <node concept="37vLTw" id="5HxjapvTd_i" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbc01" resolve="cBreakpoints" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbc0m" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGbc0n" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc08" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbc0o" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbc0p" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0q" role="3vwVQn">
            <node concept="37vLTw" id="5XU7UUGbc0r" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0s" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZp" resolve="contains" />
              <node concept="2OqwBi" id="5XU7UUGbc0t" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZEt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc08" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbc0v" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbc0w" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0x" role="3vwVQn">
            <node concept="37vLTw" id="5XU7UUGbc0y" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0z" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZ$" resolve="contains" />
              <node concept="2OqwBi" id="5XU7UUGbc0$" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZ43" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc01" resolve="cBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbc0A" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc0B" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0C" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbc0D" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0E" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GjdY" resolve="clear" />
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbc0F" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0G" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZBQ" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0I" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZ$" resolve="contains" />
              <node concept="2OqwBi" id="5XU7UUGbc0J" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdu_" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc01" resolve="cBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbc0L" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbc0M" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc0N" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbc0O" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbZT" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc0P" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GaZp" resolve="contains" />
              <node concept="2OqwBi" id="5XU7UUGbc0Q" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdMA" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc08" resolve="mpsBreakpoints" />
                </node>
                <node concept="1uHKPH" id="5XU7UUGbc0S" role="2OqNvi" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbc0T" role="1SL9yI">
      <property role="TrG5h" value="illegalArguments" />
      <node concept="3cqZAl" id="5XU7UUGbc0U" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc0V" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc0W" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc0X" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc0Y" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc0Z" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc10" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc11" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbX8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc12" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc13" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbc14" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc15" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZzH" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc0X" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc17" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc18" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc19" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbc1a" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc1b" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints" />
            <node concept="_YKpA" id="3C$qtALCd7R" role="1tU5fm">
              <node concept="3uibUv" id="3C$qtALCd7W" role="_ZDj9">
                <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
              </node>
            </node>
            <node concept="10Nm6u" id="5XU7UUGbc1d" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="3C$qtALCd80" role="3cqZAp">
          <node concept="3cpWsn" id="3C$qtALCd81" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoint" />
            <node concept="3uibUv" id="3C$qtALCd89" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
            </node>
            <node concept="10Nm6u" id="3C$qtALCd84" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc1e" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc1f" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGbc1g" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbc1h" role="33vP2m" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1i" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1j" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1k" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTd_N" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1m" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
                <node concept="37vLTw" id="5HxjapvQZsP" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc1b" resolve="cBreakpoints" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbc1o" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc1f" resolve="mpsBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1p" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1q" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1r" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1s" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbc1t" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1u" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaZ$" resolve="contains" />
                <node concept="37vLTw" id="5HxjapvQZKK" role="37wK5m">
                  <ref role="3cqZAo" node="3C$qtALCd81" resolve="cBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1w" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1x" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1y" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1z" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbc1$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaZp" resolve="contains" />
                <node concept="37vLTw" id="5HxjapvQZhL" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc1f" resolve="mpsBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1B" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1C" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1D" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1E" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdJw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1G" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4Gb0a" resolve="getMapping" />
                <node concept="37vLTw" id="5HxjapvQZxG" role="37wK5m">
                  <ref role="3cqZAo" node="3C$qtALCd81" resolve="cBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1I" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1J" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1K" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1L" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbc1M" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1N" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4Gb03" resolve="getMapping" />
                <node concept="37vLTw" id="5XU7UUGbc1O" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc1f" resolve="mpsBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1P" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1Q" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1R" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1S" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbc1T" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc1U" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaZF" resolve="removeMapping" />
                <node concept="37vLTw" id="5XU7UUGbc1V" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc1f" resolve="mpsBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc1W" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc1X" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbc1Y" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc1Z" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZaO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc13" resolve="mappingManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc21" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GaZT" resolve="removeMapping" />
                <node concept="37vLTw" id="5HxjapvTdW$" role="37wK5m">
                  <ref role="3cqZAo" node="3C$qtALCd81" resolve="cBreakpoint" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbc23" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbc24" role="1SL9yI">
      <property role="TrG5h" value="getMappingForUnknownBreakpoints" />
      <node concept="3cqZAl" id="5XU7UUGbc25" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc26" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc27" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc28" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbc29" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbc2a" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbc2b" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3nxOvgY3sny" resolve="MBreakpointMappingManagerImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3ykFI1" id="5XU7UUGbc2c" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc2d" role="3ykU8v">
            <node concept="37vLTw" id="5HxjapvTdtw" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc28" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc2f" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb03" resolve="getMapping" />
              <node concept="2YIFZM" id="5XU7UUGbc2g" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbc2h" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3ykFI1" id="5XU7UUGbc2i" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc2j" role="3ykU8v">
            <node concept="37vLTw" id="5XU7UUGbc2k" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc28" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc2l" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gb0a" resolve="getMapping" />
              <node concept="2YIFZM" id="5XU7UUGbc2m" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbc2n" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbc2o" role="1SL9yI">
      <property role="TrG5h" value="getMapping" />
      <node concept="3cqZAl" id="5XU7UUGbc2p" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc2q" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc2r" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc2s" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc2t" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc2u" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc2v" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc2w" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbX8" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc2x" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc2y" role="3cpWs9">
            <property role="TrG5h" value="mappingManager" />
            <node concept="3uibUv" id="5XU7UUGbc2z" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc2$" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeq1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc2s" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc2A" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc2B" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc2C" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc2D" role="3cpWs9">
            <property role="TrG5h" value="cBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbc2E" role="1tU5fm">
              <node concept="_YKpA" id="3C$qtALCd8m" role="_ZDj9">
                <node concept="3uibUv" id="3C$qtALCd8s" role="_ZDj9">
                  <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                </node>
              </node>
            </node>
            <node concept="2ShNRf" id="3C$qtALCd8$" role="33vP2m">
              <node concept="Tc6Ow" id="3C$qtALCelV" role="2ShVmc">
                <node concept="_YKpA" id="3C$qtALCemd" role="HW$YZ">
                  <node concept="3uibUv" id="3C$qtALCemh" role="_ZDj9">
                    <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="3C$qtALCemk" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbc2J" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc2K" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpoints" />
            <node concept="_YKpA" id="5XU7UUGbc2L" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbc2M" role="_ZDj9">
                <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc2N" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc2O" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc2P" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbWF" resolve="createMPSBreakpoints" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc2Q" role="3cqZAp" />
        <node concept="1Dw8fO" id="5XU7UUGbc2R" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbc2S" role="2LFqv$">
            <node concept="3cpWs8" id="3C$qtALCemR" role="3cqZAp">
              <node concept="3cpWsn" id="3C$qtALCemS" role="3cpWs9">
                <property role="TrG5h" value="createdBreakpoints" />
                <node concept="_YKpA" id="3C$qtALCemU" role="1tU5fm">
                  <node concept="3uibUv" id="3C$qtALCemW" role="_ZDj9">
                    <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
                <node concept="2OqwBi" id="5XU7UUGbc2G" role="33vP2m">
                  <node concept="2WthIp" id="5XU7UUGbc2H" role="2Oq$k0" />
                  <node concept="2XshWL" id="5XU7UUGbc2I" role="2OqNvi">
                    <ref role="2WH_rO" node="5XU7UUGbbWe" resolve="createCBreakpoints" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="3C$qtALCemo" role="3cqZAp">
              <node concept="2OqwBi" id="3C$qtALCemA" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZMY" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2D" resolve="cBreakpoints" />
                </node>
                <node concept="TSZUe" id="3C$qtALCemL" role="2OqNvi">
                  <node concept="37vLTw" id="3C$qtALCemY" role="25WWJ7">
                    <ref role="3cqZAo" node="3C$qtALCemS" resolve="createdBreakpoints" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbc2T" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbc2U" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZdj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc2W" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4Gb0i" resolve="addMapping" />
                  <node concept="37vLTw" id="5HxjapvQZ9X" role="37wK5m">
                    <ref role="3cqZAo" node="3C$qtALCemS" resolve="createdBreakpoints" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbc31" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZLF" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
                    </node>
                    <node concept="34jXtK" id="5XU7UUGbc33" role="2OqNvi">
                      <node concept="37vLTw" id="5HxjapvTep9" role="25WWJ7">
                        <ref role="3cqZAo" node="5XU7UUGbc35" resolve="index" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbc35" role="1Duv9x">
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="5XU7UUGbc36" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbc37" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbc39" role="1Dwp0S">
            <node concept="2OqwBi" id="5XU7UUGbc3a" role="3uHU7w">
              <node concept="37vLTw" id="5HxjapvTdJa" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
              </node>
              <node concept="34oBXx" id="5XU7UUGbc3c" role="2OqNvi" />
            </node>
            <node concept="37vLTw" id="5XU7UUGbc3d" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbc35" resolve="index" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbc3j" role="1Dwrff">
            <node concept="37vLTw" id="5HxjapvTdTb" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbc35" resolve="index" />
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbc3l" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbc3m" role="2LFqv$">
            <node concept="3cpWs8" id="4jk7wJvvDQA" role="3cqZAp">
              <node concept="3cpWsn" id="4jk7wJvvDQB" role="3cpWs9">
                <property role="TrG5h" value="listAtIndex" />
                <node concept="_YKpA" id="4jk7wJvvDPR" role="1tU5fm">
                  <node concept="3uibUv" id="4jk7wJvvDPU" role="_ZDj9">
                    <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
                  </node>
                </node>
                <node concept="2OqwBi" id="4jk7wJvvDQC" role="33vP2m">
                  <node concept="37vLTw" id="4jk7wJvvDQD" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbc2D" resolve="cBreakpoints" />
                  </node>
                  <node concept="34jXtK" id="4jk7wJvvDQE" role="2OqNvi">
                    <node concept="37vLTw" id="4jk7wJvvDQF" role="25WWJ7">
                      <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGbc3n" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbc3o" role="3vwVQn">
                <node concept="37vLTw" id="5HxjapvTdOf" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc3q" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4GaZ$" resolve="contains" />
                  <node concept="2OqwBi" id="4jk7wJvvEHC" role="37wK5m">
                    <node concept="37vLTw" id="4jk7wJvvDQG" role="2Oq$k0">
                      <ref role="3cqZAo" node="4jk7wJvvDQB" resolve="listAtIndex" />
                    </node>
                    <node concept="1uHKPH" id="4jk7wJvvFDU" role="2OqNvi" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGbc3v" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbc3w" role="3vwVQn">
                <node concept="37vLTw" id="5HxjapvTdK5" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc3y" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4GaZp" resolve="contains" />
                  <node concept="2OqwBi" id="5XU7UUGbc3z" role="37wK5m">
                    <node concept="37vLTw" id="5XU7UUGbc3$" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
                    </node>
                    <node concept="34jXtK" id="5XU7UUGbc3_" role="2OqNvi">
                      <node concept="37vLTw" id="5XU7UUGbc3A" role="25WWJ7">
                        <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vMLTj" id="5XU7UUGbc3B" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbc3C" role="3tpDZB">
                <node concept="37vLTw" id="5HxjapvTe2N" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2D" resolve="cBreakpoints" />
                </node>
                <node concept="34jXtK" id="5XU7UUGbc3E" role="2OqNvi">
                  <node concept="37vLTw" id="5XU7UUGbc3F" role="25WWJ7">
                    <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
                  </node>
                </node>
              </node>
              <node concept="2OqwBi" id="5XU7UUGbc3G" role="3tpDZA">
                <node concept="37vLTw" id="5HxjapvQZBG" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc3I" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4Gb03" resolve="getMapping" />
                  <node concept="2OqwBi" id="5XU7UUGbc3J" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZiU" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
                    </node>
                    <node concept="34jXtK" id="5XU7UUGbc3L" role="2OqNvi">
                      <node concept="37vLTw" id="5HxjapvQZpx" role="25WWJ7">
                        <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3vMLTj" id="5XU7UUGbc3N" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbc3O" role="3tpDZB">
                <node concept="37vLTw" id="5HxjapvTdB5" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
                </node>
                <node concept="34jXtK" id="5XU7UUGbc3Q" role="2OqNvi">
                  <node concept="37vLTw" id="5HxjapvQZBl" role="25WWJ7">
                    <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
                  </node>
                </node>
              </node>
              <node concept="2OqwBi" id="5XU7UUGbc3S" role="3tpDZA">
                <node concept="37vLTw" id="5HxjapvTdta" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
                </node>
                <node concept="liA8E" id="5XU7UUGbc3U" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4Gb0a" resolve="getMapping" />
                  <node concept="2OqwBi" id="4jk7wJvvLOF" role="37wK5m">
                    <node concept="37vLTw" id="4jk7wJvvLOG" role="2Oq$k0">
                      <ref role="3cqZAo" node="4jk7wJvvDQB" resolve="listAtIndex" />
                    </node>
                    <node concept="1uHKPH" id="4jk7wJvvLOH" role="2OqNvi" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbc3Z" role="1Duv9x">
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="5XU7UUGbc40" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbc41" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbc43" role="1Dwp0S">
            <node concept="2OqwBi" id="5XU7UUGbc44" role="3uHU7w">
              <node concept="37vLTw" id="5XU7UUGbc45" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc2K" resolve="mpsBreakpoints" />
              </node>
              <node concept="34oBXx" id="5XU7UUGbc46" role="2OqNvi" />
            </node>
            <node concept="37vLTw" id="5XU7UUGbc47" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbc4d" role="1Dwrff">
            <node concept="37vLTw" id="5HxjapvQZQi" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbc3Z" resolve="index" />
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbc4f" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc4g" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvTemp" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc4i" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc4j" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc4k" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZPf" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc4m" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GjdY" resolve="clear" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbc4n" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc4o" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvQZgZ" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc2y" resolve="mappingManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc4q" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4Gje2" resolve="isEmpty" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbc4r">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MSession" />
    <node concept="1LZb2c" id="5XU7UUGbc4s" role="1SL9yI">
      <property role="TrG5h" value="normalCallOfAllOperations" />
      <node concept="3cqZAl" id="5XU7UUGbc4t" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc4u" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc4v" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc4w" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc4x" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc4y" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc4z" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc4$" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbc8k" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc4_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc4A" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="5XU7UUGbc4B" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc4C" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeoX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc4w" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc4E" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc4F" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc4G" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc4H" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbc4I" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc4J" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ8m" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc4w" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc4L" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc4M" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc4N" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc4O" role="3cpWs9">
            <property role="TrG5h" value="wSession" />
            <node concept="3uibUv" id="5XU7UUGbc4P" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc4Q" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZhV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc4w" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc4S" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc4T" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc4U" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc4V" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc4W" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZxk" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4O" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc4Y" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc4Z" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc50" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdMi" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4O" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc52" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc53" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc54" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTejq" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4O" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc56" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcn$" resolve="stop" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc57" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc58" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc59" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTe2H" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc4H" resolve="eventManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc5b" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc5c" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZJf" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc4O" resolve="wSession" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc5e" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc5f" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc5g" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdUb" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4A" resolve="mSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc5i" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagW" resolve="pause" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc5j" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc5k" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZqe" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4A" resolve="mSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc5m" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc5n" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc5o" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZgH" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc4A" resolve="mSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc5q" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbc5r" role="1SL9yI">
      <property role="TrG5h" value="handlingExceptionsFromWrapperDuringCall" />
      <node concept="3cqZAl" id="5XU7UUGbc5s" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc5t" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc5u" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc5v" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc5w" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc5x" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc5y" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc5z" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbc8k" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc5$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc5_" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="5XU7UUGbc5A" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc5B" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTelG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5v" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc5D" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc5E" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc5F" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc5G" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbc5H" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc5I" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZA7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5v" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc5K" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc5L" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc5M" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc5N" role="3cpWs9">
            <property role="TrG5h" value="wSession" />
            <node concept="3uibUv" id="5XU7UUGbc5O" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc5P" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdJN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5v" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc5R" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc5S" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc5T" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc5U" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc5V" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZBd" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc5N" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc5X" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc5Y" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc5Z" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc60" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc61" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="5XU7UUGbc62" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbc63" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc64" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc65" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ$f" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc5N" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc67" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc68" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc69" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc6a" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc6b" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="5XU7UUGbc6c" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbc6d" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc6e" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc6f" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ6x" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc5N" resolve="wSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc6h" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcn$" resolve="stop" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc6i" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc6j" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc6k" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc6l" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2YIFZM" id="5XU7UUGbc6m" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbc6n" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc6o" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc6p" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc6q" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdE5" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc5G" resolve="eventManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc6s" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc6t" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdOv" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc5N" resolve="wSession" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc6v" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbc6w" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbc6x" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbc6y" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc6z" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdN1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5_" resolve="mSession" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc6_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagW" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc6A" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbc6B" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbc6C" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc6D" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTd$7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5_" resolve="mSession" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc6F" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbc6G" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbc6H" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2fjdrD4GamC" resolve="MControllingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbc6I" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbc6J" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdti" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc5_" resolve="mSession" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc6L" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbc6M" role="1SL9yI">
      <property role="TrG5h" value="forwardingEvents" />
      <node concept="3cqZAl" id="5XU7UUGbc6N" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbc6O" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc6P" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc6Q" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc6R" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc6S" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbc6T" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbc6U" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbc8k" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc6V" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc6W" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="5XU7UUGbc6X" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc6Y" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZzJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc6Q" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc70" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc71" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc72" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc73" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbc74" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc75" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdQF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc6Q" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc77" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc78" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc79" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc7a" role="3cpWs9">
            <property role="TrG5h" value="wSession" />
            <node concept="3uibUv" id="5XU7UUGbc7b" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc7c" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdA2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc6Q" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc7e" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc7f" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc7g" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc7h" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListener" />
            <node concept="3uibUv" id="5XU7UUGbc7i" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc7j" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdEg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc6Q" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc7l" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbc7m" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc7n" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc7o" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7p" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTejF" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc73" resolve="eventManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc7r" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5VDJ7ZM5CIb" resolve="debuggerDetached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc7s" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7t" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc7u" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc7v" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="5XU7UUGbc7w" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc7x" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7y" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTepZ" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc73" resolve="eventManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc7$" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5F7D2hC7cvj" resolve="unrecoverableErrorOccured" />
              <node concept="2YIFZM" id="5XU7UUGbc7_" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.isNull(java.lang.Class):java.lang.Object" resolve="isNull" />
                <node concept="3VsKOn" id="5XU7UUGbc7A" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~Exception" resolve="Exception" />
                </node>
              </node>
              <node concept="2YIFZM" id="5XU7UUGbc7B" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="5XU7UUGbc7C" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc7D" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7E" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZI9" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc73" resolve="eventManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc7G" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5VDJ7ZM5CIt" resolve="recoverableErrorOccured" />
              <node concept="2YIFZM" id="5XU7UUGbc7H" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.isNull(java.lang.Class):java.lang.Object" resolve="isNull" />
                <node concept="3VsKOn" id="5XU7UUGbc7I" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~Exception" resolve="Exception" />
                </node>
              </node>
              <node concept="2YIFZM" id="5XU7UUGbc7J" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="5XU7UUGbc7K" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc7L" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7M" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbc7N" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc7O" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="5XU7UUGbc7P" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc7Q" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc7R" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc7S" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbc7T" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc73" resolve="eventManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc7U" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbc7V" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGbc7W" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc7a" resolve="wSession" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbc7X" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbc7Y" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc7Z" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbc80" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc7h" resolve="wrapperEventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc81" role="2OqNvi">
              <ref role="37wK5l" to="x30c:1u0UIMzpujI" resolve="attached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc82" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc83" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbc84" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc7h" resolve="wrapperEventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc85" role="2OqNvi">
              <ref role="37wK5l" to="x30c:1u0UIMzpuk0" resolve="detached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc86" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc87" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZlk" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc7h" resolve="wrapperEventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc89" role="2OqNvi">
              <ref role="37wK5l" to="x30c:1u0UIMzpujS" resolve="suspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc8a" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc8b" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbc8c" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc7h" resolve="wrapperEventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc8d" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5F7D2hC7gBD" resolve="recoverableErrorOccured" />
              <node concept="Xl_RD" id="5XU7UUGbc8e" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc8f" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc8g" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZi1" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc7h" resolve="wrapperEventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc8i" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5F7D2hC7gBM" resolve="unrecoverableErrorOccured" />
              <node concept="Xl_RD" id="5XU7UUGbc8j" role="37wK5m">
                <property role="Xl_RC" value="" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbc8k" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbc8l" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbc8m" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc8n" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc8o" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbc8p" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbc8q" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbc8r" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbc8s" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbc8t" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbc8u" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbc8v" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbc8w" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbc8x" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbc8y" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbc8z" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbc8$" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbc8_" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbc8A" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbc8B" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbc8C" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GajB" resolve="MSessionImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbc8D" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbc8E" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbc8F" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbc8G" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbc8H" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbc8I" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GajB" resolve="MSessionImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbc8J" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbc8K" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbc8L" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbc8M" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbc8N" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbc8O" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbc8P" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbc8Q" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbc8R" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbc8S" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbc8T" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbc8U" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbc8V" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbc8W" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5$115fpQEYZ" role="3cqZAp">
                          <node concept="2OqwBi" id="5$115fpQEZ0" role="3clFbG">
                            <node concept="3P9mCS" id="5$115fpQEZ1" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5$115fpQEZs" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5$115fpQEZ3" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5$115fpQEZ4" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5$115fpQEZi" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbc8X" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbc8Y" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbc8Z" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbc90" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbc91" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbc92" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbc93" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="IFEsicf0e_" role="3cqZAp">
                          <node concept="2OqwBi" id="IFEsicf0eA" role="3clFbG">
                            <node concept="1rXfSq" id="IFEsicf0eB" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="IFEsicf33S" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7Hpw6GdRNYz" resolve="IInitializableDebugSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="IFEsicf0eD" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="IFEsicf0eE" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="IFEsicf1Z2" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:7Hpw6GdRNYz" resolve="IInitializableDebugSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbc94" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbc95" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbc8o" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbccz">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MCategoryRegistry" />
    <node concept="1LZb2c" id="5XU7UUGbcc$" role="1SL9yI">
      <property role="TrG5h" value="insertNewCategory" />
      <node concept="3cqZAl" id="5XU7UUGbcc_" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbccA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbccB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbccC" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbccD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4F7MaHWZAvw" resolve="IMCategoryRegistry" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbccE" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbccF" role="2ShVmc">
                <ref role="37wK5l" to="x30c:4F7MaHWZUl8" resolve="MCategoryRegistryImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbccG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbccH" role="3cpWs9">
            <property role="TrG5h" value="categoryName" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="5XU7UUGbccI" role="1tU5fm" />
            <node concept="Xl_RD" id="5XU7UUGbccJ" role="33vP2m">
              <property role="Xl_RC" value="some category" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbccK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbccL" role="3cpWs9">
            <property role="TrG5h" value="createdCategory" />
            <node concept="3uibUv" id="5XU7UUGbccM" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJhM" resolve="WatchablesCategory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbccN" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZu$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbccC" resolve="registry" />
              </node>
              <node concept="liA8E" id="5XU7UUGbccP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4F7MaHWZRES" resolve="getCategory" />
                <node concept="37vLTw" id="5HxjapvQZOv" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbccH" resolve="categoryName" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbccR" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdI8" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGbccL" resolve="createdCategory" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbccT" role="1SL9yI">
      <property role="TrG5h" value="testForEquality" />
      <node concept="3cqZAl" id="5XU7UUGbccU" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbccV" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbccW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbccX" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbccY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4F7MaHWZAvw" resolve="IMCategoryRegistry" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbccZ" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbcd0" role="2ShVmc">
                <ref role="37wK5l" to="x30c:4F7MaHWZUl8" resolve="MCategoryRegistryImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcd1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcd2" role="3cpWs9">
            <property role="TrG5h" value="categoryName" />
            <property role="3TUv4t" value="true" />
            <node concept="17QB3L" id="5XU7UUGbcd3" role="1tU5fm" />
            <node concept="Xl_RD" id="5XU7UUGbcd4" role="33vP2m">
              <property role="Xl_RC" value="some category" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcd5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcd6" role="3cpWs9">
            <property role="TrG5h" value="createdCategory" />
            <node concept="3uibUv" id="5XU7UUGbcd7" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJhM" resolve="WatchablesCategory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcd8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdEb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbccX" resolve="registry" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcda" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4F7MaHWZRES" resolve="getCategory" />
                <node concept="37vLTw" id="5XU7UUGbcdb" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcd2" resolve="categoryName" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vMLTj" id="5XU7UUGbcdc" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdXS" role="3tpDZB">
            <ref role="3cqZAo" node="5XU7UUGbcd6" resolve="createdCategory" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcde" role="3tpDZA">
            <node concept="37vLTw" id="5XU7UUGbcdf" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbccX" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcdg" role="2OqNvi">
              <ref role="37wK5l" to="x30c:4F7MaHWZRES" resolve="getCategory" />
              <node concept="37vLTw" id="5HxjapvTdPS" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbcd2" resolve="categoryName" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbcdi">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MFrameMapper" />
    <node concept="2XrIbr" id="5XU7UUGbcdj" role="1qtyYc">
      <property role="TrG5h" value="createCStackFrames" />
      <node concept="3clFbS" id="5XU7UUGbcdk" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcdl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcdm" role="3cpWs9">
            <property role="TrG5h" value="stackFrame" />
            <node concept="3uibUv" id="5XU7UUGbcdn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcdo" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbcdp" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcdq" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcdr" role="3cpWs9">
            <property role="TrG5h" value="argument" />
            <node concept="3uibUv" id="5XU7UUGbcds" role="1tU5fm">
              <ref role="3uigEE" to="x30c:35BAyTmXoAX" resolve="WVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcdt" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbcdu" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXoAX" resolve="WVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcdv" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcdw" role="3cpWs9">
            <property role="TrG5h" value="localVariable" />
            <node concept="3uibUv" id="5XU7UUGbcdx" role="1tU5fm">
              <ref role="3uigEE" to="x30c:35BAyTmXoAX" resolve="WVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcdy" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbcdz" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmXoAX" resolve="WVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcd$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcd_" role="3cpWs9">
            <property role="TrG5h" value="arguments" />
            <node concept="_YKpA" id="5XU7UUGbcdA" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbcdB" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcdC" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbcdD" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbcdE" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcdF" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbcdG" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcdH" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcdI" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcdJ" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbcdK" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZvr" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcdM" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3mhW1SHpSWI" resolve="fileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcdN" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cpWs3" id="28Ru$KWu9gJ" role="37wK5m">
                  <node concept="Xl_RD" id="28Ru$KWu9_4" role="3uHU7w">
                    <property role="Xl_RC" value="Main.c" />
                  </node>
                  <node concept="3cpWs3" id="28Ru$KWu8u$" role="3uHU7B">
                    <node concept="3cpWs3" id="28Ru$KWwT6k" role="3uHU7B">
                      <node concept="Xl_RD" id="28Ru$KWwTqb" role="3uHU7w">
                        <property role="Xl_RC" value="dummy" />
                      </node>
                      <node concept="3cpWs3" id="28Ru$KWwRGE" role="3uHU7B">
                        <node concept="3cpWs3" id="28Ru$KWu7PM" role="3uHU7B">
                          <node concept="10M0yZ" id="28Ru$KWu7Yw" role="3uHU7B">
                            <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                            <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                          </node>
                          <node concept="Xl_RD" id="5XU7UUGbcdO" role="3uHU7w">
                            <property role="Xl_RC" value="source_gen" />
                          </node>
                        </node>
                        <node concept="10M0yZ" id="28Ru$KWwRQU" role="3uHU7w">
                          <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                          <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                        </node>
                      </node>
                    </node>
                    <node concept="10M0yZ" id="28Ru$KWu8GC" role="3uHU7w">
                      <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                      <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcdP" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcdQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcdR" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcdS" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcdT" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbcdU" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbcdV" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcdW" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3mhW1SHpSWE" resolve="lineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcdX" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGbcdY" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcdZ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbce0" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbce1" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbce2" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbce3" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbce4" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZsJ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbce6" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3mhW1SHpSWO" resolve="routineName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbce7" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbce8" role="37wK5m">
                  <property role="Xl_RC" value="main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbce9" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcea" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbceb" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcec" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbced" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbcee" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbcef" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbceg" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6EW69Px1jMR" resolve="getCallStackIndex" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbceh" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGbcei" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcej" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcek" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcel" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdRm" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcd_" resolve="arguments" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbcen" role="2OqNvi">
              <node concept="37vLTw" id="5HxjapvQZx9" role="25WWJ7">
                <ref role="3cqZAo" node="5XU7UUGbcdr" resolve="argument" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcep" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbceq" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbcer" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbces" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbcet" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbceu" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcev" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2RztF939XU_" resolve="getArguments" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcew" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdyK" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcd_" resolve="arguments" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcey" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcez" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbce$" role="3cpWs9">
            <property role="TrG5h" value="localVariables" />
            <node concept="_YKpA" id="5XU7UUGbce_" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbceA" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbceB" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbceC" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbceD" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbceE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbceF" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbceG" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbce$" resolve="localVariables" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbceH" role="2OqNvi">
              <node concept="37vLTw" id="5XU7UUGbceI" role="25WWJ7">
                <ref role="3cqZAo" node="5XU7UUGbcdw" resolve="localVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbceJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbceK" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbceL" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbceM" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbceN" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZxs" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbceP" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2RztF939XUx" resolve="getLocalVariables" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbceQ" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvQZqN" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbce$" resolve="localVariables" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbceS" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbceT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbceU" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="_YKpA" id="5XU7UUGbceV" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbceW" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbceX" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbceY" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbceZ" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbcf0" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcf1" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGbcf2" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcf3" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdDO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbceU" resolve="stackFrames" />
                </node>
                <node concept="TSZUe" id="5XU7UUGbcf5" role="2OqNvi">
                  <node concept="37vLTw" id="5XU7UUGbcf6" role="25WWJ7">
                    <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbcf7" role="1Duv9x">
            <property role="TrG5h" value="numberOfStackFrames" />
            <node concept="10Oyi0" id="5XU7UUGbcf8" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbcf9" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbcfa" role="1Dwp0S">
            <node concept="37vLTw" id="5XU7UUGbcfb" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGbcfs" resolve="amount" />
            </node>
            <node concept="37vLTw" id="5HxjapvTdCr" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbcf7" resolve="numberOfStackFrames" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbcfd" role="1Dwrff">
            <node concept="37vLTw" id="5XU7UUGbcfe" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbcf7" resolve="numberOfStackFrames" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcff" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbcfg" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcfh" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbcfi" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbcdm" resolve="stackFrame" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcfj" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcfk" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTepD" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbcdr" resolve="argument" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcfm" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcfn" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZbW" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbcdw" resolve="localVariable" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcfp" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbcfq" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbcfr" role="3clFbG">
            <ref role="3cqZAo" node="5XU7UUGbceU" resolve="stackFrames" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcfs" role="3clF46">
        <property role="TrG5h" value="amount" />
        <node concept="10Oyi0" id="5XU7UUGbcft" role="1tU5fm" />
      </node>
      <node concept="_YKpA" id="5XU7UUGbcfu" role="3clF45">
        <node concept="3uibUv" id="5XU7UUGbcfv" role="_ZDj9">
          <ref role="3uigEE" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbcfw" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbcfx" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcfy" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJvYfb_" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvYfbA" role="3cpWs9">
            <property role="TrG5h" value="strategyConfiguration" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="4jk7wJvYfb$" role="1tU5fm">
              <ref role="3uigEE" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvYfbB" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="4jk7wJvYfbC" role="37wK5m">
                <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="4jk7wJvYwLr" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvYwLs" role="3cpWs9">
            <property role="TrG5h" value="model" />
            <node concept="3uibUv" id="4jk7wJvYwLt" role="1tU5fm">
              <ref role="3uigEE" to="mhbf:~SModel" resolve="SModel" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvYyu9" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="4jk7wJvYyBm" role="37wK5m">
                <ref role="3VsUkX" to="mhbf:~SModel" resolve="SModel" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="4jk7wJvY$j$" role="3cqZAp">
          <node concept="2OqwBi" id="4jk7wJw2rWi" role="3clFbG">
            <node concept="2OqwBi" id="4jk7wJvYAn2" role="2Oq$k0">
              <node concept="2YIFZM" id="4jk7wJvY_Wz" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="4jk7wJvYA6Y" role="37wK5m">
                  <node concept="37vLTw" id="4jk7wJvYA58" role="2Oq$k0">
                    <ref role="3cqZAo" node="4jk7wJvYwLs" resolve="model" />
                  </node>
                  <node concept="liA8E" id="4jk7wJvYAkr" role="2OqNvi">
                    <ref role="37wK5l" to="mhbf:~SModel.getModelName():java.lang.String" resolve="getModelName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="4jk7wJvYAMO" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="4jk7wJvYAWF" role="37wK5m">
                  <property role="Xl_RC" value="bla" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="4jk7wJw2t6G" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="4jk7wJvYsV$" role="3cqZAp">
          <node concept="2OqwBi" id="4jk7wJw2tkB" role="3clFbG">
            <node concept="2OqwBi" id="4jk7wJvYu_8" role="2Oq$k0">
              <node concept="2YIFZM" id="4jk7wJvYugC" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="4jk7wJvYql4" role="37wK5m">
                  <node concept="37vLTw" id="4jk7wJvYptU" role="2Oq$k0">
                    <ref role="3cqZAo" node="4jk7wJvYfbA" resolve="strategyConfiguration" />
                  </node>
                  <node concept="liA8E" id="4jk7wJvYrlp" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:77eI44NlkE3" resolve="getModel" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="4jk7wJvYuY9" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="4jk7wJvYB9$" role="37wK5m">
                  <ref role="3cqZAo" node="4jk7wJvYwLs" resolve="model" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="4jk7wJw2AX2" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="4jk7wJvYptW" role="3cqZAp">
          <node concept="2YIFZM" id="4jk7wJvYBkr" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="4jk7wJvYBvA" role="37wK5m">
              <ref role="3cqZAo" node="4jk7wJvYfbA" resolve="strategyConfiguration" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="4jk7wJvYBxt" role="3cqZAp">
          <node concept="2YIFZM" id="4jk7wJvYBxu" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="4jk7wJvYDiO" role="37wK5m">
              <ref role="3cqZAo" node="4jk7wJvYwLs" resolve="model" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcfz" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcf$" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcf_" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcfA" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbcfB" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbcfC" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbcfD" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbcfE" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbcfF" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbcfG" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbcfH" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbcfI" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbcfJ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcfK" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcfL" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcfM" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcfN" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbcfO" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcfP" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcfQ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcfR" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcfS" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcfT" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcfU" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbcfV" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVst" resolve="TracingWrapperImpl" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcfW" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcfX" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcfY" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcfZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0FadA0r" resolve="IMModelNeedRebuildChecker" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcg0" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcg1" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbcg2" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3gwY0FadA0r" resolve="IMModelNeedRebuildChecker" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcg3" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcg4" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcg5" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcg6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcg7" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4jk7wJvYfbD" role="37wK5m">
                                <ref role="3cqZAo" node="4jk7wJvYfbA" resolve="strategyConfiguration" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcga" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbcgb" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcf$" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcgc" role="1SL9yI">
      <property role="TrG5h" value="frameMappingForEmptyStack" />
      <node concept="3cqZAl" id="5XU7UUGbcgd" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcge" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcgf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcgg" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcgh" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcgi" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcgj" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcgk" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcfw" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcgl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcgm" role="3cpWs9">
            <property role="TrG5h" value="debugApiWrapper" />
            <node concept="3uibUv" id="5XU7UUGbcgn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcgo" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZyj" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcgg" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcgq" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcgr" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcgs" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcgt" role="3cpWs9">
            <property role="TrG5h" value="frameMapper" />
            <node concept="3uibUv" id="5XU7UUGbcgu" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcgv" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZA9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcgg" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcgx" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcgy" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcgz" role="3cqZAp" />
        <node concept="SfApY" id="5XU7UUGbcg$" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcg_" role="SfCbr">
            <node concept="3vwNmj" id="5XU7UUGbcgA" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcgB" role="3vwVQn">
                <node concept="2OqwBi" id="5XU7UUGbcgC" role="2Oq$k0">
                  <node concept="37vLTw" id="5HxjapvQZq$" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcgt" resolve="frameMapper" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcgE" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6Zad41Tribu" resolve="constructFrameMappings" />
                    <node concept="2ShNRf" id="5XU7UUGbcgF" role="37wK5m">
                      <node concept="Tc6Ow" id="5XU7UUGbcgG" role="2ShVmc">
                        <node concept="3uibUv" id="5XU7UUGbcgH" role="HW$YZ">
                          <ref role="3uigEE" to="x30c:3mhW1SHpSWC" resolve="IWStackFrame" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1v1jN8" id="5XU7UUGbcgI" role="2OqNvi" />
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcgJ" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcgK" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcgL" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcgM" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcgN" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcgO" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGbcgP" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGbcgQ" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcgK" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcgR" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcgS" role="1SL9yI">
      <property role="TrG5h" value="frameMappingWithMissingTraces" />
      <node concept="3cqZAl" id="5XU7UUGbcgT" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcgU" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcgV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcgW" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcgX" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcgY" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcgZ" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbch0" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcfw" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbch1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbch2" role="3cpWs9">
            <property role="TrG5h" value="debugApiWrapper" />
            <node concept="3uibUv" id="5XU7UUGbch3" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbch4" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZqi" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcgW" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbch6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbch7" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbch8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbch9" role="3cpWs9">
            <property role="TrG5h" value="frameMapper" />
            <node concept="3uibUv" id="5XU7UUGbcha" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbchb" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbchc" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcgW" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbchd" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbche" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="4jk7wJvTd5a" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbchg" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbchh" role="3cpWs9">
            <property role="TrG5h" value="traceableNodes" />
            <node concept="_YKpA" id="5XU7UUGbchi" role="1tU5fm">
              <node concept="3uibUv" id="7R8D1VYMlKc" role="_ZDj9">
                <ref role="3uigEE" to="x30c:42zGBUYgAW7" resolve="ITracingWrapper.NodeWithTrace" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbchk" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbchl" role="2ShVmc">
                <node concept="3uibUv" id="7R8D1VYMlKd" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:42zGBUYgAW7" resolve="ITracingWrapper.NodeWithTrace" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbchn" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcho" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbchp" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbchq" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbchr" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbchs" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbch2" resolve="debugApiWrapper" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcht" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6uBdxghiz8f" resolve="getTraceableNodesWithTraces" />
                    <node concept="2YIFZM" id="5XU7UUGbchu" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="5XU7UUGbchv" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbchw" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGbchx" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbchy" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyInt():int" resolve="anyInt" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbchz" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTenL" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbchh" resolve="traceableNodes" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbch_" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="4jk7wJvtZnr" role="3cqZAp">
          <node concept="3clFbS" id="4jk7wJvtZnt" role="SfCbr">
            <node concept="3vwNmj" id="2RIdqIA$Xd2" role="3cqZAp">
              <node concept="2OqwBi" id="2RIdqIA$Vmv" role="3vwVQn">
                <node concept="2OqwBi" id="5XU7UUGbchF" role="2Oq$k0">
                  <node concept="37vLTw" id="5XU7UUGbchG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbch9" resolve="frameMapper" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbchH" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:6Zad41Tribu" resolve="constructFrameMappings" />
                    <node concept="2OqwBi" id="5XU7UUGbchI" role="37wK5m">
                      <node concept="2WthIp" id="5XU7UUGbchJ" role="2Oq$k0" />
                      <node concept="2XshWL" id="5XU7UUGbchK" role="2OqNvi">
                        <ref role="2WH_rO" node="5XU7UUGbcdj" resolve="createCStackFrames" />
                        <node concept="3cmrfG" id="5XU7UUGbchL" role="2XxRq1">
                          <property role="3cmrfH" value="1" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="1v1jN8" id="2RIdqIA$Wrj" role="2OqNvi" />
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="4jk7wJvtZnu" role="TEbGg">
            <node concept="3cpWsn" id="4jk7wJvtZnw" role="TDEfY">
              <property role="TrG5h" value="c" />
              <node concept="3uibUv" id="4jk7wJvtZJr" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~CloneNotSupportedException" resolve="CloneNotSupportedException" />
              </node>
            </node>
            <node concept="3clFbS" id="4jk7wJvtZn$" role="TDEfX">
              <node concept="3vwNmj" id="2RIdqIABjSp" role="3cqZAp">
                <node concept="3clFbT" id="2RIdqIABjTy" role="3vwVQn" />
                <node concept="3_1$Yv" id="2RIdqIABk1g" role="3_9lra">
                  <node concept="2OqwBi" id="2RIdqIABk1L" role="3_1BAH">
                    <node concept="37vLTw" id="2RIdqIABk1M" role="2Oq$k0">
                      <ref role="3cqZAo" node="4jk7wJvtZnw" resolve="c" />
                    </node>
                    <node concept="liA8E" id="2RIdqIABk1N" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbchV" role="1SL9yI">
      <property role="TrG5h" value="unitName" />
      <node concept="3cqZAl" id="5XU7UUGbchW" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbchX" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbchY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbchZ" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbci0" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbci1" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbci2" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbci3" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcfw" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbci4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbci5" role="3cpWs9">
            <property role="TrG5h" value="debugApiWrapper" />
            <node concept="3uibUv" id="5XU7UUGbci6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbci7" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdLw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbchZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbci9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcia" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcib" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcic" role="3cpWs9">
            <property role="TrG5h" value="frameMapper" />
            <node concept="3uibUv" id="5XU7UUGbcid" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcie" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdvl" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbchZ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcig" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcih" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="28Ru$KWrfaW" role="3cqZAp" />
        <node concept="3vlDli" id="5XU7UUGbcij" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcik" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGbcil" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGbcim" role="1eOMHV">
                <node concept="37vLTw" id="5HxjapvQZmJ" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcic" resolve="frameMapper" />
                </node>
                <node concept="3uibUv" id="5XU7UUGbcio" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcip" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri89" resolve="getUnitName" />
              <node concept="3cpWs3" id="28Ru$KWroRd" role="37wK5m">
                <node concept="Xl_RD" id="28Ru$KWrps0" role="3uHU7w">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cpWs3" id="28Ru$KWrm2V" role="3uHU7B">
                  <node concept="3cpWs3" id="28Ru$KWrjqd" role="3uHU7B">
                    <node concept="3cpWs3" id="28Ru$KWrh5l" role="3uHU7B">
                      <node concept="3cpWs3" id="28Ru$KWrgmx" role="3uHU7B">
                        <node concept="10M0yZ" id="28Ru$KWrcUf" role="3uHU7B">
                          <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                          <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                        </node>
                        <node concept="Xl_RD" id="5XU7UUGbciq" role="3uHU7w">
                          <property role="Xl_RC" value="source_gen" />
                        </node>
                      </node>
                      <node concept="10M0yZ" id="28Ru$KWrhmq" role="3uHU7w">
                        <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                        <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="28Ru$KWrjKP" role="3uHU7w">
                      <property role="Xl_RC" value="dummy" />
                    </node>
                  </node>
                  <node concept="10M0yZ" id="28Ru$KWrqIX" role="3uHU7w">
                    <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="Xl_RD" id="5XU7UUGbcir" role="3tpDZA">
            <property role="Xl_RC" value="bla.Main" />
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbci_" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbciA" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGbciB" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGbciC" role="1eOMHV">
                <node concept="37vLTw" id="5HxjapvQZS6" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcic" resolve="frameMapper" />
                </node>
                <node concept="3uibUv" id="5XU7UUGbciE" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbciF" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri89" resolve="getUnitName" />
              <node concept="3cpWs3" id="28Ru$KWrJb0" role="37wK5m">
                <node concept="Xl_RD" id="28Ru$KWrJDS" role="3uHU7w">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cpWs3" id="28Ru$KWrIeq" role="3uHU7B">
                  <node concept="3cpWs3" id="28Ru$KWrDV7" role="3uHU7B">
                    <node concept="3cpWs3" id="28Ru$KWrC_9" role="3uHU7B">
                      <node concept="3cpWs3" id="28Ru$KWrB2c" role="3uHU7B">
                        <node concept="10M0yZ" id="28Ru$KWrB43" role="3uHU7B">
                          <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                          <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                        </node>
                        <node concept="Xl_RD" id="5XU7UUGbciG" role="3uHU7w">
                          <property role="Xl_RC" value="source_gen" />
                        </node>
                      </node>
                      <node concept="10M0yZ" id="28Ru$KWrCQb" role="3uHU7w">
                        <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                        <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="28Ru$KWrEiI" role="3uHU7w">
                      <property role="Xl_RC" value="bla" />
                    </node>
                  </node>
                  <node concept="10M0yZ" id="28Ru$KWrIt5" role="3uHU7w">
                    <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="Xl_RD" id="5XU7UUGbciH" role="3tpDZA">
            <property role="Xl_RC" value="bla.Main" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbciI" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbciJ" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbciK" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbciL" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbciM" role="1eOMHV">
                  <node concept="37vLTw" id="5XU7UUGbciN" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcic" resolve="frameMapper" />
                  </node>
                  <node concept="3uibUv" id="5XU7UUGbciO" role="10QFUM">
                    <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbciP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6Zad41Tri89" resolve="getUnitName" />
                <node concept="10Nm6u" id="5XU7UUGbciQ" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbciR" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3clFbH" id="2RIdqIAtVoQ" role="3cqZAp" />
        <node concept="3vlDli" id="2RIdqIAoJl5" role="3cqZAp">
          <node concept="Xl_RD" id="2RIdqIAoJFf" role="3tpDZB">
            <property role="Xl_RC" value="bla.Main" />
          </node>
          <node concept="2OqwBi" id="2RIdqIAoJYz" role="3tpDZA">
            <node concept="1eOMI4" id="2RIdqIAoJY$" role="2Oq$k0">
              <node concept="10QFUN" id="2RIdqIAoJY_" role="1eOMHV">
                <node concept="37vLTw" id="2RIdqIAoJYA" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcic" resolve="frameMapper" />
                </node>
                <node concept="3uibUv" id="2RIdqIAoJYB" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2RIdqIAoJYC" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri89" resolve="getUnitName" />
              <node concept="Xl_RD" id="2RIdqIAoJYD" role="37wK5m">
                <property role="Xl_RC" value="Main.x" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2RIdqIAtV9C" role="3cqZAp" />
        <node concept="3vlDli" id="2RIdqIAoKoO" role="3cqZAp">
          <node concept="Xl_RD" id="2RIdqIAoKoP" role="3tpDZB">
            <property role="Xl_RC" value="bla.Main" />
          </node>
          <node concept="2OqwBi" id="2RIdqIAoL$2" role="3tpDZA">
            <node concept="1eOMI4" id="2RIdqIAoL$3" role="2Oq$k0">
              <node concept="10QFUN" id="2RIdqIAoL$4" role="1eOMHV">
                <node concept="37vLTw" id="2RIdqIAoL$5" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcic" resolve="frameMapper" />
                </node>
                <node concept="3uibUv" id="2RIdqIAoL$6" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2RIdqIAoL$7" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri89" resolve="getUnitName" />
              <node concept="3cpWs3" id="2RIdqIAoL$8" role="37wK5m">
                <node concept="Xl_RD" id="2RIdqIAoL$9" role="3uHU7w">
                  <property role="Xl_RC" value="Main.y" />
                </node>
                <node concept="3cpWs3" id="2RIdqIAoL$a" role="3uHU7B">
                  <node concept="3cpWs3" id="2RIdqIAoL$b" role="3uHU7B">
                    <node concept="10M0yZ" id="2RIdqIAoL$c" role="3uHU7B">
                      <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                      <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    </node>
                    <node concept="Xl_RD" id="2RIdqIAoL$d" role="3uHU7w">
                      <property role="Xl_RC" value="bla" />
                    </node>
                  </node>
                  <node concept="10M0yZ" id="2RIdqIAoL$e" role="3uHU7w">
                    <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcjc" role="1SL9yI">
      <property role="TrG5h" value="fileName" />
      <node concept="3cqZAl" id="5XU7UUGbcjd" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcje" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcjf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcjg" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcjh" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcji" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcjj" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcjk" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcfw" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcjl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcjm" role="3cpWs9">
            <property role="TrG5h" value="debugApiWrapper" />
            <node concept="3uibUv" id="5XU7UUGbcjn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcjo" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdHO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcjg" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcjq" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcjr" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcjs" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcjt" role="3cpWs9">
            <property role="TrG5h" value="frameMapper" />
            <node concept="3uibUv" id="5XU7UUGbcju" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcjv" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbcjw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcjg" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcjx" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcjy" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcjz" role="3cqZAp" />
        <node concept="3vlDli" id="5XU7UUGbcj$" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcj_" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGbcjA" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGbcjB" role="1eOMHV">
                <node concept="37vLTw" id="5XU7UUGbcjC" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcjt" resolve="frameMapper" />
                </node>
                <node concept="3uibUv" id="5XU7UUGbcjD" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcjE" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri9z" resolve="getFileName" />
              <node concept="Xl_RD" id="5XU7UUGbcjF" role="37wK5m">
                <property role="Xl_RC" value="Main.c" />
              </node>
            </node>
          </node>
          <node concept="Xl_RD" id="5XU7UUGbcjG" role="3tpDZA">
            <property role="Xl_RC" value="Main.c" />
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcjH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcjI" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGbcjJ" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGbcjK" role="1eOMHV">
                <node concept="3uibUv" id="5XU7UUGbcjL" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbcjM" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcjt" resolve="frameMapper" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcjN" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri9z" resolve="getFileName" />
              <node concept="3cpWs3" id="28Ru$KWubtc" role="37wK5m">
                <node concept="3cpWs3" id="28Ru$KWuf6E" role="3uHU7B">
                  <node concept="10M0yZ" id="28Ru$KWubRH" role="3uHU7w">
                    <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                  </node>
                  <node concept="Xl_RD" id="28Ru$KWucFO" role="3uHU7B">
                    <property role="Xl_RC" value="bla" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5XU7UUGbcjO" role="3uHU7w">
                  <property role="Xl_RC" value="Main.c" />
                </node>
              </node>
            </node>
          </node>
          <node concept="Xl_RD" id="5XU7UUGbcjP" role="3tpDZA">
            <property role="Xl_RC" value="Main.c" />
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcjQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcjR" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGbcjS" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGbcjT" role="1eOMHV">
                <node concept="3uibUv" id="5XU7UUGbcjU" role="10QFUM">
                  <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                </node>
                <node concept="37vLTw" id="5HxjapvTeiH" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGbcjt" resolve="frameMapper" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcjW" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6Zad41Tri9z" resolve="getFileName" />
              <node concept="3cpWs3" id="28Ru$KWugZr" role="37wK5m">
                <node concept="Xl_RD" id="28Ru$KWugkp" role="3uHU7w">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cpWs3" id="28Ru$KWugcF" role="3uHU7B">
                  <node concept="Xl_RD" id="5XU7UUGbcjX" role="3uHU7B">
                    <property role="Xl_RC" value="bla" />
                  </node>
                  <node concept="10M0yZ" id="28Ru$KWuhkX" role="3uHU7w">
                    <ref role="1PxDUh" to="guwi:~File" resolve="File" />
                    <ref role="3cqZAo" to="guwi:~File.separator" resolve="separator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="Xl_RD" id="5XU7UUGbcjY" role="3tpDZA">
            <property role="Xl_RC" value="Main.c" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcjZ" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbck0" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbck1" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbck2" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbck3" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbck4" role="10QFUM">
                    <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZ8L" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcjt" resolve="frameMapper" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbck6" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6Zad41Tri9z" resolve="getFileName" />
                <node concept="10Nm6u" id="5XU7UUGbck7" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbck8" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbckj">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MProgramStateManager" />
    <node concept="2XrIbr" id="5XU7UUGbckk" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbckl" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbckm" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbckn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcko" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbckp" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbckq" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbckr" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbcks" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbckt" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbcku" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbckv" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbckw" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbckx" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbcky" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbckz" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbck$" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbck_" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbckA" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbckB" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbckC" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbckD" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbckE" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbckF" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbckG" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbckH" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbckI" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbckJ" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbckK" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbckL" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbckM" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbckN" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbckO" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbckP" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbckQ" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbckR" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbckS" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbckT" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbckU" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbckV" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbckW" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbckX" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4Ga_h" resolve="MProgramStateManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbckY" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbckZ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcl0" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcl1" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcl2" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbcl3" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4Ga_h" resolve="MProgramStateManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcl4" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZpW" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcko" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcl6" role="1SL9yI">
      <property role="TrG5h" value="illegalArgumentForGetCurrentNode" />
      <node concept="3cqZAl" id="5XU7UUGbcl7" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcl8" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcl9" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcla" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbclb" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbclc" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcld" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcle" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbckk" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbclf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbclg" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <node concept="3uibUv" id="5XU7UUGbclh" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcli" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdP0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcla" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbclk" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcll" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbclm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcln" role="3cpWs9">
            <property role="TrG5h" value="callStackConstructor" />
            <node concept="3uibUv" id="5XU7UUGbclo" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbclp" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZdY" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcla" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbclr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcls" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbclt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbclu" role="3cpWs9">
            <property role="TrG5h" value="debugApiWrapper" />
            <node concept="3uibUv" id="5XU7UUGbclv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbclw" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbclx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcla" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcly" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbclz" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcl$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcl_" role="3cpWs9">
            <property role="TrG5h" value="wrapperEventListener" />
            <node concept="3uibUv" id="5XU7UUGbclA" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbclB" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbclC" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcla" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbclD" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbclE" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbclF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbclG" role="3cpWs9">
            <property role="TrG5h" value="programStateManager" />
            <node concept="3uibUv" id="5XU7UUGbclH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbclI" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTduT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcla" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbclK" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbclL" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbclM" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbclN" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbclO" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbclP" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbclQ" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbclR" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclG" resolve="programStateManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGbclS" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfc1O8" resolve="getCurrentNode" />
                <node concept="10Nm6u" id="5XU7UUGbclT" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbclU">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MUnmappedVariable" />
    <node concept="1LZb2c" id="5XU7UUGbclV" role="1SL9yI">
      <property role="TrG5h" value="fromUnusedToHidden" />
      <node concept="3cqZAl" id="5XU7UUGbclW" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbclX" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbclY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbclZ" role="3cpWs9">
            <property role="TrG5h" value="unmappedVariable" />
            <node concept="3uibUv" id="5XU7UUGbcm0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcm1" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcm2" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcm3" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcm4" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbcm5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcm6" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcm7" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zN" resolve="UNUSED" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcm8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcm9" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZxo" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcmb" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFn" resolve="hide" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcmc" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcmd" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcme" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZoz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmg" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcmh" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zQ" resolve="HIDDEN" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcmi" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcmj" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcmk" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZJ7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmm" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcmn" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcmo" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcmp" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcmq" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZJY" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcms" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFn" resolve="hide" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcmt" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcmu" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcmv" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcmw" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdZ2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmy" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcmz" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcm$" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcm_" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcmA" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdY2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbclZ" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmC" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcmD" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zQ" resolve="HIDDEN" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcmE" role="1SL9yI">
      <property role="TrG5h" value="fromUnusedToUseToHidden" />
      <node concept="3cqZAl" id="5XU7UUGbcmF" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcmG" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcmH" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcmI" role="3cpWs9">
            <property role="TrG5h" value="unmappedVariable" />
            <node concept="3uibUv" id="5XU7UUGbcmJ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcmK" role="33vP2m">
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcmL" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcmM" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcmN" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbcmO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcmQ" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zN" resolve="UNUSED" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcmR" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcmS" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdFi" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcmU" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcmV" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcmW" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcmX" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZBM" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcmZ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcn0" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zO" resolve="USED" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcn1" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcn2" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZwF" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcn4" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcn5" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcn6" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcn7" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTemz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcn9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcna" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zO" resolve="USED" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcnb" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcnc" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZnL" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcne" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFn" resolve="hide" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcnf" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcng" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcnh" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbcni" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcnj" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcnk" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zQ" resolve="HIDDEN" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcnl" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcnm" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcnn" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeiN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcnp" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcnq" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcnr" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcns" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcnt" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZvz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcnv" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFn" resolve="hide" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcnw" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcnx" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcny" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcnz" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZw_" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcn_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcnA" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcnB" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcnC" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcnD" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZLj" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcmI" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcnF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcnG" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zQ" resolve="HIDDEN" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcnH" role="1SL9yI">
      <property role="TrG5h" value="fromUnusedToUseToMapped" />
      <node concept="3cqZAl" id="5XU7UUGbcnI" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcnJ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcnK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcnL" role="3cpWs9">
            <property role="TrG5h" value="unmappedVariable" />
            <node concept="3uibUv" id="5XU7UUGbcnM" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcnN" role="33vP2m">
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcnO" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcnP" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcnQ" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbcnR" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcnS" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcnT" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zN" resolve="UNUSED" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcnU" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcnV" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdK9" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcnX" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcnY" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcnZ" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbco0" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTejw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbco2" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbco3" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zO" resolve="USED" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbco4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbco5" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ9a" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbco7" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbco8" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbco9" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcoa" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTe57" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcoc" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcod" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zO" resolve="USED" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcoe" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcof" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdUF" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcoh" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcoi" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcoj" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcok" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZ50" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcom" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcon" role="3uHU7w">
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zP" resolve="MAPPED" />
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcoo" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcop" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcoq" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbcor" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcos" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcot" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcou" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcov" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcow" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZGv" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcoy" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFn" resolve="hide" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcoz" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbco$" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbco_" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcoA" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbcoB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcoC" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcoD" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcoE" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcoF" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcoG" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdR$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcnL" resolve="unmappedVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcoI" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcoJ" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zP" resolve="MAPPED" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcoK" role="1SL9yI">
      <property role="TrG5h" value="hideWholeUnmappedVariablesHierarchy" />
      <node concept="3cqZAl" id="5XU7UUGbcoL" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcoM" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcoN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcoO" role="3cpWs9">
            <property role="TrG5h" value="structVariable" />
            <node concept="3uibUv" id="5XU7UUGbcoP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcoQ" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcoR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcoS" role="3cpWs9">
            <property role="TrG5h" value="variableAccess" />
            <node concept="3uibUv" id="5XU7UUGbcoT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa50zh" resolve="IMCVariableAccess" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcoU" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbcoV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcoO" resolve="structVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcoW" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcoX" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcoY" role="2Gsz3X">
            <property role="TrG5h" value="child" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcoZ" role="2GsD0m">
            <node concept="37vLTw" id="5HxjapvTdxE" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcoS" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcp1" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4ycC" resolve="getChildren" />
            </node>
          </node>
          <node concept="3clFbS" id="5XU7UUGbcp2" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGbcp3" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcp4" role="3clFbG">
                <node concept="2GrUjf" id="5XU7UUGbcp5" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGbcoY" resolve="child" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcp6" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcp7" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcp8" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbcp9" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZ98" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcoO" resolve="structVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcpb" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
              </node>
            </node>
            <node concept="Rm8GO" id="5XU7UUGbcpc" role="3uHU7w">
              <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
              <ref role="Rm8GQ" to="x30c:3gwY0Fa50zP" resolve="MAPPED" />
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcpd" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcpe" role="2Gsz3X">
            <property role="TrG5h" value="child" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcpf" role="2GsD0m">
            <node concept="37vLTw" id="5HxjapvQZK4" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcoS" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcph" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4ycC" resolve="getChildren" />
            </node>
          </node>
          <node concept="3clFbS" id="5XU7UUGbcpi" role="2LFqv$">
            <node concept="3vwNmj" id="5XU7UUGbcpj" role="3cqZAp">
              <node concept="3clFbC" id="5XU7UUGbcpk" role="3vwVQn">
                <node concept="2OqwBi" id="5XU7UUGbcpl" role="3uHU7B">
                  <node concept="2GrUjf" id="5XU7UUGbcpm" role="2Oq$k0">
                    <ref role="2Gs0qQ" node="5XU7UUGbcpe" resolve="child" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcpn" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
                  </node>
                </node>
                <node concept="Rm8GO" id="5XU7UUGbcpo" role="3uHU7w">
                  <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
                  <ref role="Rm8GQ" to="x30c:3gwY0Fa50zP" resolve="MAPPED" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcpp" role="1SL9yI">
      <property role="TrG5h" value="invalidConstructorCall" />
      <node concept="3cqZAl" id="5XU7UUGbcpq" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcpr" role="3clF47">
        <node concept="3$NI$W" id="5XU7UUGbcps" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcpt" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcpu" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbcpv" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbcpw" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fa4n1V" resolve="MUnmappedVariableImpl" />
                <node concept="10Nm6u" id="5XU7UUGbcpx" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcpy" role="1SL9yI">
      <property role="TrG5h" value="validOperationsInAllStates" />
      <node concept="3cqZAl" id="5XU7UUGbcpz" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcp$" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcp_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcpA" role="3cpWs9">
            <property role="TrG5h" value="structVariable" />
            <node concept="3uibUv" id="5XU7UUGbcpB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcpC" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbcpD" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcpE" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZPb" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcpA" resolve="structVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcpG" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa50zq" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbcpH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcpI" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZs$" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcpA" resolve="structVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcpK" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa50zA" resolve="isInstanceOfCType" />
              <node concept="3VsKOn" id="5XU7UUGbcpL" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcpM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcpN" role="3cpWs9">
            <property role="TrG5h" value="variableAccess" />
            <node concept="3uibUv" id="5XU7UUGbcpO" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa50zh" resolve="IMCVariableAccess" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcpP" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdRg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcpA" resolve="structVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcpR" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa3SFr" resolve="use" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcpS" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcpT" role="2Gsz3X">
            <property role="TrG5h" value="child" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcpU" role="2GsD0m">
            <node concept="37vLTw" id="5HxjapvQZoD" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcpN" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcpW" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4ycC" resolve="getChildren" />
            </node>
          </node>
          <node concept="3clFbS" id="5XU7UUGbcpX" role="2LFqv$">
            <node concept="2Hmddi" id="5XU7UUGbcpY" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcpZ" role="2Hmdds">
                <node concept="2GrUjf" id="5XU7UUGbcq0" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGbcpT" resolve="child" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcq1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3gwY0Fa50zq" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="2Hmddi" id="5XU7UUGbcq2" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcq3" role="2Hmdds">
                <node concept="2GrUjf" id="5XU7UUGbcq4" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGbcpT" resolve="child" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcq5" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3gwY0Fa50zA" resolve="isInstanceOfCType" />
                  <node concept="3VsKOn" id="5XU7UUGbcq6" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:2RztF939YPK" resolve="IWVariable" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcq7" role="1SL9yI">
      <property role="TrG5h" value="resolveChildren" />
      <node concept="3cqZAl" id="5XU7UUGbcq8" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcq9" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcqa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcqb" role="3cpWs9">
            <property role="TrG5h" value="structVariable" />
            <node concept="3uibUv" id="5XU7UUGbcqc" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa3SFk" resolve="IMUnmappedVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcqd" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbc9c" resolve="constructStructVariable" />
              <ref role="1Pybhc" node="5XU7UUGbc96" resolve="UnusedWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcqe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcqf" role="3cpWs9">
            <property role="TrG5h" value="variableAccess" />
            <node concept="3uibUv" id="5XU7UUGbcqg" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa50zh" resolve="IMCVariableAccess" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcqh" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe4S" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcqb" resolve="structVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcqj" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4LxH" resolve="map" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbcqk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcql" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZgN" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqf" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcqn" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4$R$" resolve="childrenResolved" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcqo" role="3cqZAp">
          <node concept="3cmrfG" id="5XU7UUGbcqp" role="3tpDZA">
            <property role="3cmrfH" value="2" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcqq" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGbcqr" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTe2c" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcqf" resolve="variableAccess" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcqt" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa4ycC" resolve="getChildren" />
              </node>
            </node>
            <node concept="34oBXx" id="5XU7UUGbcqu" role="2OqNvi" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcqv" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcqw" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTekN" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqf" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcqy" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4$R$" resolve="childrenResolved" />
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcqz" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcq$" role="2Gsz3X">
            <property role="TrG5h" value="child" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcq_" role="2GsD0m">
            <node concept="37vLTw" id="5HxjapvTdtU" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqf" resolve="variableAccess" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcqB" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa4ycC" resolve="getChildren" />
            </node>
          </node>
          <node concept="3clFbS" id="5XU7UUGbcqC" role="2LFqv$">
            <node concept="3vwNmj" id="5XU7UUGbcqD" role="3cqZAp">
              <node concept="3clFbC" id="5XU7UUGbcqE" role="3vwVQn">
                <node concept="Rm8GO" id="5XU7UUGbcqF" role="3uHU7w">
                  <ref role="Rm8GQ" to="x30c:3gwY0Fa50zN" resolve="UNUSED" />
                  <ref role="1Px2BO" to="x30c:3gwY0Fa50zH" resolve="MUnmappedVariableState" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcqG" role="3uHU7B">
                  <node concept="2GrUjf" id="5XU7UUGbcqH" role="2Oq$k0">
                    <ref role="2Gs0qQ" node="5XU7UUGbcq$" resolve="child" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcqI" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3gwY0Fa4n6d" resolve="getState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbcqJ">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="UnusedVariablesWatchablesCreatorr" />
    <node concept="1LZb2c" id="5XU7UUGbcqK" role="1SL9yI">
      <property role="TrG5h" value="mapCategory" />
      <node concept="3cqZAl" id="5XU7UUGbcqL" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcqM" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcqN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcqO" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcqP" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcqQ" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcqR" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcqS" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsn" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcqT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcqU" role="3cpWs9">
            <property role="TrG5h" value="unusedVWCreator" />
            <node concept="3uibUv" id="5XU7UUGbcqV" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbcqW" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbcqX" role="10QFUM">
                <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbcqY" role="10QFUP">
                <node concept="liA8E" id="5XU7UUGbcqZ" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbcr0" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                  </node>
                </node>
                <node concept="37vLTw" id="5HxjapvTduH" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcqO" resolve="injector" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcr2" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcr3" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcr4" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcr5" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcr6" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdBB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcqU" resolve="unusedVWCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcr8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa6ijb" resolve="mapCategory" />
                <node concept="10Nm6u" id="5XU7UUGbcr9" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcra" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcrb" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvQZdw" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqU" resolve="unusedVWCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcrd" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa6ijb" resolve="mapCategory" />
              <node concept="Rm8GO" id="5XU7UUGbcre" role="37wK5m">
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB4" resolve="ARGUMENT" />
              </node>
            </node>
          </node>
          <node concept="10M0yZ" id="5XU7UUGbcrf" role="3tpDZA">
            <ref role="1PxDUh" to="x30c:6catoKefX5c" resolve="MWatchableCategories" />
            <ref role="3cqZAo" to="x30c:6catoKefYBD" resolve="ARGUMENTS" />
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcrg" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcrh" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvTdIM" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqU" resolve="unusedVWCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcrj" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa6ijb" resolve="mapCategory" />
              <node concept="Rm8GO" id="5XU7UUGbcrk" role="37wK5m">
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB2" resolve="LOCAL" />
              </node>
            </node>
          </node>
          <node concept="10M0yZ" id="5XU7UUGbcrl" role="3tpDZA">
            <ref role="1PxDUh" to="x30c:6catoKefX5c" resolve="MWatchableCategories" />
            <ref role="3cqZAo" to="x30c:6catoKefX5i" resolve="LOCAL_VARIABLES" />
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGbcrm" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcrn" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvQZsS" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcqU" resolve="unusedVWCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcrp" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fa6ijb" resolve="mapCategory" />
              <node concept="Rm8GO" id="5XU7UUGbcrq" role="37wK5m">
                <ref role="1Px2BO" to="x30c:3SnnFeu9qiD" resolve="VariableKind" />
                <ref role="Rm8GQ" to="x30c:3SnnFeu9rB1" resolve="GLOBAL" />
              </node>
            </node>
          </node>
          <node concept="10M0yZ" id="5XU7UUGbcrr" role="3tpDZA">
            <ref role="3cqZAo" to="x30c:3IkKaYj0$3p" resolve="GLOBAL_VARIABLES" />
            <ref role="1PxDUh" to="x30c:6catoKefX5c" resolve="MWatchableCategories" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcrs" role="1SL9yI">
      <property role="TrG5h" value="createWatchableWithNull" />
      <node concept="3cqZAl" id="5XU7UUGbcrt" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcru" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcrv" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcrw" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcrx" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcry" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcrz" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcr$" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsn" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcr_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcrA" role="3cpWs9">
            <property role="TrG5h" value="unusedVWCreator" />
            <node concept="3uibUv" id="5XU7UUGbcrB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbcrC" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbcrD" role="10QFUM">
                <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbcrE" role="10QFUP">
                <node concept="liA8E" id="5XU7UUGbcrF" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbcrG" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                  </node>
                </node>
                <node concept="37vLTw" id="5HxjapvQZSF" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcrw" resolve="injector" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcrI" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcrJ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcrK" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcrL" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcrM" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbcrN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcrA" resolve="unusedVWCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcrO" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa5Tss" resolve="createWatchable" />
                <node concept="10Nm6u" id="5XU7UUGbcrP" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcrQ" role="1SL9yI">
      <property role="TrG5h" value="illegalParametersForCreateComplexAndPrimitiveValue" />
      <node concept="3cqZAl" id="5XU7UUGbcrR" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcrS" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcrT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcrU" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcrV" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcrW" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcrX" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcrY" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsn" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcrZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcs0" role="3cpWs9">
            <property role="TrG5h" value="unusedVWCreator" />
            <node concept="3uibUv" id="5XU7UUGbcs1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbcs2" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbcs3" role="10QFUM">
                <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbcs4" role="10QFUP">
                <node concept="liA8E" id="5XU7UUGbcs5" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbcs6" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                  </node>
                </node>
                <node concept="37vLTw" id="5HxjapvTeq7" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcrU" resolve="injector" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcs8" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcs9" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcsa" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcsb" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZIF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcs0" resolve="unusedVWCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcsd" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa5Ttv" resolve="createPrimitiveValue" />
                <node concept="10Nm6u" id="5XU7UUGbcse" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcsf" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcsg" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcsh" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcsi" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbcsj" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcs0" resolve="unusedVWCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcsk" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fa5Ttr" resolve="createComplexValue" />
                <node concept="10Nm6u" id="5XU7UUGbcsl" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcsm" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbcsn" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbcso" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcsp" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcsq" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcsr" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcss" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcst" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbcsu" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbcsv" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbcsw" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbcsx" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbcsy" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbcsz" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbcs$" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbcs_" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbcsA" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcsB" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcsC" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcsD" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcsE" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="5XU7UUGbcsF" role="37wK5m">
                                <node concept="1pGfFk" id="5XU7UUGbcsG" role="2ShVmc">
                                  <ref role="37wK5l" to="x30c:3gwY0Fa5Tsn" resolve="MUnusedVariablesWatchablesCreatorImpl" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcsH" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTejH" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcsr" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbcsJ">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="WatchablesCreator" />
    <node concept="2XrIbr" id="5XU7UUGbcsK" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbcsL" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcsM" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcsN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcsO" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcsP" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcsQ" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbcsR" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbcsS" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbcsT" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbcsU" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbcsV" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbcsW" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbcsX" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbcsY" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbcsZ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbct0" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbct1" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbct2" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbct3" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbct4" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbct5" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbct6" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbct7" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbct8" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbct9" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcta" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbctb" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbctc" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbctd" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcte" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbctf" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbctg" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcth" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbcti" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbctj" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbctk" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbctl" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbctm" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:4F7MaHWZAvw" resolve="IMCategoryRegistry" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbctn" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcto" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbctp" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:4F7MaHWZAvw" resolve="IMCategoryRegistry" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbctq" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbctr" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcts" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbctt" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbctu" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbctv" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbctw" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbctx" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZCP" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcsO" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbctz" role="1SL9yI">
      <property role="TrG5h" value="requestGlobalVariables" />
      <node concept="3cqZAl" id="5XU7UUGbct$" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbct_" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbctA" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbctB" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbctC" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbctD" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbctE" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbctF" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsK" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbctG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbctH" role="3cpWs9">
            <property role="TrG5h" value="watchablesCreator" />
            <node concept="3uibUv" id="5XU7UUGbctI" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbctJ" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbctK" role="10QFUM">
                <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbctL" role="10QFUP">
                <node concept="37vLTw" id="5HxjapvQZ$z" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbctB" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbctN" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbctO" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbctP" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbctQ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbctR" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbctS" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbctT" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbctU" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTdvS" role="1eOMHV">
                  <ref role="3cqZAo" node="5XU7UUGbctH" resolve="watchablesCreator" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbctW" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px3Blv" resolve="getGlobalVariables" />
                <node concept="10Nm6u" id="5XU7UUGbctX" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbctY" role="1SL9yI">
      <property role="TrG5h" value="constructWatchablesWithIllegalArgument" />
      <node concept="3cqZAl" id="5XU7UUGbctZ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcu0" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcu1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcu2" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcu3" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcu4" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcu5" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcu6" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsK" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcu7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcu8" role="3cpWs9">
            <property role="TrG5h" value="watchablesCreator" />
            <node concept="3uibUv" id="5XU7UUGbcu9" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcua" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbcub" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcu2" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcuc" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcud" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcue" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcuf" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcug" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcuh" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeqB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcu8" resolve="watchablesCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcuj" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px6Jvj" resolve="constructWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcuk" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcul" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcuX" role="1SL9yI">
      <property role="TrG5h" value="invalidParametersForGetUnmappedWatchables" />
      <node concept="3cqZAl" id="5XU7UUGbcuY" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcuZ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcv0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcv1" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcv2" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcv3" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcv4" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcv5" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsK" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcv6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcv7" role="3cpWs9">
            <property role="TrG5h" value="watchablesCreator" />
            <node concept="3uibUv" id="5XU7UUGbcv8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcv9" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ_A" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcv1" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcvb" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcvc" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcvd" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbcve" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcvf" role="3cpWs9">
            <property role="TrG5h" value="dummyList" />
            <node concept="_YKpA" id="5XU7UUGbcvg" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbcvh" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcvi" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbcvj" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbcvk" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcvl" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcvm" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcvn" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcvo" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcvp" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcvq" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTepn" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcvs" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcvt" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbcvu" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbcvv" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcvw" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcvx" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcvy" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcvz" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcv$" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcv_" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcvA" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdwd" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcvC" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="37vLTw" id="5XU7UUGbcvD" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcvE" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbcvF" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcvG" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcvH" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcvI" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcvJ" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcvK" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcvL" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcvM" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5XU7UUGbcvN" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcvO" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="37vLTw" id="5HxjapvQZeH" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdEF" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcvR" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcvS" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcvT" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcvU" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcvV" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcvW" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcvX" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcvY" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZsC" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcw0" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcw1" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdzz" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcw3" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcw4" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcw5" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcw6" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcw7" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcw8" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcw9" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcwa" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZhi" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcwc" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcwd" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTd_c" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="37vLTw" id="5HxjapvTekg" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcwg" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcwh" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcwi" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcwj" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcwk" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcwl" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcwm" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdEB" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcv7" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcwo" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px7rcL" resolve="getUnmappedWatchables" />
                <node concept="37vLTw" id="5HxjapvTdDt" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcwq" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZrt" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcvf" resolve="dummyList" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcws" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcwt" role="1SL9yI">
      <property role="TrG5h" value="invalidParametersForGetWatchables" />
      <node concept="3cqZAl" id="5XU7UUGbcwu" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcwv" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcww" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcwx" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcwy" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcwz" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcw$" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcw_" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcsK" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcwA" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcwB" role="3cpWs9">
            <property role="TrG5h" value="watchablesCreator" />
            <node concept="3uibUv" id="5XU7UUGbcwC" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcwD" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZuq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcwx" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcwF" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcwG" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcwH" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbcwI" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcwJ" role="3cpWs9">
            <property role="TrG5h" value="nodeDummy" />
            <node concept="3uibUv" id="5XU7UUGbcwK" role="1tU5fm">
              <ref role="3uigEE" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcwL" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbcwM" role="37wK5m">
                <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcwN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcwO" role="3cpWs9">
            <property role="TrG5h" value="frameMappingDummy" />
            <node concept="3uibUv" id="5XU7UUGbcwP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:229N9i$8VVF" resolve="MFrameMappingImpl" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcwQ" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbcwR" role="37wK5m">
                <ref role="3VsUkX" to="x30c:229N9i$8VVF" resolve="MFrameMappingImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcwS" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcwT" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcwU" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcwV" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcwW" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcwX" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZAL" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcwB" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcwZ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px6V9e" resolve="getWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcx0" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbcx1" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcx2" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcx3" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcx4" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcx5" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcx6" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcx7" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcx8" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdSO" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcwB" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcxa" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px6V9e" resolve="getWatchables" />
                <node concept="37vLTw" id="5HxjapvQZP$" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcwJ" resolve="nodeDummy" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcxc" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcxd" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbcxe" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbcxf" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcxg" role="3clFbG">
              <node concept="1eOMI4" id="5XU7UUGbcxh" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGbcxi" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGbcxj" role="10QFUM">
                    <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZnx" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGbcwB" resolve="watchablesCreator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcxl" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6EW69Px6V9e" resolve="getWatchables" />
                <node concept="10Nm6u" id="5XU7UUGbcxm" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZs2" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbcwO" resolve="frameMappingDummy" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbcxo" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbcxp">
    <property role="3GE5qa" value="mapper" />
    <property role="TrG5h" value="MStepper" />
    <node concept="1LZb2c" id="5XU7UUGbcxq" role="1SL9yI">
      <property role="TrG5h" value="stepOutWithNullArgument" />
      <node concept="3cqZAl" id="5XU7UUGbcxr" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcxs" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcxt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcxu" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcxv" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcxw" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcxx" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcxy" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcyy" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcxz" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcx$" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGbcx_" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcxA" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdL2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcxu" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcxC" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcxD" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcxE" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcxF" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcxG" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcxH" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcxI" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZQ5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcx$" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcxK" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbcxL" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcxM" role="1SL9yI">
      <property role="TrG5h" value="stepOverWithNullArgument" />
      <node concept="3cqZAl" id="5XU7UUGbcxN" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcxO" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcxP" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcxQ" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcxR" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcxS" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcxT" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcxU" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcyy" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcxV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcxW" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGbcxX" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcxY" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZwX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcxQ" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcy0" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcy1" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcy2" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcy3" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcy4" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcy5" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcy6" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeoz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcxW" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcy8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbcy9" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbcya" role="1SL9yI">
      <property role="TrG5h" value="stepIntoWithNullArgument" />
      <node concept="3cqZAl" id="5XU7UUGbcyb" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcyc" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcyd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcye" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcyf" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcyg" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbcyh" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbcyi" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbcyy" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcyj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcyk" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGbcyl" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcym" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ7X" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcye" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcyo" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbcyp" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbcyq" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbcyr" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbcys" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbcyt" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbcyu" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdVT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcyk" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcyw" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbcyx" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbcyy" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbcyz" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcy$" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcy_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcyA" role="3cpWs9">
            <property role="TrG5h" value="strategyConfiguration" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGbcyB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcyC" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbcyD" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcyE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcyF" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbcyG" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbcyH" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbcyI" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbcyJ" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbcyK" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbcyL" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbcyM" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbcyN" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbcyO" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbcyP" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbcyQ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcyR" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcyS" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcyT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcyU" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbcyV" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GanZ" resolve="MStepperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcyW" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcyX" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcyY" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcyZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcz0" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcz1" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbcz2" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcz3" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbcz4" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbcz5" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbcz6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcz7" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbcz8" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbcz9" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbcza" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbczb" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbczc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbczd" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:Ux12weAirH" resolve="IStrategyConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbcze" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvQZxQ" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGbcyA" resolve="strategyConfiguration" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbczg" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbczh" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbczi" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbczj" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6JVOWb9ec3x" resolve="IMUpdateableStrategyConfiguration" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbczk" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTe0S" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGbcyA" resolve="strategyConfiguration" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbczm" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZHM" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcyF" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbaLj">
    <property role="TrG5h" value="ErrroReportingModuleMock" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="3Tm1VV" id="5XU7UUGbaLr" role="1B3o_S" />
    <node concept="3uibUv" id="5XU7UUGbaLw" role="1zkMxy">
      <ref role="3uigEE" to="ez3t:~AbstractModule" resolve="AbstractModule" />
    </node>
    <node concept="3clFbW" id="5XU7UUGbaLs" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbaLt" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbaLu" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbaLv" role="3clF47" />
    </node>
    <node concept="3clFb_" id="5XU7UUGbaLx" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="configure" />
      <property role="DiZV1" value="false" />
      <property role="IEkAT" value="false" />
      <node concept="3Tmbuc" id="5XU7UUGbaLy" role="1B3o_S" />
      <node concept="3cqZAl" id="5XU7UUGbaLz" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaL$" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGbaL_" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaLA" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaLB" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaLC" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaLD" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="5XU7UUGbaLE" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbaLF" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbaLG">
    <property role="TrG5h" value="MapperModuleMock" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="3Tm1VV" id="5XU7UUGbaLO" role="1B3o_S" />
    <node concept="3uibUv" id="5XU7UUGbaLT" role="1zkMxy">
      <ref role="3uigEE" to="ez3t:~AbstractModule" resolve="AbstractModule" />
    </node>
    <node concept="3clFbW" id="5XU7UUGbaLP" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbaLQ" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbaLR" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbaLS" role="3clF47" />
    </node>
    <node concept="3clFb_" id="5XU7UUGbaLU" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="configure" />
      <property role="DiZV1" value="false" />
      <property role="IEkAT" value="false" />
      <node concept="3Tmbuc" id="5XU7UUGbaLV" role="1B3o_S" />
      <node concept="3cqZAl" id="5XU7UUGbaLW" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaLX" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGbaLY" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaLZ" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaM0" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PXwy" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaM2" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="5XU7UUGbaM3" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="69Byf55PXwG" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT6Zf_D" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT6Zf_E" role="3clFbG">
            <node concept="3P9mCS" id="6L3DaT6Zf_F" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PXwQ" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
              </node>
            </node>
            <node concept="liA8E" id="6L3DaT6Zf_H" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="6L3DaT6Zf_I" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="69Byf55PXx0" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT6ZfA8" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT6ZfA9" role="3clFbG">
            <node concept="3P9mCS" id="6L3DaT6ZfAa" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PXxh" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
            </node>
            <node concept="liA8E" id="6L3DaT6ZfAc" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="6L3DaT6ZfAd" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="69Byf55PXxq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PXxU" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PXxV" role="3clFbG">
            <node concept="3P9mCS" id="69Byf55PXxW" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PXyb" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
              </node>
            </node>
            <node concept="liA8E" id="69Byf55PXxY" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="69Byf55PXxZ" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="69Byf55PXyl" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT6ZfAB" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT6ZfAC" role="3clFbG">
            <node concept="3P9mCS" id="6L3DaT6ZfAD" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PXxH" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
              </node>
            </node>
            <node concept="liA8E" id="6L3DaT6ZfAF" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="6L3DaT6ZfAG" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="69Byf55PXxz" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT70gof" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70gog" role="3clFbG">
            <node concept="3P9mCS" id="6L3DaT70goh" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PUni" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
              </node>
            </node>
            <node concept="liA8E" id="6L3DaT70goj" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="6L3DaT70gok" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="69Byf55PUns" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT70gpW" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70gpX" role="3clFbG">
            <node concept="3P9mCS" id="6L3DaT70gpY" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="69Byf55PUmY" role="37wK5m">
                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
              </node>
            </node>
            <node concept="liA8E" id="6L3DaT70gq0" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="2YIFZM" id="6L3DaT70gq1" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="69Byf55PUn8" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="69Byf55Q0CN" role="3cqZAp" />
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbaMj">
    <property role="TrG5h" value="BreakpointsModule" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="1LZb2c" id="5XU7UUGbaMk" role="1SL9yI">
      <property role="TrG5h" value="createModule" />
      <node concept="3cqZAl" id="5XU7UUGbaMl" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaMm" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaMn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaMo" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaMp" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaMq" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbaMr" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbaMs" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:6GRkpd$gkJ8" resolve="MPSBreakpointsModule" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbaMt">
    <property role="TrG5h" value="SessionModule" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="1LZb2c" id="5XU7UUGbaMu" role="1SL9yI">
      <property role="TrG5h" value="createModule" />
      <node concept="3cqZAl" id="5XU7UUGbaMv" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaMw" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaMx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaMy" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaMz" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaM$" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbaMB" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbaMC" role="2ShVmc">
                  <ref role="37wK5l" node="5XU7UUGbaLP" resolve="MapperModuleMock" />
                </node>
              </node>
              <node concept="2ShNRf" id="5XU7UUGbaMD" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbaME" role="2ShVmc">
                  <ref role="37wK5l" node="5XU7UUGbaLs" resolve="ErrroReportingModuleMock" />
                </node>
              </node>
              <node concept="2ShNRf" id="5XU7UUGbaMF" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbaMG" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbaMH" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbaMI" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbaMJ" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbaMK" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbaML" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbaMM" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbaMN" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaMO" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaMP" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaMQ" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaMR" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaMS" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaMT" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2SEaHiJSP40" role="3cqZAp">
                          <node concept="2OqwBi" id="2SEaHiJSP4X" role="3clFbG">
                            <node concept="2OqwBi" id="2SEaHiJSP4n" role="2Oq$k0">
                              <node concept="3P9mCS" id="2SEaHiJSP41" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="2SEaHiJSST0" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                                </node>
                              </node>
                              <node concept="liA8E" id="2SEaHiJSP4w" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="2SEaHiJSP4F" role="37wK5m">
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <node concept="Xl_RD" id="2SEaHiJSP4J" role="37wK5m">
                                    <property role="Xl_RC" value="binary" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="2SEaHiJSP58" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2SEaHiJSP5a" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="2SEaHiJSSTb" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5219jcoZc3q" role="3cqZAp">
                          <node concept="2OqwBi" id="5219jcoZc3P" role="3clFbG">
                            <node concept="3P9mCS" id="5219jcoZc3r" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5219jcoZCYZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5219jcoZc40" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5219jcoZc42" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2s4c_QqIx5w" role="3cqZAp">
                          <node concept="2OqwBi" id="2s4c_QqIx5x" role="3clFbG">
                            <node concept="3P9mCS" id="2s4c_QqIx5y" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2s4c_QqIx6z" role="37wK5m">
                                <ref role="3VsUkX" to="1l1h:3SnNvqCaJiH" resolve="AbstractDebugSessionCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2s4c_QqIx5$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="2s4c_QqIx6M" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5219jcoZRrv" role="3cqZAp">
                          <node concept="2OqwBi" id="5219jcoZRs6" role="3clFbG">
                            <node concept="3P9mCS" id="5219jcoZRrw" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5219jcoZRxG" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5219jcoZRsc" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5219jcoZRsp" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5219jcoZRti" role="3cqZAp">
                          <node concept="2OqwBi" id="5219jcoZRub" role="3clFbG">
                            <node concept="3P9mCS" id="5219jcoZRtj" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5219jcoZRtD" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5219jcoZRuu" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5219jcoZRuv" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5219jcoZRuy" role="3cqZAp">
                          <node concept="2OqwBi" id="5219jcoZRuz" role="3clFbG">
                            <node concept="3P9mCS" id="5219jcoZRu$" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5219jcoZRv3" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5219jcoZRuA" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5219jcoZRuB" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5219jcp0hzY" role="3cqZAp">
                          <node concept="2OqwBi" id="5219jcp0h$p" role="3clFbG">
                            <node concept="3P9mCS" id="5219jcp0hzZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PP7D" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5219jcp0h$v" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5219jcp0h$M" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2SEaHiJTLLt" role="3cqZAp">
                          <node concept="2OqwBi" id="2SEaHiJTLLS" role="3clFbG">
                            <node concept="3P9mCS" id="2SEaHiJTLLu" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2SEaHiJTLLw" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2SEaHiJTL8U" resolve="IDebugPositionConfigurator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2SEaHiJTLM1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2SEaHiJTUg7" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2SEaHiJTLM7" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2SEaHiJTL9g" resolve="DebugPositionProvider" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaMU" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaMV" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdNi" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaMy" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaMX" role="37wK5m">
              <ref role="3VsUkX" to="1l1h:3SnNvqCaJiH" resolve="AbstractDebugSessionCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaMY" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaMZ" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdEu" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaMy" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaN1" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbaN2">
    <property role="TrG5h" value="MEBreakpointRegistry" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="2XrIbr" id="5XU7UUGbaN3" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbaN4" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbaN5" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaN6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaN7" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaN8" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaN9" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbaNa" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbaNb" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbaNc" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbaNd" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbaNe" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbaNf" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbaNg" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbaNh" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbaNi" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaNj" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaNk" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaNl" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaNm" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaNn" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JxI" resolve="MEBreakpointRegistryImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaNo" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaNp" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaNq" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaNr" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaNs" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaNt" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JxI" resolve="MEBreakpointRegistryImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaNu" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaNv" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaNw" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaNx" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaNy" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaNz" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaN$" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbaN_" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbaNA" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbaN7" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbaNB" role="1B3o_S" />
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaNC" role="1SL9yI">
      <property role="TrG5h" value="registerAndDeregister" />
      <node concept="3cqZAl" id="5XU7UUGbaND" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaNE" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaNF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaNG" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbaNH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaNI" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaNJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaNK" role="3cpWs9">
            <property role="TrG5h" value="listener" />
            <node concept="3uibUv" id="5XU7UUGbaNL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaNM" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaNN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaNO" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpointListener" />
            <node concept="3uibUv" id="5XU7UUGbaNP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaNQ" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaNR" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaNS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaNT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaNU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaNV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaNW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaNX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaN3" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaNY" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaNZ" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaO0" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdxm" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaNT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaO2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaO3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaO4" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaNG" resolve="registry" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaO5" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaO6" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaO7" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZ9q" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaNT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaO9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaOa" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaOb" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaNK" resolve="listener" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaOc" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaOd" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaOe" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdL0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaNT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaOg" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaOh" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZ67" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaNO" resolve="mpsBreakpointListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaOj" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaOk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaOl" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZlI" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaNG" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaOn" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JBx" resolve="register" />
              <node concept="37vLTw" id="5HxjapvQZn7" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaNK" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaOp" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaOq" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ$_" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaNG" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaOs" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JC7" resolve="deregister" />
              <node concept="37vLTw" id="5HxjapvQZC9" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaNK" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaOu" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaOv" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdRO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaNG" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaOx" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JBx" resolve="register" />
              <node concept="37vLTw" id="5HxjapvQZjg" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaNK" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaOz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaO$" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaO_" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaNG" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaOA" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JC7" resolve="deregister" />
              <node concept="37vLTw" id="5XU7UUGbaOB" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaNK" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaOC" role="1SL9yI">
      <property role="TrG5h" value="BreakpointAddedAndRemoved" />
      <node concept="3cqZAl" id="5XU7UUGbaOD" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaOE" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaOF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaOG" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbaOH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaOI" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaOJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaOK" role="3cpWs9">
            <property role="TrG5h" value="listenerMock" />
            <node concept="3uibUv" id="5XU7UUGbaOL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaOM" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaON" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaOO" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpointListener" />
            <node concept="3uibUv" id="5XU7UUGbaOP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaOQ" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaOR" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaOS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaOT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaOU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaOV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaOW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaOX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaN3" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaOY" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaOZ" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaP0" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdQz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaOT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaP2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaP3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZS8" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaOG" resolve="registry" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaP5" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaP6" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaP7" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZI5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaOT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaP9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaPa" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaPb" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPc" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaPd" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaPe" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZhg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaOT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaPg" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaPh" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZDH" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaOO" resolve="mpsBreakpointListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaPj" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaPk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaPl" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTeqJ" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaOG" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaPn" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JBx" resolve="register" />
              <node concept="37vLTw" id="5HxjapvQZjk" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaPp" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaPq" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaPr" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaPs" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaPt" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxb" resolve="breakpointAdded" />
              <node concept="2YIFZM" id="5XU7UUGbaPu" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbaPv" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPw" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaPx" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbaPy" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaP$" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ4P" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaOO" resolve="mpsBreakpointListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaPA" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxw" resolve="addBreakpoint" />
              <node concept="2YIFZM" id="5XU7UUGbaPB" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbaPC" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaPE" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZL_" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaPG" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaPH" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaPI" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.reset(java.lang.Object...):void" resolve="reset" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTeon" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaPK" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaPL" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaPM" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZGi" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaPO" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxq" resolve="breakpointRemoved" />
              <node concept="2YIFZM" id="5XU7UUGbaPP" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbaPQ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPR" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaPS" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbaPT" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaPU" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaPV" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaPW" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaOO" resolve="mpsBreakpointListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaPX" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JxA" resolve="removeBreakpoint" />
              <node concept="2YIFZM" id="5XU7UUGbaPY" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbaPZ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQ0" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaQ1" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZ$1" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaOK" resolve="listenerMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaQ3" role="1SL9yI">
      <property role="TrG5h" value="NoEventsAfterDeregister" />
      <node concept="3cqZAl" id="5XU7UUGbaQ4" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaQ5" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaQ6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaQ7" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbaQ8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaQ9" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaQa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaQb" role="3cpWs9">
            <property role="TrG5h" value="listener" />
            <node concept="3uibUv" id="5XU7UUGbaQc" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaQd" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaQe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaQf" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpointListener" />
            <node concept="3uibUv" id="5XU7UUGbaQg" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaQh" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaQi" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaQj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaQk" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaQl" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaQm" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaQn" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaQo" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaN3" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQp" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaQq" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaQr" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZib" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaQk" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaQt" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaQu" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaQv" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaQ7" resolve="registry" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQw" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaQx" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaQy" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZd$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaQk" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaQ$" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaQ_" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZ9u" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaQb" resolve="listener" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQB" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaQC" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaQD" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdGE" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaQk" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaQF" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaQG" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZ$H" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaQf" resolve="mpsBreakpointListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaQI" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbaQJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaQK" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTep1" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaQ7" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaQM" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JBx" resolve="register" />
              <node concept="37vLTw" id="5XU7UUGbaQN" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaQb" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQO" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaQP" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTe0Y" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaQ7" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaQR" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JC7" resolve="deregister" />
              <node concept="37vLTw" id="5HxjapvTdI0" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaQb" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaQT" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaQU" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZLl" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaQf" resolve="mpsBreakpointListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaQW" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxw" resolve="addBreakpoint" />
              <node concept="2YIFZM" id="5XU7UUGbaQX" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbaQY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaQZ" role="3cqZAp" />
        <node concept="1X3_iC" id="5GwePVE7s0t" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbaR2" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbaR3" role="3clFbG">
              <node concept="2YIFZM" id="5XU7UUGbaR4" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
                <node concept="37vLTw" id="5HxjapvQZ7z" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaQb" resolve="listener" />
                </node>
                <node concept="2ShNRf" id="5XU7UUGbaR6" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGbaR7" role="2ShVmc">
                    <ref role="37wK5l" to="i8lq:~Times.&lt;init&gt;(int)" resolve="Times" />
                    <node concept="3cmrfG" id="5XU7UUGbaR8" role="37wK5m">
                      <property role="3cmrfH" value="0" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbaR9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3nxOvgY3Jxb" resolve="breakpointAdded" />
                <node concept="2YIFZM" id="5XU7UUGbaRa" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbaRb" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaRc" role="3cqZAp" />
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaRd" role="1SL9yI">
      <property role="TrG5h" value="breakpointRemoved" />
      <node concept="3cqZAl" id="5XU7UUGbaRe" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaRf" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaRg" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaRh" role="3cpWs9">
            <property role="TrG5h" value="registry" />
            <node concept="3uibUv" id="5XU7UUGbaRi" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaRj" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaRk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaRl" role="3cpWs9">
            <property role="TrG5h" value="listener" />
            <node concept="3uibUv" id="5XU7UUGbaRm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaRn" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaRo" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaRp" role="3cpWs9">
            <property role="TrG5h" value="mpsBreakpointListener" />
            <node concept="3uibUv" id="5XU7UUGbaRq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbaRr" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaRs" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaRt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaRu" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaRv" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaRw" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaRx" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaRy" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaN3" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaRz" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaR$" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaR_" role="37vLTx">
              <node concept="37vLTw" id="5XU7UUGbaRA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRu" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaRB" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaRC" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3Jxh" resolve="IMIBreakpointRegistry" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZmo" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaRE" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaRF" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaRG" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTemI" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRu" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaRI" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaRJ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZeR" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaRl" resolve="listener" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaRL" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaRM" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaRN" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdWA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRu" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaRP" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaRQ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaRR" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaRp" resolve="mpsBreakpointListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaRS" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbaRT" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaRU" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZm$" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaRW" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxj" resolve="getBreakpoints" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaRX" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaRY" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbaRZ" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGbaS0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaS1" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3nxOvgY3Jxj" resolve="getBreakpoints" />
              </node>
            </node>
            <node concept="1v1jN8" id="2npj2srbafw" role="2OqNvi" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaS3" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaS4" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaS5" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaS6" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JBx" resolve="register" />
              <node concept="37vLTw" id="5HxjapvQZrY" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaRl" resolve="listener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaS8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaS9" role="3cpWs9">
            <property role="TrG5h" value="breakpoint" />
            <node concept="3uibUv" id="5XU7UUGbaSa" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaSb" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaSc" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1ldM" resolve="AbstractMIBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaSd" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaSe" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZF6" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaRp" resolve="mpsBreakpointListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaSg" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3Jxw" resolve="addBreakpoint" />
              <node concept="37vLTw" id="5HxjapvQZwB" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaS9" resolve="breakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbaSi" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaSj" role="3vFALc">
            <node concept="2OqwBi" id="5XU7UUGbaSk" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdSy" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaSm" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3nxOvgY3Jxj" resolve="getBreakpoints" />
              </node>
            </node>
            <node concept="1v1jN8" id="2npj2srbbkk" role="2OqNvi" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaSo" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaSp" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdur" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaRp" resolve="mpsBreakpointListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaSr" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3nxOvgY3JxA" resolve="removeBreakpoint" />
              <node concept="37vLTw" id="5XU7UUGbaSs" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaS9" resolve="breakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaSt" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaSu" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbaSv" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdGj" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaRh" resolve="registry" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaSx" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3nxOvgY3Jxj" resolve="getBreakpoints" />
              </node>
            </node>
            <node concept="1v1jN8" id="2npj2srbcng" role="2OqNvi" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbaSz">
    <property role="TrG5h" value="MEDebugSession" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="2XrIbr" id="5XU7UUGbaS$" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbaS_" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbaSA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaSB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaSC" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaSD" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaSE" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbaSF" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbaSG" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbaSH" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbaSI" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbaSJ" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbaSK" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbaSL" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbaSM" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbaSN" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaSO" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaSP" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PUoN" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaSR" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaSS" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PUoX" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaSU" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaSV" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaSW" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaSX" role="37wK5m">
                                <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaSY" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaSZ" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaT0" role="37wK5m">
                                  <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaT1" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaT2" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaT3" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaT4" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaT5" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaT6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2pJszzmYZPe" role="3cqZAp">
                          <node concept="2OqwBi" id="2pJszzmYZP_" role="3clFbG">
                            <node concept="3P9mCS" id="2pJszzmYZPf" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJHe" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2pJszzmYZPH" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2pJszzmYZPJ" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PJHk" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaT7" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaT8" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaT9" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTa" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTb" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaTc" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="6ZadL_R54rR" role="3cqZAp">
                          <node concept="2OqwBi" id="6ZadL_R54sa" role="3clFbG">
                            <node concept="3P9mCS" id="6ZadL_R54rS" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJHF" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6ZadL_R54si" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="6ZadL_R54sk" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PJHP" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:6MI7HAgl_fw" resolve="IMProgramStatePovider" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTd" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTe" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTf" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTg" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JxG" resolve="IMIMpsBreakpointListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTh" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaTi" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JxI" resolve="MEBreakpointRegistryImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2SEaHiJSTjf" role="3cqZAp">
                          <node concept="2OqwBi" id="2SEaHiJSTjg" role="3clFbG">
                            <node concept="2OqwBi" id="2SEaHiJSTk7" role="2Oq$k0">
                              <node concept="3P9mCS" id="2SEaHiJSTjh" role="2Oq$k0">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                <node concept="3VsKOn" id="2SEaHiJSTjD" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                                </node>
                              </node>
                              <node concept="liA8E" id="2SEaHiJSTkh" role="2OqNvi">
                                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                                <node concept="2YIFZM" id="2SEaHiJSTkp" role="37wK5m">
                                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                                  <node concept="Xl_RD" id="2SEaHiJSTku" role="37wK5m">
                                    <property role="Xl_RC" value="binary" />
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="2SEaHiJSTjj" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2SEaHiJSTkD" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2SEaHiJSTkI" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:57r6BQpGnfF" resolve="TNodeProxy" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTj" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTk" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTl" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTm" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTn" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaTo" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaTp" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTq" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTr" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTs" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTt" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTu" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbaTv" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTw" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTx" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTy" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTz" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaT$" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaT_" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaTA" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3nxOvgY3JwO" resolve="IMIBreakpointListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTB" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTC" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTD" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJHZ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTF" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaTG" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="69Byf55PJI9" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTI" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTJ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJIj" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTM" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaTN" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PJIt" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbaTP" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaTQ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaTR" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaTS" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaTT" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaTU" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaTV" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="2SEaHiJTLKb" role="3cqZAp">
                          <node concept="2OqwBi" id="2SEaHiJTLKB" role="3clFbG">
                            <node concept="3P9mCS" id="2SEaHiJTLKc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2SEaHiJTLKn" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2SEaHiJTL8U" resolve="IDebugPositionConfigurator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="2SEaHiJTLKJ" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="2SEaHiJTLKL" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2SEaHiJTLKW" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2SEaHiJTL8U" resolve="IDebugPositionConfigurator" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbaTW" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdyU" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbaSC" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbaTY" role="1B3o_S" />
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaTZ" role="1SL9yI">
      <property role="TrG5h" value="queryResults" />
      <node concept="3cqZAl" id="5XU7UUGbaU0" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaU1" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaU2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaU3" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="69Byf55PJIx" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaU5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaU6" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="69Byf55PJIz" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaU8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaU9" role="3cpWs9">
            <property role="TrG5h" value="ctxMock" />
            <node concept="3uibUv" id="5XU7UUGbaUa" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaUb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaUc" role="3cpWs9">
            <property role="TrG5h" value="debugSessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbaUd" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaUe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaUf" role="3cpWs9">
            <property role="TrG5h" value="debugSession" />
            <node concept="3uibUv" id="5XU7UUGbaUg" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaUh" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaUi" role="3cpWs9">
            <property role="TrG5h" value="initialState" />
            <node concept="3uibUv" id="5XU7UUGbaUj" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaUk" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaUl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaUm" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaUn" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaUo" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaUp" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaUq" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaS$" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaUr" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaUs" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaUt" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZSB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaUm" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaUv" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJIE" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaUx" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaU3" resolve="session" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaUy" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaUz" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaU$" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZj1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaUm" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaUA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJIO" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaUC" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaU6" resolve="stepper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaUD" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaUE" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZnl" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaU9" resolve="ctxMock" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaUG" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZmh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaUm" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaUI" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaUJ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaUK" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaUL" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZEx" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaUc" resolve="debugSessionAccess" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaUN" role="37vLTx">
              <node concept="37vLTw" id="5XU7UUGbaUO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaUm" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaUP" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaUQ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaUR" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaUS" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZHZ" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaUf" resolve="debugSession" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbaUU" role="37vLTx">
              <node concept="3uibUv" id="5XU7UUGbaUV" role="10QFUM">
                <ref role="3uigEE" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbaUW" role="10QFUP">
                <node concept="37vLTw" id="5XU7UUGbaUX" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbaUm" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbaUY" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbaUZ" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaV0" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaV1" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZCF" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaUf" resolve="debugSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaV3" role="2OqNvi">
              <ref role="37wK5l" to="1l1h:3SnNvqCaK9U" resolve="setProcessHandler" />
              <node concept="2YIFZM" id="5XU7UUGbaV4" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbaV5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5T7wkC8$beu" resolve="MIProcessHandler" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaV6" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaV7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaV8" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PJIT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaVa" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJJ0" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaVc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVd" role="3cpWs9">
            <property role="TrG5h" value="contexMockt" />
            <node concept="3uibUv" id="5XU7UUGbaVe" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaVf" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaVg" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaVh" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVi" role="3cpWs9">
            <property role="TrG5h" value="sessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbaVj" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaVk" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaVl" role="37wK5m">
                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmYLwJ" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmYLwK" role="3cpWs9">
            <property role="TrG5h" value="pendingBreakpointSetter" />
            <node concept="3uibUv" id="69Byf55PJIU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
            </node>
            <node concept="2YIFZM" id="2pJszzmYLwN" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PJJa" role="37wK5m">
                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaVm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVn" role="3cpWs9">
            <property role="TrG5h" value="errorReporter" />
            <node concept="3uibUv" id="5XU7UUGbaVo" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaVp" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaVq" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaVr" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVs" role="3cpWs9">
            <property role="TrG5h" value="attachedState" />
            <node concept="3uibUv" id="5XU7UUGbaVt" role="1tU5fm">
              <ref role="3uigEE" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaVu" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaVv" role="2ShVmc">
                <ref role="37wK5l" to="x30c:ZH$a4XsByW" resolve="MEDebugSessionAttachedState" />
                <node concept="37vLTw" id="5HxjapvQZ5Q" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVd" resolve="contexMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZkS" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaV8" resolve="sessionMock" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbaVy" role="37wK5m" />
                <node concept="37vLTw" id="5XU7UUGbaVz" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVi" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZbj" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVn" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLx2" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLwK" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbaV_" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaVA" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbaVB" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaVs" resolve="attachedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaVC" role="2OqNvi">
              <ref role="37wK5l" to="x30c:ZH$a4XsB_I" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaVD" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaVE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVF" role="3cpWs9">
            <property role="TrG5h" value="pausedState" />
            <node concept="3uibUv" id="5XU7UUGbaVG" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaVH" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaVI" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagczA" resolve="MEDebugSessionPausedState" />
                <node concept="37vLTw" id="5HxjapvTdMb" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVd" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbaVK" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbaVL" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZdl" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVi" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaVN" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVn" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZpH" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLwK" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaVO" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaVP" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTekP" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaVF" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaVR" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$F" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaVS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaVT" role="3cpWs9">
            <property role="TrG5h" value="runningState" />
            <node concept="3uibUv" id="5XU7UUGbaVU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaVV" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaVW" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyr" resolve="MEDebugSessionRunningState" />
                <node concept="37vLTw" id="5HxjapvQZzm" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVd" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbaVY" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbaVZ" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdD2" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVi" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZMF" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVn" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZgw" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLwK" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbaW2" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaW3" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZ$x" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaVT" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaW5" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagcy$" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaW6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaW7" role="3cpWs9">
            <property role="TrG5h" value="stoppedState" />
            <node concept="3uibUv" id="5XU7UUGbaW8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaW9" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaWa" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagcAb" resolve="MEDebugSessionStoppedState" />
                <node concept="37vLTw" id="5HxjapvTe1L" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVd" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbaWc" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbaWd" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZRv" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVi" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZQU" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVn" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZAk" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLwK" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbaWg" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaWh" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvTel6" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaW7" resolve="stoppedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaWj" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcBg" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWl" role="3cpWs9">
            <property role="TrG5h" value="waitingState" />
            <node concept="3uibUv" id="5XU7UUGbaWm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaWn" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaWo" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$L" resolve="MEDebugSessionWaitingAttachState" />
                <node concept="37vLTw" id="5HxjapvQZk_" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVd" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbaWq" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbaWr" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdQH" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVi" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZO6" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaVn" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZaz" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLwK" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbaWu" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaWv" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbaWw" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaWl" resolve="waitingState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaWx" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc_Q" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaWy" role="1SL9yI">
      <property role="TrG5h" value="debugCommands" />
      <node concept="3cqZAl" id="5XU7UUGbaWz" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaW$" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaW_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWA" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="69Byf55PJJh" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWD" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="69Byf55PJJf" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWG" role="3cpWs9">
            <property role="TrG5h" value="ctxMock" />
            <node concept="3uibUv" id="5XU7UUGbaWH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWI" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWJ" role="3cpWs9">
            <property role="TrG5h" value="debugSessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbaWK" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWM" role="3cpWs9">
            <property role="TrG5h" value="debugSession" />
            <node concept="3uibUv" id="5XU7UUGbaWN" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaWO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWP" role="3cpWs9">
            <property role="TrG5h" value="initialState" />
            <node concept="3uibUv" id="5XU7UUGbaWQ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaWR" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaWS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaWT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaWU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaWV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbaWW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbaWX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbaS$" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaWY" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaWZ" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaX0" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvQZbb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaWT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaX2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJJo" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZp9" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaWA" resolve="session" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaX5" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaX6" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaX7" role="37vLTx">
              <node concept="37vLTw" id="5XU7UUGbaX8" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaWT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaX9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJJy" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGbaXb" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaWD" resolve="stepper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaXc" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaXd" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaXe" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaWG" resolve="ctxMock" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaXf" role="37vLTx">
              <node concept="37vLTw" id="5HxjapvTdGn" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaWT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaXh" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaXi" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaXj" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaXk" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaXl" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaWJ" resolve="debugSessionAccess" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbaXm" role="37vLTx">
              <node concept="37vLTw" id="5XU7UUGbaXn" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaWT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaXo" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbaXp" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaXq" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaXr" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTd$x" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGbaWM" resolve="debugSession" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbaXt" role="37vLTx">
              <node concept="3uibUv" id="5XU7UUGbaXu" role="10QFUM">
                <ref role="3uigEE" to="x30c:6WfZQfTHrhU" resolve="MIDebugSession" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbaXv" role="10QFUP">
                <node concept="37vLTw" id="5HxjapvTdOt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbaWT" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbaXx" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbaXy" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaXz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaX$" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZu3" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaWM" resolve="debugSession" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaXA" role="2OqNvi">
              <ref role="37wK5l" to="1l1h:3SnNvqCaK9U" resolve="setProcessHandler" />
              <node concept="2YIFZM" id="5XU7UUGbaXB" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="5XU7UUGbaXC" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5T7wkC8$beu" resolve="MIProcessHandler" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaXD" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaXE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaXF" role="3cpWs9">
            <property role="TrG5h" value="sessMock" />
            <node concept="3uibUv" id="69Byf55PJJB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaXH" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PJKh" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJKq" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70tWg" role="3clFbG">
            <node concept="37vLTw" id="6L3DaT70tW3" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="6L3DaT70tWm" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT70tWo" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70xfY" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJKx" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="6L3DaT70xg7" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJKD" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJKE" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZvX" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJKG" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagW" resolve="pause" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJKH" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJKI" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJKJ" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PJKK" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJKQ" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJKR" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZlx" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJKT" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJKU" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJKV" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJKW" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJKX" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="6L3DaT70tWH" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaXJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaXK" role="3cpWs9">
            <property role="TrG5h" value="ctxMockt" />
            <node concept="3uibUv" id="5XU7UUGbaXL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaXM" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaXN" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaXO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaXP" role="3cpWs9">
            <property role="TrG5h" value="steppMock" />
            <node concept="3uibUv" id="69Byf55PJJF" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaXR" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PJJU" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJL_" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70tWM" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdxG" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="6L3DaT70tWU" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
              <node concept="2YIFZM" id="6L3DaT70tWW" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="6L3DaT70tX1" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJLd" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJLe" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJLf" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJLg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJLD" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJLE" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ6P" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJLG" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
              <node concept="2YIFZM" id="69Byf55PJLH" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="69Byf55PJLI" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJLl" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJLm" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJLn" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PJLo" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJLM" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJLN" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZdC" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJLP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
              <node concept="2YIFZM" id="69Byf55PJLQ" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="69Byf55PJLR" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJLt" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJLu" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJLv" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PJLw" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="6L3DaT70tWI" role="3cqZAp" />
        <node concept="3clFbF" id="6L3DaT70tXB" role="3cqZAp">
          <node concept="2YIFZM" id="6L3DaT70tXD" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="6L3DaT70tXE" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT70tXG" role="3cqZAp">
          <node concept="2YIFZM" id="6L3DaT70tXH" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="6L3DaT70tXJ" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="6L3DaT70tXF" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbaXT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaXU" role="3cpWs9">
            <property role="TrG5h" value="sessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbaXV" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaXW" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaXX" role="37wK5m">
                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaXY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaXZ" role="3cpWs9">
            <property role="TrG5h" value="errorReporter" />
            <node concept="3uibUv" id="5XU7UUGbaY0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaY1" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaY2" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmYLxb" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmYLxc" role="3cpWs9">
            <property role="TrG5h" value="pendingBreakpointSetter" />
            <node concept="3uibUv" id="69Byf55PJLX" role="1tU5fm">
              <ref role="3uigEE" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
            </node>
            <node concept="2YIFZM" id="2pJszzmYLxe" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJM3" role="37wK5m">
                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaY3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaY4" role="3cpWs9">
            <property role="TrG5h" value="attachedState" />
            <node concept="3uibUv" id="5XU7UUGbaY5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaY6" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaY7" role="2ShVmc">
                <ref role="37wK5l" to="x30c:ZH$a4XsByW" resolve="MEDebugSessionAttachedState" />
                <node concept="37vLTw" id="5HxjapvTdBH" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXK" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZ8w" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaYa" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZfK" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXU" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaYc" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXZ" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLxj" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLxc" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaYd" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaYe" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaYf" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaYg" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbaYh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaY4" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaYi" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsBzl" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaYp" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaYq" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaYr" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaYs" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZuQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaY4" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaYu" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB$C" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbaYv" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaYw" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaYx" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaYy" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaYz" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ$3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaY4" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaY_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB$h" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbaYA" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaYB" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaYC" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaYD" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaYE" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZfG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaY4" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaYG" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB_2" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbaYH" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaYO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaYP" role="3cpWs9">
            <property role="TrG5h" value="pausedState" />
            <node concept="3uibUv" id="5XU7UUGbaYQ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaYR" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaYS" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagczA" resolve="MEDebugSessionPausedState" />
                <node concept="37vLTw" id="5HxjapvQZSk" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXK" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZ9G" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTe07" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaYW" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXU" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZqU" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXZ" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZfq" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLxc" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaYY" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaYZ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaZ0" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaZ1" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZuo" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaY4" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaZ3" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsBzl" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZ4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZ5" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaZ6" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaYP" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZ7" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagczF" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZ8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZ9" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdva" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaYP" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZb" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$l" resolve="stepOut" />
              <node concept="10Nm6u" id="5XU7UUGbaZc" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZd" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZe" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaZf" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaYP" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZg" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$3" resolve="stepOver" />
              <node concept="10Nm6u" id="5XU7UUGbaZh" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZi" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZj" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZb4" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaYP" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZl" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$b" resolve="stepInto" />
              <node concept="10Nm6u" id="5XU7UUGbaZm" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZn" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZo" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaZp" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaYP" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZq" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75VpA" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaZr" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaZs" role="3cpWs9">
            <property role="TrG5h" value="runningState" />
            <node concept="3uibUv" id="5XU7UUGbaZt" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaZu" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaZv" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyr" resolve="MEDebugSessionRunningState" />
                <node concept="37vLTw" id="5XU7UUGbaZw" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXK" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaZx" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdQ2" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdBi" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXU" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbaZ$" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXZ" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdwB" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLxc" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZ_" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZA" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdJL" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZC" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagczk" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaZD" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaZE" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTeqn" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaZG" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagczs" resolve="pause" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaZH" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaZI" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaZJ" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaZK" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZaY" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaZM" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyw" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaZN" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaZO" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaZP" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaZQ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTejR" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaZS" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcz4" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbaZT" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbaZU" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbaZV" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbaZW" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbaZX" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZzT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaZZ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagczc" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbb00" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb01" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb02" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb03" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb04" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb05" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaZs" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb06" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagcyU" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbb07" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb08" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb09" role="3cpWs9">
            <property role="TrG5h" value="stoppedState" />
            <node concept="3uibUv" id="5XU7UUGbb0a" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb0b" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb0c" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagcAb" resolve="MEDebugSessionStoppedState" />
                <node concept="37vLTw" id="5HxjapvTdK$" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXK" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZJ_" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZxd" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdCC" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXU" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb0h" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXZ" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZFx" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLxc" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbb0i" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb0j" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbb0k" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb09" resolve="stoppedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb0l" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcBg" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb0m" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb0n" role="3cpWs9">
            <property role="TrG5h" value="waitState" />
            <node concept="3uibUv" id="5XU7UUGbb0o" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb0p" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb0q" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$L" resolve="MEDebugSessionWaitingAttachState" />
                <node concept="37vLTw" id="5HxjapvTdXh" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXK" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvTd_T" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXF" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb0t" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXP" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZtw" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXU" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb0v" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbaXZ" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZQD" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLxc" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb0w" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb0x" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb0y" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb0z" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTepr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb0_" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$Y" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb0A" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb0B" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb0C" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb0D" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZCJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb0F" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$Q" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb0G" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb0H" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb0I" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb0J" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb0K" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb0L" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_m" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbb0M" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb0N" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb0O" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb0P" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb0Q" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ4y" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb0S" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_e" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbb0T" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb0U" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb0V" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb0W" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb0X" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdKt" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb0Z" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_w" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbb10" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb11" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb12" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb13" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb0n" resolve="waitState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb14" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc_6" resolve="detach" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbb3j">
    <property role="TrG5h" value="MEDebugSessionStates" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="1LZb2c" id="5XU7UUGbb3k" role="1SL9yI">
      <property role="TrG5h" value="fromWaitingAttachedToAttached" />
      <node concept="3cqZAl" id="5XU7UUGbb3l" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb3m" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb3n" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb3o" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb3p" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb3q" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb3r" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb3s" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                <node concept="3VsKOn" id="5XU7UUGbb3t" role="2XxRq1">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb3u" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb3v" role="3cpWs9">
            <property role="TrG5h" value="currentState" />
            <node concept="3uibUv" id="5XU7UUGbb3w" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb3x" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ9A" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb3o" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb3z" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb3$" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb3_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb3A" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="69Byf55PJNV" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb3C" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdrF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb3o" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb3E" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJO1" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb3G" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb3H" role="3cpWs9">
            <property role="TrG5h" value="context" />
            <node concept="3uibUv" id="5XU7UUGbb3I" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb3J" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdD0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb3o" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb3L" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb3M" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb3N" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb3O" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb3P" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb3H" resolve="context" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb3Q" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
              <node concept="2YIFZM" id="5XU7UUGbb3R" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbb3S" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbb3T" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGbb3U" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGbb3V" role="2ZW6by">
              <ref role="3uigEE" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZds" role="2ZW6bz">
              <ref role="3cqZAo" node="5XU7UUGbb3v" resolve="currentState" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb3X" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb3Y" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb3Z" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb3H" resolve="context" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb40" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
              <node concept="2YIFZM" id="5XU7UUGbb41" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbb42" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb43" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb44" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbb45" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb46" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb47" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb48" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGbb49" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb3H" resolve="context" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb4a" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb4b" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZmy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb3v" resolve="currentState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb4d" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KTe" resolve="debuggerAttached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb4e" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb4f" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTdDT" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb3H" resolve="context" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb4h" role="1SL9yI">
      <property role="TrG5h" value="InvalidDebuggerEventsInWaitingState" />
      <node concept="3cqZAl" id="5XU7UUGbb4i" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb4j" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb4k" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb4l" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb4m" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb4n" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb4o" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb4p" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                <node concept="3VsKOn" id="5XU7UUGbb4q" role="2XxRq1">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb4r" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb4s" role="3cpWs9">
            <property role="TrG5h" value="currentState" />
            <node concept="3uibUv" id="5XU7UUGbb4t" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb4u" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdAA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb4l" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb4w" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb4x" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb4y" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb4z" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="69Byf55PJO6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb4_" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZab" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb4l" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb4B" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJOi" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb4D" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb4E" role="3cpWs9">
            <property role="TrG5h" value="context" />
            <node concept="3uibUv" id="5XU7UUGbb4F" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb4G" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZQS" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb4l" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb4I" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb4J" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb4K" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbb4L" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbb4M" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb4N" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb4O" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb4s" resolve="currentState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb4P" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbb4Q" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb4R" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbb4S" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb4T" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdRW" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb4s" resolve="currentState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb4V" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbb4Y" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb4Z" role="1SL9yI">
      <property role="TrG5h" value="ErrorHandlingInWaitingState" />
      <node concept="3cqZAl" id="5XU7UUGbb50" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb51" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVuS" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbb52" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbb53" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbb54" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb55" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbb56" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbb57" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                  <node concept="3VsKOn" id="5XU7UUGbb58" role="2XxRq1">
                    <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuT" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbb59" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbb5a" role="3cpWs9">
              <property role="TrG5h" value="currentState" />
              <node concept="3uibUv" id="5XU7UUGbb5b" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb5c" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbb5d" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb53" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb5e" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbb5f" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuU" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbb5g" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbb5h" role="3cpWs9">
              <property role="TrG5h" value="mSession" />
              <node concept="3uibUv" id="6L3DaT6ZvMC" role="1tU5fm">
                <ref role="3uigEE" to="x30c:5HSnKgHLgM9" resolve="ISession" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb5j" role="33vP2m">
                <node concept="37vLTw" id="5XU7UUGbb5k" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb53" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb5l" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="6L3DaT6ZvMO" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:5HSnKgHLgM9" resolve="ISession" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuV" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbb5n" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbb5o" role="3cpWs9">
              <property role="TrG5h" value="context" />
              <node concept="3uibUv" id="5XU7UUGbb5p" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb5q" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdFs" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb53" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb5s" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbb5t" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuW" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbb5u" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuX" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6ZvQ6" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6ZvQ7" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZlm" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb5a" resolve="currentState" />
              </node>
              <node concept="liA8E" id="6L3DaT6ZvQ9" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi7" resolve="exceptionOccurred" />
                <node concept="2YIFZM" id="6L3DaT6ZvQa" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="6L3DaT6ZvQb" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~Exception" resolve="Exception" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuY" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbb5$" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVuZ" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbb5_" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbb5A" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZhH" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb5o" resolve="context" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb5C" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
                <node concept="2YIFZM" id="5XU7UUGbb5D" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="5XU7UUGbb5E" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv0" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbb5F" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbb5G" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGbb5H" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGbb5I" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGbb5J" role="37wK5m">
                    <node concept="37vLTw" id="5XU7UUGbb5K" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbb5o" resolve="context" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbb5L" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:1ocxQ0MDOso" resolve="getState" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbb5M" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="5XU7UUGbb5N" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbb5O" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbb5P" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv1" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbb5Q" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbb5R" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <node concept="37vLTw" id="5HxjapvTekH" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbb5o" resolve="context" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv2" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="6L3DaT6ZvPU" role="8Wnug">
            <node concept="2OqwBi" id="6L3DaT6ZvPV" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdW7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb5a" resolve="currentState" />
              </node>
              <node concept="liA8E" id="6L3DaT6ZvPX" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi7" resolve="exceptionOccurred" />
                <node concept="2YIFZM" id="6L3DaT6ZvQ3" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="6L3DaT6ZvQ4" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~Exception" resolve="Exception" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv3" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbb5Y" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbb5Z" role="3clFbG">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <node concept="37vLTw" id="5HxjapvTdMk" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbb5o" resolve="context" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb61" role="1SL9yI">
      <property role="TrG5h" value="fromAttachedToRunning" />
      <node concept="3cqZAl" id="5XU7UUGbb62" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb63" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb64" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb65" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb66" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb67" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb68" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb69" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                <node concept="3VsKOn" id="5XU7UUGbb6a" role="2XxRq1">
                  <ref role="3VsUkX" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb6b" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb6c" role="3cpWs9">
            <property role="TrG5h" value="currentState" />
            <node concept="3uibUv" id="5XU7UUGbb6d" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb6e" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdFX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb65" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb6g" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb6h" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb6i" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb6j" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="69Byf55PJOm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb6l" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdZ$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb65" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb6n" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJOs" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb6p" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb6q" role="3cpWs9">
            <property role="TrG5h" value="context" />
            <node concept="3uibUv" id="5XU7UUGbb6r" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb6s" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbb6t" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb65" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb6u" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb6v" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb6w" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbb6x" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGbb6y" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGbb6z" role="2ZW6by">
              <ref role="3uigEE" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
            </node>
            <node concept="37vLTw" id="5HxjapvTdvw" role="2ZW6bz">
              <ref role="3cqZAo" node="5XU7UUGbb6c" resolve="currentState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb6_" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb6A" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb6B" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb6C" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb6q" resolve="context" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb6D" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
              <node concept="2YIFZM" id="5XU7UUGbb6E" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbb6F" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb6G" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb6H" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb6I" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb6J" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZrK" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb6q" resolve="context" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb6L" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb6M" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb6N" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb6O" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb6c" resolve="currentState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb6P" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z38eRB" resolve="debuggerResumed" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb6Q" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb6R" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTe44" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb6q" resolve="context" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb6T" role="1SL9yI">
      <property role="TrG5h" value="fromRunningToSuspended" />
      <node concept="3cqZAl" id="5XU7UUGbb6U" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb6V" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb6W" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb6X" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb6Y" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb6Z" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb70" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb71" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                <node concept="3VsKOn" id="5XU7UUGbb72" role="2XxRq1">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb73" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb74" role="3cpWs9">
            <property role="TrG5h" value="currentState" />
            <node concept="3uibUv" id="5XU7UUGbb75" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb76" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZwJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb6X" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb78" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb79" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb7a" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb7b" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="69Byf55PJOx" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb7d" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTduP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb6X" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb7f" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJOH" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb7h" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb7i" role="3cpWs9">
            <property role="TrG5h" value="context" />
            <node concept="3uibUv" id="5XU7UUGbb7j" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb7k" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGbb7l" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb6X" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb7m" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb7n" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb7o" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGbb7p" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGbb7q" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGbb7r" role="2ZW6by">
              <ref role="3uigEE" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
            </node>
            <node concept="37vLTw" id="5HxjapvTdu3" role="2ZW6bz">
              <ref role="3cqZAo" node="5XU7UUGbb74" resolve="currentState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb7t" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb7u" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb7v" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdIy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb7i" resolve="context" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb7x" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
              <node concept="2YIFZM" id="5XU7UUGbb7y" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbb7z" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb7$" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb7_" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb7A" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb7B" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbb7C" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb7i" resolve="context" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb7D" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb7E" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb7F" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbb7G" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb74" resolve="currentState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb7H" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KTi" resolve="debuggerSuspended" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb7K" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb7L" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTdBz" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb7i" resolve="context" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb7N" role="1SL9yI">
      <property role="TrG5h" value="fromSuspendedToStopped" />
      <node concept="3cqZAl" id="5XU7UUGbb7O" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb7P" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb7Q" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb7R" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb7S" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb7T" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb7U" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb7V" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                <node concept="3VsKOn" id="5XU7UUGbb7W" role="2XxRq1">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb7X" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb7Y" role="3cpWs9">
            <property role="TrG5h" value="currentState" />
            <node concept="3uibUv" id="5XU7UUGbb7Z" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb80" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdOO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb7R" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb82" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb83" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb84" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb85" role="3cpWs9">
            <property role="TrG5h" value="mSession" />
            <node concept="3uibUv" id="69Byf55PJOL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb87" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdVz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb7R" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb89" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="69Byf55PJOR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb8b" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb8c" role="3cpWs9">
            <property role="TrG5h" value="context" />
            <node concept="3uibUv" id="5XU7UUGbb8d" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb8e" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZDh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb7R" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb8g" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGbb8h" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbb8i" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGbb8j" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGbb8k" role="2ZW6by">
              <ref role="3uigEE" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZbD" role="2ZW6bz">
              <ref role="3cqZAo" node="5XU7UUGbb7Y" resolve="currentState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb8m" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb8n" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb8o" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.reset(java.lang.Object...):void" resolve="reset" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbb8p" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb8c" resolve="context" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb8q" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb8r" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb8s" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdU5" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb8c" resolve="context" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb8u" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
              <node concept="2YIFZM" id="5XU7UUGbb8v" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbb8w" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb8x" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb8y" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTejh" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb8c" resolve="context" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb8$" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb8_" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZhR" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb7Y" resolve="currentState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb8B" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KT6" resolve="debuggerDetached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb8C" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb8D" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvQZgB" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb8c" resolve="context" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb8F" role="1SL9yI">
      <property role="TrG5h" value="queryResults" />
      <node concept="3cqZAl" id="5XU7UUGbb8G" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb8H" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb8I" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb8J" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="69Byf55PJP7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb8L" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJPd" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb8N" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb8O" role="3cpWs9">
            <property role="TrG5h" value="contexMockt" />
            <node concept="3uibUv" id="5XU7UUGbb8P" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb8Q" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbb8R" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb8S" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb8T" role="3cpWs9">
            <property role="TrG5h" value="sessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbb8U" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb8V" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbb8W" role="37wK5m">
                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb8X" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb8Y" role="3cpWs9">
            <property role="TrG5h" value="errorReporter" />
            <node concept="3uibUv" id="5XU7UUGbb8Z" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb90" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbb91" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmYLzf" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmYLzg" role="3cpWs9">
            <property role="TrG5h" value="pendingBreakpointSetter" />
            <node concept="3uibUv" id="69Byf55PJOW" role="1tU5fm">
              <ref role="3uigEE" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
            </node>
            <node concept="2YIFZM" id="2pJszzmYLzi" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="69Byf55PJP2" role="37wK5m">
                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb92" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb93" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb94" role="3cpWs9">
            <property role="TrG5h" value="attachedState" />
            <node concept="3uibUv" id="5XU7UUGbb95" role="1tU5fm">
              <ref role="3uigEE" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb96" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb97" role="2ShVmc">
                <ref role="37wK5l" to="x30c:ZH$a4XsByW" resolve="MEDebugSessionAttachedState" />
                <node concept="37vLTw" id="5HxjapvTeli" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8O" resolve="contexMockt" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb99" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8J" resolve="sessionMock" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbb9a" role="37wK5m" />
                <node concept="37vLTw" id="5XU7UUGbb9b" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8T" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb9c" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8Y" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdzH" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLzg" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbb9d" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb9e" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbb9f" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb94" resolve="attachedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb9g" role="2OqNvi">
              <ref role="37wK5l" to="x30c:ZH$a4XsB_I" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb9h" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb9i" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb9j" role="3cpWs9">
            <property role="TrG5h" value="pausedState" />
            <node concept="3uibUv" id="5XU7UUGbb9k" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb9l" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb9m" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagczA" resolve="MEDebugSessionPausedState" />
                <node concept="37vLTw" id="5HxjapvTekR" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8O" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbb9o" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbb9p" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdEi" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8T" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZjA" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8Y" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLzp" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLzg" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbb9s" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb9t" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdUx" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb9j" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb9v" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$F" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb9w" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb9x" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb9y" role="3cpWs9">
            <property role="TrG5h" value="runningState" />
            <node concept="3uibUv" id="5XU7UUGbb9z" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb9$" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb9_" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyr" resolve="MEDebugSessionRunningState" />
                <node concept="37vLTw" id="5HxjapvTdD_" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8O" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbb9B" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbb9C" role="37wK5m" />
                <node concept="37vLTw" id="5XU7UUGbb9D" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8T" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbb9E" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8Y" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdGS" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLzg" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbb9F" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb9G" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZ$Y" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb9y" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb9I" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagcy$" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb9J" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb9K" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb9L" role="3cpWs9">
            <property role="TrG5h" value="stoppedState" />
            <node concept="3uibUv" id="5XU7UUGbb9M" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbb9N" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbb9O" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagcAb" resolve="MEDebugSessionStoppedState" />
                <node concept="37vLTw" id="5XU7UUGbb9P" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8O" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbb9Q" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbb9R" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdGz" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8T" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZDn" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8Y" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZvi" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLzg" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbb9U" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb9V" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvQZmL" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb9L" resolve="stoppedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb9X" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcBg" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb9Y" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb9Z" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbba0" role="3cpWs9">
            <property role="TrG5h" value="waitingState" />
            <node concept="3uibUv" id="5XU7UUGbba1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbba2" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbba3" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$L" resolve="MEDebugSessionWaitingAttachState" />
                <node concept="37vLTw" id="5HxjapvTdIW" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8O" resolve="contexMockt" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbba5" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbba6" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZQ7" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8T" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZ4f" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb8Y" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLzv" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLzg" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbba9" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbaa" role="3vFALc">
            <node concept="37vLTw" id="5HxjapvTdsu" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbba0" resolve="waitingState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbac" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc_Q" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbad" role="1SL9yI">
      <property role="TrG5h" value="handlingErrors" />
      <node concept="3cqZAl" id="5XU7UUGbbae" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbaf" role="3clF47">
        <node concept="1X3_iC" id="3AWqwDspVv4" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbag" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbah" role="3cpWs9">
              <property role="TrG5h" value="injector" />
              <node concept="3uibUv" id="5XU7UUGbbai" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbaj" role="33vP2m">
                <node concept="2WthIp" id="5XU7UUGbbak" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGbbal" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGbbeG" resolve="injectDependencies" />
                  <node concept="3VsKOn" id="5XU7UUGbbam" role="2XxRq1">
                    <ref role="3VsUkX" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv5" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="5XU7UUGbban" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv6" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbao" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbap" role="3cpWs9">
              <property role="TrG5h" value="contexMock" />
              <node concept="3uibUv" id="5XU7UUGbbaq" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbar" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvQZLt" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbah" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbat" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbau" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv7" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbav" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbaw" role="3cpWs9">
              <property role="TrG5h" value="sessionAccess" />
              <node concept="3uibUv" id="5XU7UUGbbax" role="1tU5fm">
                <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbay" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdxA" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbah" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbba$" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbba_" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv8" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3cpWs8" id="5XU7UUGbbaA" role="8Wnug">
            <node concept="3cpWsn" id="5XU7UUGbbaB" role="3cpWs9">
              <property role="TrG5h" value="waitingState" />
              <node concept="3uibUv" id="5XU7UUGbbaC" role="1tU5fm">
                <ref role="3uigEE" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbbaD" role="33vP2m">
                <node concept="37vLTw" id="5HxjapvTdBD" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbah" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbaF" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbbaG" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVv9" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbaH" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbaI" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbaJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbap" resolve="contexMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbaK" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagcxA" resolve="setState" />
                <node concept="2YIFZM" id="5XU7UUGbbaL" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbaM" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVva" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbaN" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbaO" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGbbaP" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGbbaQ" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGbbaR" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZEh" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbbap" resolve="contexMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbbaT" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:1ocxQ0MDOso" resolve="getState" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbbaU" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="2YIFZM" id="5XU7UUGbbaV" role="37wK5m">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbbaW" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbaX" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVvb" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbaY" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbaZ" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5HxjapvTdIk" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbap" resolve="contexMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVvc" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT70Fej" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVvd" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbb1" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGbbb2" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZnh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbaB" resolve="waitingState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbb4" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5HSnKgHPEi7" resolve="exceptionOccurred" />
                <node concept="2YIFZM" id="6L3DaT6ZvPR" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                  <node concept="3VsKOn" id="6L3DaT6ZvPT" role="37wK5m">
                    <ref role="3VsUkX" to="wyt6:~Exception" resolve="Exception" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="3AWqwDspVve" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbH" id="6L3DaT70Fei" role="8Wnug" />
        </node>
        <node concept="1X3_iC" id="3AWqwDspVvf" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGbbb6" role="8Wnug">
            <node concept="2YIFZM" id="5XU7UUGbbb7" role="3clFbG">
              <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="37vLTw" id="5XU7UUGbbb8" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbbap" resolve="contexMock" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbb9" role="1SL9yI">
      <property role="TrG5h" value="debugCommands" />
      <node concept="3cqZAl" id="5XU7UUGbbba" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbbb" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbbc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbd" role="3cpWs9">
            <property role="TrG5h" value="sessMock" />
            <node concept="3uibUv" id="69Byf55PJPD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2fjdrD4GagL" resolve="IMSession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbbf" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJPP" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbbh" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbi" role="3cpWs9">
            <property role="TrG5h" value="ctxMockt" />
            <node concept="3uibUv" id="5XU7UUGbbbj" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbbk" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbbl" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbbm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbn" role="3cpWs9">
            <property role="TrG5h" value="steppMock" />
            <node concept="3uibUv" id="69Byf55PJPi" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbbp" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJPx" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbbr" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbs" role="3cpWs9">
            <property role="TrG5h" value="sessionAccess" />
            <node concept="3uibUv" id="5XU7UUGbbbt" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbbu" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbbv" role="37wK5m">
                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbbw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbx" role="3cpWs9">
            <property role="TrG5h" value="errorReporter" />
            <node concept="3uibUv" id="5XU7UUGbbby" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbbz" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbb$" role="37wK5m">
                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2pJszzmYLyM" role="3cqZAp">
          <node concept="3cpWsn" id="2pJszzmYLyN" role="3cpWs9">
            <property role="TrG5h" value="pendingBreakpointSetter" />
            <node concept="3uibUv" id="69Byf55PJPX" role="1tU5fm">
              <ref role="3uigEE" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
            </node>
            <node concept="2YIFZM" id="2pJszzmYLyR" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="69Byf55PJQ3" role="37wK5m">
                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbb_" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55PJQg" role="3cqZAp">
          <node concept="2OqwBi" id="6L3DaT70$Av" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdDx" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="6L3DaT70$A_" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSQ" resolve="stepInto" />
              <node concept="2YIFZM" id="6L3DaT70$AB" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="6L3DaT70$AD" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJQn" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJQG" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJQv" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="69Byf55PJQL" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJQM" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJQN" role="3clFbG">
            <node concept="37vLTw" id="69Byf55PJQO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJQP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSU" resolve="stepOut" />
              <node concept="2YIFZM" id="69Byf55PJQQ" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="69Byf55PJQR" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJQS" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJQT" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJQU" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJQV" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJRo" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJRp" role="3clFbG">
            <node concept="37vLTw" id="69Byf55PJRq" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJRr" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2FRp1z37KSM" resolve="stepOver" />
              <node concept="2YIFZM" id="69Byf55PJRs" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <node concept="3VsKOn" id="69Byf55PJRt" role="37wK5m">
                  <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJRu" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJRv" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJRw" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJRx" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="69Byf55PJSr" role="3cqZAp" />
        <node concept="3clFbF" id="69Byf55PJSk" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJSl" role="3clFbG">
            <node concept="37vLTw" id="69Byf55PJSm" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJSn" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagN" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJRT" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJRU" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJRV" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJRW" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJS_" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJSA" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdvy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJSJ" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagW" resolve="pause" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJS3" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJS4" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJS5" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJS6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJSN" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJSO" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZLz" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJSQ" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4GagS" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="69Byf55PJSd" role="3cqZAp">
          <node concept="2OqwBi" id="69Byf55PJSe" role="3clFbG">
            <node concept="2YIFZM" id="69Byf55PJSf" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="69Byf55PJSg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="6L3DaT70$A5" role="3cqZAp" />
        <node concept="3clFbF" id="6L3DaT70$Df" role="3cqZAp">
          <node concept="2YIFZM" id="6L3DaT70$Dj" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdM5" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6L3DaT70$Dl" role="3cqZAp">
          <node concept="2YIFZM" id="6L3DaT70$Dm" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="6L3DaT70$Dq" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="6L3DaT70$Dc" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbbA" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbbB" role="3cpWs9">
            <property role="TrG5h" value="attachedState" />
            <node concept="3uibUv" id="5XU7UUGbbbC" role="1tU5fm">
              <ref role="3uigEE" to="x30c:ZH$a4XsByQ" resolve="MEDebugSessionAttachedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbbD" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbbbE" role="2ShVmc">
                <ref role="37wK5l" to="x30c:ZH$a4XsByW" resolve="MEDebugSessionAttachedState" />
                <node concept="37vLTw" id="5XU7UUGbbbF" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbi" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbbbG" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZhk" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZlU" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbs" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvTe0C" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbx" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZ6V" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLyN" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbbK" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbbL" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbbM" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbbN" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZd9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbbB" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbbP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsBzl" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbbW" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbbX" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbbY" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbbZ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdLq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbbB" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbc1" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB$C" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbbc2" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbc3" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbc4" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbc5" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbc6" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbc7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbbB" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbc8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB$h" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbbc9" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbca" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbcb" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbcc" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbcd" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbce" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbbB" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbcf" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsB_2" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbbcg" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbcn" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbco" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbcp" role="3cpWs9">
            <property role="TrG5h" value="pausedState" />
            <node concept="3uibUv" id="5XU7UUGbbcq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcz$" resolve="MEDebugSessionPausedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbcr" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbbcs" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagczA" resolve="MEDebugSessionPausedState" />
                <node concept="37vLTw" id="5HxjapvTdLA" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbi" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbbcu" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTe1o" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTd_w" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbs" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdOx" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbx" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZLR" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLyN" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbcy" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbcz" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbc$" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbc_" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbcA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbbB" resolve="attachedState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbcB" role="2OqNvi">
                <ref role="37wK5l" to="x30c:ZH$a4XsBzl" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbcC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbcD" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ3P" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbcp" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbcF" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagczF" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbcG" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbcH" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbbcI" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbcp" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbcJ" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$l" resolve="stepOut" />
              <node concept="10Nm6u" id="5XU7UUGbbcK" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbcL" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbcM" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZAv" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbcp" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbcO" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$3" resolve="stepOver" />
              <node concept="10Nm6u" id="5XU7UUGbbcP" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbcQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbcR" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbbcS" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbcp" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbcT" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc$b" resolve="stepInto" />
              <node concept="10Nm6u" id="5XU7UUGbbcU" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbcV" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbcW" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZaW" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbcp" resolve="pausedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbcY" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75VpA" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbcZ" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbd0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbd1" role="3cpWs9">
            <property role="TrG5h" value="runningState" />
            <node concept="3uibUv" id="5XU7UUGbbd2" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagcyp" resolve="MEDebugSessionRunningState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbd3" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbbd4" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyr" resolve="MEDebugSessionRunningState" />
                <node concept="37vLTw" id="5HxjapvQZwi" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbi" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvTe3X" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZg3" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdNX" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbs" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbbd9" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbx" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLz2" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLyN" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbda" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbdb" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbbdc" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbdd" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagczk" resolve="detach" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbde" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbdf" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdw_" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbdh" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagczs" resolve="pause" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbdi" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbdj" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbdk" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbdl" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ89" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbdn" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcyw" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbdo" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbdp" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbdq" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbdr" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdSc" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbdt" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcz4" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbbdu" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbdv" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbdw" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbdx" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbdy" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbdz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbd$" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagczc" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbbd_" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbdA" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbdB" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbdC" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbdD" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZLP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbd1" resolve="runningState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbdF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0FagcyU" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbbdG" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbdH" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbdI" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbdJ" role="3cpWs9">
            <property role="TrG5h" value="stoppedState" />
            <node concept="3uibUv" id="5XU7UUGbbdK" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0FagcA9" resolve="MEDebugSessionStoppedState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbdL" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbbdM" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0FagcAb" resolve="MEDebugSessionStoppedState" />
                <node concept="37vLTw" id="5HxjapvTek9" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbi" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZj9" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZdL" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZya" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbs" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZbw" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbx" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="2pJszzmYLzc" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLyN" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vFxKo" id="5XU7UUGbbdS" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbdT" role="3vFALc">
            <node concept="37vLTw" id="5XU7UUGbbdU" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbdJ" resolve="stoppedState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbdV" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0FagcBg" resolve="isStepEnabled" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbdW" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbbdX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbdY" role="3cpWs9">
            <property role="TrG5h" value="waitState" />
            <node concept="3uibUv" id="5XU7UUGbbdZ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3gwY0Fagc$J" resolve="MEDebugSessionWaitingAttachState" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbe0" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbbe1" role="2ShVmc">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$L" resolve="MEDebugSessionWaitingAttachState" />
                <node concept="37vLTw" id="5HxjapvQZ8V" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbi" resolve="ctxMockt" />
                </node>
                <node concept="37vLTw" id="5XU7UUGbbe3" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbd" resolve="sessMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdNl" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbn" resolve="steppMock" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdZr" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbs" resolve="sessionAccess" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZNO" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbbx" resolve="errorReporter" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdYm" role="37wK5m">
                  <ref role="3cqZAo" node="2pJszzmYLyN" resolve="pendingBreakpointSetter" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbe7" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbe8" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbe9" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbea" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbbeb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbec" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$Y" resolve="pause" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbed" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbee" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbef" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbeg" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdyp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbei" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc$Q" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbej" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbek" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbel" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbem" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZgh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbeo" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_m" resolve="stepInto" />
                <node concept="10Nm6u" id="5XU7UUGbbep" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbeq" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbber" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbes" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbet" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdtk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbev" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_e" resolve="stepOver" />
                <node concept="10Nm6u" id="5XU7UUGbbew" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbex" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbey" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbez" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbe$" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdMP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbeA" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagc_w" resolve="stepOut" />
                <node concept="10Nm6u" id="5XU7UUGbbeB" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbeC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbeD" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZPD" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbdY" resolve="waitState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbeF" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3gwY0Fagc_6" resolve="detach" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbeG" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="5XU7UUGbbeH" role="3clF46">
        <property role="TrG5h" value="initialState" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5XU7UUGbbeI" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGbbeJ" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbeK" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbeL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbeM" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbbeN" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbeO" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbbeP" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbbeQ" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbbeR" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbbeS" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbbeT" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbbeU" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbbeV" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbbeW" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbbeX" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbeY" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbeZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbf0" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbf1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbf2" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbf3" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3gwY0Fagcx$" resolve="IMIDebugSessionContext" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbf4" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbf5" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbf6" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJN7" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbf8" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbf9" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PJNh" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbfb" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbfc" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbfd" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJN$" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbff" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbfg" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="69Byf55PJNq" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbfi" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbfj" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbfk" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbfl" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbfm" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbfn" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbfo" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:4jGvW$31YH6" resolve="IMIDebugSessionAccess" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbfp" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbfq" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbfr" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbfs" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3gwY0FagcxE" resolve="IMIDebugSessionState" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbft" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="37vLTw" id="5XU7UUGbbfu" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGbbeH" resolve="initialState" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbbfv" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbbfw" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbbfx" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbbfy" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbbfz" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbbf$" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGbbf_" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:7umK9berIST" resolve="IMIErrorReporter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="6ZadL_R5bgE" role="3cqZAp">
                          <node concept="2OqwBi" id="6ZadL_R5bgF" role="3clFbG">
                            <node concept="3P9mCS" id="6ZadL_R5bgG" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="69Byf55PJNJ" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6ZadL_R5bgI" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="6ZadL_R5bgJ" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="69Byf55PJNQ" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:S3LJavABdA" resolve="IMPendingBreakpointSetter" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbfA" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbbfB" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbeM" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbbfC" role="1B3o_S" />
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbb15">
    <property role="TrG5h" value="MEDebugSessionCreator" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="2XrIbr" id="5XU7UUGbb16" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGbb17" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbb18" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb19" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb1a" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb1b" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb1c" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbb1d" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbb1e" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbb1f" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbb1g" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbb1h" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbb1i" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbb1j" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbb1k" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbb1l" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbb1m" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbb1n" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbb1o" role="37wK5m">
                                <ref role="3VsUkX" to="1l1h:3SnNvqCaJiH" resolve="AbstractDebugSessionCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbb1p" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGbb1q" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGbb1r" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbb1s" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbb1t" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbb1u" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbb1v" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbb1w" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbb1x" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5219jcoZc7q" resolve="MIAbstractDebugSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbH" id="5XU7UUGbb1y" role="3cqZAp" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbb1z" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdsU" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbb1a" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbb1_" role="1B3o_S" />
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb1A" role="1SL9yI">
      <property role="TrG5h" value="retrieveDebuggerSettingsWithInvalidParameter" />
      <node concept="3cqZAl" id="5XU7UUGbb1B" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb1C" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb1D" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb1E" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb1F" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb1G" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb1H" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb1I" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbb16" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb1J" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb1K" role="3cpWs9">
            <property role="TrG5h" value="debugSessionCreator" />
            <node concept="3uibUv" id="5XU7UUGbb1L" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbb1M" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbb1N" role="10QFUM">
                <ref role="3uigEE" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb1O" role="10QFUP">
                <node concept="37vLTw" id="5HxjapvQZ_o" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb1E" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb1Q" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbb1R" role="37wK5m">
                    <ref role="3VsUkX" to="1l1h:3SnNvqCaJiH" resolve="AbstractDebugSessionCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb1S" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbb1T" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb1U" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb1V" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb1W" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZKq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb1K" resolve="debugSessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb1Y" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6WfZQfTHrjx" resolve="getDebuggerSettings" />
                <node concept="10Nm6u" id="5XU7UUGbb1Z" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb20" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb21" role="3cpWs9">
            <property role="TrG5h" value="runProfileState" />
            <node concept="3uibUv" id="5XU7UUGbb22" role="1tU5fm">
              <ref role="3uigEE" to="5ths:3SnNvqCaJfM" resolve="DebuggerRunProfileState" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb23" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbb24" role="37wK5m">
                <ref role="3VsUkX" to="5ths:3SnNvqCaJfM" resolve="DebuggerRunProfileState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb25" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb26" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb27" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbb28" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbb29" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbb2a" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZ_O" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbb21" resolve="runProfileState" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbb2c" role="2OqNvi">
                    <ref role="37wK5l" to="5ths:3SnNvqCaJgC" resolve="getDebuggerSettings" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbb2d" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGbb2e" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbb2f" role="37wK5m">
                    <ref role="3VsUkX" to="1l1h:3SnNvqCaJgQ" resolve="IDebuggerSettings" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbb2g" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb2h" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb2i" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZLh" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb21" resolve="runProfileState" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb2k" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb2l" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb2m" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb2n" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb2o" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb1K" resolve="debugSessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb2p" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6WfZQfTHrjx" resolve="getDebuggerSettings" />
                <node concept="37vLTw" id="5HxjapvTd$d" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbb21" resolve="runProfileState" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbb2r" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbb2s" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbb2t" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbb2u" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGbb2v" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbb1K" resolve="debugSessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGbb2w" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6WfZQfTHrjx" resolve="getDebuggerSettings" />
                <node concept="2YIFZM" id="5XU7UUGbb2x" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbb2y" role="37wK5m">
                    <ref role="3VsUkX" to="dj99:~RunProfileState" resolve="RunProfileState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbb2z" role="1SL9yI">
      <property role="TrG5h" value="retrieveDebuggerSessionFromValidObject" />
      <node concept="3cqZAl" id="5XU7UUGbb2$" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbb2_" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbb2A" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb2B" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbb2C" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbb2D" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbb2E" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbb2F" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbb16" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbb2G" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb2H" role="3cpWs9">
            <property role="TrG5h" value="debugSessionCreator" />
            <node concept="3uibUv" id="5XU7UUGbb2I" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbb2J" role="33vP2m">
              <node concept="3uibUv" id="5XU7UUGbb2K" role="10QFUM">
                <ref role="3uigEE" to="x30c:6WfZQfTHriB" resolve="MIDebugSessionCreator" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbb2L" role="10QFUP">
                <node concept="37vLTw" id="5HxjapvTdSm" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbb2B" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbb2N" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="3VsKOn" id="5XU7UUGbb2O" role="37wK5m">
                    <ref role="3VsUkX" to="1l1h:3SnNvqCaJiH" resolve="AbstractDebugSessionCreator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb2P" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbb2Q" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbb2R" role="3cpWs9">
            <property role="TrG5h" value="runProfileState" />
            <node concept="3uibUv" id="5XU7UUGbb2S" role="1tU5fm">
              <ref role="3uigEE" to="5ths:3SnNvqCaJfM" resolve="DebuggerRunProfileState" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbb2T" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbb2U" role="37wK5m">
                <ref role="3VsUkX" to="5ths:3SnNvqCaJfM" resolve="DebuggerRunProfileState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb2V" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGbb2W" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb2X" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbb2Y" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbb2Z" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbb30" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbb31" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbb2R" resolve="runProfileState" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbb32" role="2OqNvi">
                    <ref role="37wK5l" to="5ths:3SnNvqCaJgC" resolve="getDebuggerSettings" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbb33" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="10QFUN" id="5XU7UUGbb34" role="37wK5m">
                  <node concept="3uibUv" id="5XU7UUGbb35" role="10QFUM">
                    <ref role="3uigEE" to="1l1h:3SnNvqCaJgQ" resolve="IDebuggerSettings" />
                  </node>
                  <node concept="2YIFZM" id="5XU7UUGbb36" role="10QFUP">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGbb37" role="37wK5m">
                      <ref role="3VsUkX" to="gbk6:7B__YhMUq3_" resolve="GdbDebuggerSettingsImpl" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbb38" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbb39" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbb3a" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTe2B" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbb2R" resolve="runProfileState" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb3c" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbb3d" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbb3e" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdBc" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbb2H" resolve="debugSessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGbb3g" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrjx" resolve="getDebuggerSettings" />
              <node concept="37vLTw" id="5HxjapvTens" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbb2R" resolve="runProfileState" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbb3i" role="3cqZAp" />
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbfD">
    <property role="TrG5h" value="MEDebuggerSettings" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="1LZb2c" id="5XU7UUGbbfE" role="1SL9yI">
      <property role="TrG5h" value="invalidParameters" />
      <node concept="3cqZAl" id="5XU7UUGbbfF" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbfG" role="3clF47">
        <node concept="3$NI$W" id="5XU7UUGbbfH" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbfI" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbfJ" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbfK" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbfL" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbfM" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbfN" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbfO" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbfP" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxz" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OC" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$Fy$" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$138r" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbfQ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbfR" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbfS" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbfT" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbfU" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="2YIFZM" id="5XU7UUGbbfV" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbfW" role="37wK5m">
                    <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                  </node>
                </node>
                <node concept="10Nm6u" id="5XU7UUGbbfX" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbfY" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbfZ" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbg0" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxA" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OF" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$FI8" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$132J" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbg1" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbg2" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbg3" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbg4" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbg5" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbg6" role="37wK5m" />
                <node concept="Xl_RD" id="5XU7UUGbbg7" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbbg8" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbg9" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbga" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxL" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OQ" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$FSM" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$12WN" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbgb" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbgc" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbgd" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbge" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbgf" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbgg" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbgh" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbgi" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbgj" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbgk" role="37wK5m">
                  <property role="3cmrfH" value="3" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxJ" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OO" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$FWz" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$12S6" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbgl" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbgm" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbgn" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbgo" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbgp" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbgq" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbgr" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbgs" role="37wK5m" />
                <node concept="Xl_RD" id="5XU7UUGbbgt" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbgu" role="37wK5m">
                  <property role="3cmrfH" value="4" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxH" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OM" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$G6x" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$12NG" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbgv" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbgw" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbgx" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbgy" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbgz" role="2ShVmc">
                <ref role="37wK5l" to="gbk6:7B__YhMUq3C" resolve="GdbDebuggerSettingsImpl" />
                <node concept="2YIFZM" id="5XU7UUGbbg$" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbg_" role="37wK5m">
                    <ref role="3VsUkX" to="4nm9:~Project" resolve="Project" />
                  </node>
                </node>
                <node concept="Xl_RD" id="5XU7UUGbbgA" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbbgB" role="37wK5m" />
                <node concept="Xl_RD" id="5XU7UUGbbgC" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbgD" role="37wK5m">
                  <property role="3cmrfH" value="5" />
                </node>
                <node concept="3cmrfG" id="2pJszzmYLxE" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
                <node concept="10Nm6u" id="5ibmMvPg_OJ" role="37wK5m" />
                <node concept="10Nm6u" id="4jk7wJv$G1y" role="37wK5m" />
                <node concept="10Nm6u" id="2s_cUA$0ZRa" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbgE" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbbgF">
    <property role="TrG5h" value="MEUiState" />
    <property role="3GE5qa" value="mpsext" />
    <node concept="2XrIbr" id="5XU7UUGbbgG" role="1qtyYc">
      <property role="TrG5h" value="createStackFrameMock" />
      <node concept="3uibUv" id="5XU7UUGbbgH" role="3clF45">
        <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbgI" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbgJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbgK" role="3cpWs9">
            <property role="TrG5h" value="stackFrame" />
            <node concept="3uibUv" id="5XU7UUGbbgL" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbgM" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbgN" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbgO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbgP" role="3cpWs9">
            <property role="TrG5h" value="location" />
            <node concept="3uibUv" id="5XU7UUGbbgQ" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbgR" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbbgS" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJt$" resolve="ILocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbgT" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbgU" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbgV" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbgW" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbgX" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZga" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbgZ" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtA" resolve="getFileName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbh0" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbh1" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbh2" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbh3" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbh4" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbh5" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbh6" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbh7" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZkQ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbh9" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtM" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbha" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGbbhb" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbhc" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhd" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbhe" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbhf" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbhg" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbhh" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZod" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbhj" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtI" resolve="getRoutineName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbhk" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbhl" role="37wK5m">
                  <property role="Xl_RC" value="main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbhm" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhn" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbho" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbhp" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbhq" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbhr" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGbbhs" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbht" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtE" resolve="getUnitName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbhu" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGbbhv" role="37wK5m">
                  <property role="Xl_RC" value="Main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbhw" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbhy" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbhz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbh$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbh_" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTd_F" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbgK" resolve="stackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbhB" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJtb" resolve="getLocation" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbhC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTe2Z" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbhE" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhF" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbhG" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZB9" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbgP" resolve="location" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhI" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbhJ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGbbhK" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbgK" resolve="stackFrame" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbhL" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbbhM" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbgK" resolve="stackFrame" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbhN" role="1qtyYc">
      <property role="TrG5h" value="createThreadMockWithTwoFrames" />
      <node concept="3uibUv" id="5XU7UUGbbhO" role="3clF45">
        <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbhP" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbhQ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbhR" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="3uibUv" id="5XU7UUGbbhS" role="1tU5fm">
              <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbhT" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbhU" role="37wK5m">
                <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbhV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbhW" role="3cpWs9">
            <property role="TrG5h" value="numberOfFrames" />
            <node concept="10Oyi0" id="5XU7UUGbbhX" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbbhY" role="33vP2m">
              <property role="3cmrfH" value="2" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbhZ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbi0" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbi1" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbi2" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGbbi3" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZNw" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbhR" resolve="result" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbi5" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJfy" resolve="getFramesCount" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbi6" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvQZ7t" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbhW" resolve="numberOfFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbi8" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbi9" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbia" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="_YKpA" id="5XU7UUGbbib" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbbic" role="_ZDj9">
                <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbbid" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbbie" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbbif" role="HW$YZ">
                  <ref role="3uigEE" to="pry4:3SnNvqCaJt9" resolve="IStackFrame" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbbig" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbbih" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGbbii" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbbij" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZO4" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbia" resolve="stackFrames" />
                </node>
                <node concept="TSZUe" id="5XU7UUGbbil" role="2OqNvi">
                  <node concept="2OqwBi" id="5XU7UUGbbim" role="25WWJ7">
                    <node concept="2WthIp" id="5XU7UUGbbin" role="2Oq$k0" />
                    <node concept="2XshWL" id="5XU7UUGbbio" role="2OqNvi">
                      <ref role="2WH_rO" node="5XU7UUGbbgG" resolve="createStackFrameMock" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbbip" role="1Duv9x">
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="5XU7UUGbbiq" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbbir" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbbis" role="1Dwp0S">
            <node concept="37vLTw" id="5HxjapvTepz" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGbbhW" resolve="numberOfFrames" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZum" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbbip" resolve="index" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbbiv" role="1Dwrff">
            <node concept="37vLTw" id="5HxjapvTenf" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbbip" resolve="index" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbix" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbiy" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbbiz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbbi$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbbi_" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTenZ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbbhR" resolve="result" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbbiB" role="2OqNvi">
                    <ref role="37wK5l" to="pry4:3SnNvqCaJft" resolve="getFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbiC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdve" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbbia" resolve="stackFrames" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbbiE" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbbiF" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbbiG" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGbbiH" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbbhR" resolve="result" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbiI" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZar" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbhR" resolve="result" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGbbiK" role="1qtyYc">
      <property role="TrG5h" value="createDefaultUiState" />
      <node concept="3uibUv" id="5XU7UUGbbiL" role="3clF45">
        <ref role="3uigEE" to="x30c:6WfZQfTHrkY" resolve="MIFilledUiStateImpl" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbbiM" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbiN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbiO" role="3cpWs9">
            <property role="TrG5h" value="debugSession" />
            <node concept="3uibUv" id="5XU7UUGbbiP" role="1tU5fm">
              <ref role="3uigEE" to="1l1h:3SnNvqCaJaG" resolve="AbstractDebugSession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbbiQ" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbbiR" role="37wK5m">
                <ref role="3VsUkX" to="1l1h:3SnNvqCaJaG" resolve="AbstractDebugSession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbbiS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbiT" role="3cpWs9">
            <property role="TrG5h" value="uiState" />
            <node concept="3uibUv" id="5XU7UUGbbiU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrkY" resolve="MIFilledUiStateImpl" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbbiV" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbJ" id="5XU7UUGbbiW" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbbiX" role="3clFbx">
            <node concept="3clFbF" id="5XU7UUGbbiY" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbbiZ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZh_" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbbiT" resolve="uiState" />
                </node>
                <node concept="2ShNRf" id="5XU7UUGbbj1" role="37vLTx">
                  <node concept="1pGfFk" id="5XU7UUGbbj2" role="2ShVmc">
                    <ref role="37wK5l" to="x30c:6WfZQfTHrl0" resolve="MIFilledUiStateImpl" />
                    <node concept="37vLTw" id="5HxjapvTdBg" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGbbiO" resolve="debugSession" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3clFbC" id="5XU7UUGbbj4" role="3clFbw">
            <node concept="10Nm6u" id="5XU7UUGbbj5" role="3uHU7w" />
            <node concept="37vLTw" id="5XU7UUGbbj6" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbbjj" resolve="thread" />
            </node>
          </node>
          <node concept="9aQIb" id="5XU7UUGbbj7" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGbbj8" role="9aQI4">
              <node concept="3clFbF" id="5XU7UUGbbj9" role="3cqZAp">
                <node concept="37vLTI" id="5XU7UUGbbja" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvTdCn" role="37vLTJ">
                    <ref role="3cqZAo" node="5XU7UUGbbiT" resolve="uiState" />
                  </node>
                  <node concept="2ShNRf" id="5XU7UUGbbjc" role="37vLTx">
                    <node concept="1pGfFk" id="5XU7UUGbbjd" role="2ShVmc">
                      <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                      <node concept="37vLTw" id="5XU7UUGbbje" role="37wK5m">
                        <ref role="3cqZAo" node="5XU7UUGbbiO" resolve="debugSession" />
                      </node>
                      <node concept="37vLTw" id="5XU7UUGbbjf" role="37wK5m">
                        <ref role="3cqZAo" node="5XU7UUGbbjj" resolve="thread" />
                      </node>
                      <node concept="3cmrfG" id="5XU7UUGbbjg" role="37wK5m">
                        <property role="3cmrfH" value="0" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbbjh" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbbji" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbbiT" resolve="uiState" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbbjj" role="3clF46">
        <property role="TrG5h" value="thread" />
        <node concept="3uibUv" id="5XU7UUGbbjk" role="1tU5fm">
          <ref role="3uigEE" to="pry4:3SnNvqCaJfr" resolve="IThread" />
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbjl" role="1SL9yI">
      <property role="TrG5h" value="invalidConstructorParameters" />
      <node concept="3cqZAl" id="5XU7UUGbbjm" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbjn" role="3clF47">
        <node concept="3$NI$W" id="5XU7UUGbbjo" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbjp" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbjq" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbjr" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6WfZQfTHrl0" resolve="MIFilledUiStateImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbjs" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbjt" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbju" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbjv" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbjw" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbjx" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbjy" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbjz" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbj$" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbj_" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbjA" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbjB" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbjC" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbjD" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbjE" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGbbjF" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbjG" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbjH" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbjI" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbjJ" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbjK" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbjL" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                <node concept="10Nm6u" id="5XU7UUGbbjM" role="37wK5m" />
                <node concept="2YIFZM" id="5XU7UUGbbjN" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbjO" role="37wK5m">
                    <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                  </node>
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbjP" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbjQ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbjR" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbjS" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbjT" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbjU" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                <node concept="2YIFZM" id="5XU7UUGbbjV" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbjW" role="37wK5m">
                    <ref role="3VsUkX" to="1l1h:3SnNvqCaJaG" resolve="AbstractDebugSession" />
                  </node>
                </node>
                <node concept="2YIFZM" id="5XU7UUGbbjX" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbjY" role="37wK5m">
                    <ref role="3VsUkX" to="pry4:3SnNvqCaJfr" resolve="IThread" />
                  </node>
                </node>
                <node concept="3cmrfG" id="5XU7UUGbbjZ" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbk0" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbk1" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbk2" role="3$Oloe">
            <node concept="2ShNRf" id="5XU7UUGbbk3" role="3clFbG">
              <node concept="1pGfFk" id="5XU7UUGbbk4" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2FRp1z37mZk" resolve="MIFilledUiStateImpl" />
                <node concept="2YIFZM" id="5XU7UUGbbk5" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="5XU7UUGbbk6" role="37wK5m">
                    <ref role="3VsUkX" to="1l1h:3SnNvqCaJaG" resolve="AbstractDebugSession" />
                  </node>
                </node>
                <node concept="10Nm6u" id="5XU7UUGbbk7" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGbbk8" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbk9" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbka" role="1SL9yI">
      <property role="TrG5h" value="invalidMethodArguments" />
      <node concept="3cqZAl" id="5XU7UUGbbkb" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbkc" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbkd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbke" role="3cpWs9">
            <property role="TrG5h" value="uiState" />
            <node concept="3uibUv" id="5XU7UUGbbkf" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrkY" resolve="MIFilledUiStateImpl" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbkg" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbkh" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbki" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbiK" resolve="createDefaultUiState" />
                <node concept="10Nm6u" id="5XU7UUGbbkj" role="2XxRq1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbkk" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbkl" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbkm" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbkn" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZk9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbke" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbkp" role="2OqNvi">
                <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
                <node concept="3cmrfG" id="5XU7UUGbbkq" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbkr" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbks" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbkt" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbku" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTe26" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbke" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbkw" role="2OqNvi">
                <ref role="37wK5l" to="1l1h:3SnNvqCaJ$b" resolve="selectFrame" />
                <node concept="3cmrfG" id="5XU7UUGbbkx" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbky" role="1SL9yI">
      <property role="TrG5h" value="invokeMethodsForInitializedUiState" />
      <node concept="3cqZAl" id="5XU7UUGbbkz" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbbk$" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbbk_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbbkA" role="3cpWs9">
            <property role="TrG5h" value="uiState" />
            <node concept="3uibUv" id="5XU7UUGbbkB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrkY" resolve="MIFilledUiStateImpl" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbkC" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbbkD" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbbkE" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbiK" resolve="createDefaultUiState" />
                <node concept="10Nm6u" id="5XU7UUGbbkF" role="2XxRq1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="29so9VbSc7z" role="3cqZAp" />
        <node concept="3ykFI1" id="5XU7UUGbbkP" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbkQ" role="3ykU8v">
            <node concept="37vLTw" id="5HxjapvTdFy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbkS" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlu" resolve="getStackFrame" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbbkT" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbkU" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbbkV" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbkW" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdUX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbkY" role="2OqNvi">
                <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
                <node concept="3cmrfG" id="5XU7UUGbbkZ" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbl0" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbbl1" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGbbl2" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbl3" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbbl4" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbl5" role="2OqNvi">
                <ref role="37wK5l" to="x30c:229N9i$9uA6" resolve="getStackFramesCount" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbl6" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbl7" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZt8" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbl9" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlJ" resolve="getThread" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbla" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbblb" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbblc" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGbbld" role="2Oq$k0">
                <node concept="37vLTw" id="5XU7UUGbble" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
                </node>
                <node concept="liA8E" id="5XU7UUGbblf" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6WfZQfTHrl_" resolve="getThreads" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbblg" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
              </node>
            </node>
            <node concept="3cmrfG" id="5XU7UUGbblh" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbli" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbblj" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvQZN7" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbll" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlo" resolve="isPausedOnBreakpoint" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbblm" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbbln" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbblo" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbblp" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ7l" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbblr" role="2OqNvi">
                <ref role="37wK5l" to="1l1h:3SnNvqCaJ$b" resolve="selectFrame" />
                <node concept="3cmrfG" id="5XU7UUGbbls" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGbblt" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGbblu" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGbblv" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbblw" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ9c" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbbkA" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbly" role="2OqNvi">
                <ref role="37wK5l" to="1l1h:3SnNvqCaJ$b" resolve="selectFrame" />
                <node concept="3cmrfG" id="5XU7UUGbblz" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbbl$" role="1SL9yI">
      <property role="TrG5h" value="switchFrame" />
      <node concept="3cqZAl" id="5XU7UUGbbl_" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbblA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbblB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbblC" role="3cpWs9">
            <property role="TrG5h" value="uiState" />
            <node concept="3uibUv" id="5XU7UUGbblD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6WfZQfTHrkY" resolve="MIFilledUiStateImpl" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbblE" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGbblF" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGbblG" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGbbiK" resolve="createDefaultUiState" />
                <node concept="2OqwBi" id="5XU7UUGbblH" role="2XxRq1">
                  <node concept="2WthIp" id="5XU7UUGbblI" role="2Oq$k0" />
                  <node concept="2XshWL" id="5XU7UUGbblJ" role="2OqNvi">
                    <ref role="2WH_rO" node="5XU7UUGbbhN" resolve="createThreadMockWithTwoFrames" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="1o_$mJEnzvt" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbblU" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbblV" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZaU" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbblX" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlu" resolve="getStackFrame" />
            </node>
          </node>
        </node>
        <node concept="3vMLTj" id="5XU7UUGbblY" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbblZ" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvQZpO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbm1" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlu" resolve="getStackFrame" />
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGbbm2" role="3tpDZA">
            <node concept="37vLTw" id="5HxjapvQZp7" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbm4" role="2OqNvi">
              <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
              <node concept="3cmrfG" id="5XU7UUGbbm5" role="37wK5m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbm6" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbm7" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdZh" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbm9" role="2OqNvi">
              <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
              <node concept="3cmrfG" id="5XU7UUGbbma" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbmb" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbbmc" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGbbmd" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbme" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZuE" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbmg" role="2OqNvi">
                <ref role="37wK5l" to="x30c:229N9i$9uA6" resolve="getStackFramesCount" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbmh" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbmi" role="2Hmdds">
            <node concept="37vLTw" id="5XU7UUGbbmj" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbmk" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlJ" resolve="getThread" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbml" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbbmm" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbbmn" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGbbmo" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTenX" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbmq" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6WfZQfTHrl_" resolve="getThreads" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbmr" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
              </node>
            </node>
            <node concept="3cmrfG" id="5XU7UUGbbms" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbmt" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbmu" role="3vwVQn">
            <node concept="37vLTw" id="5XU7UUGbbmv" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbmw" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlo" resolve="isPausedOnBreakpoint" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbmx" role="3cqZAp" />
        <node concept="2Hmddi" id="5XU7UUGbbmM" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbmN" role="2Hmdds">
            <node concept="37vLTw" id="5XU7UUGbbmO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbmP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlu" resolve="getStackFrame" />
            </node>
          </node>
        </node>
        <node concept="3vMLTj" id="5XU7UUGbbmQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbmR" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvTd_R" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbmT" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlu" resolve="getStackFrame" />
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGbbmU" role="3tpDZA">
            <node concept="37vLTw" id="5XU7UUGbbmV" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbmW" role="2OqNvi">
              <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
              <node concept="3cmrfG" id="5XU7UUGbbmX" role="37wK5m">
                <property role="3cmrfH" value="0" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbmY" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbmZ" role="2Hmdds">
            <node concept="37vLTw" id="5XU7UUGbbn0" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbn1" role="2OqNvi">
              <ref role="37wK5l" to="x30c:229N9i$9u_Z" resolve="getStackFrame" />
              <node concept="3cmrfG" id="5XU7UUGbbn2" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbn3" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbbn4" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGbbn5" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbbn6" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZ78" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbn8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:229N9i$9uA6" resolve="getStackFramesCount" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGbbn9" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbna" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdBv" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbnc" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlJ" resolve="getThread" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbnd" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbbne" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGbbnf" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGbbng" role="2Oq$k0">
                <node concept="37vLTw" id="5HxjapvTe1z" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
                </node>
                <node concept="liA8E" id="5XU7UUGbbni" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:6WfZQfTHrl_" resolve="getThreads" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbbnj" role="2OqNvi">
                <ref role="37wK5l" to="33ny:~List.size():int" resolve="size" />
              </node>
            </node>
            <node concept="3cmrfG" id="5XU7UUGbbnk" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbbnl" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbbnm" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTejP" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
            </node>
            <node concept="liA8E" id="5XU7UUGbbno" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6WfZQfTHrlo" resolve="isPausedOnBreakpoint" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbbnp" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGbbnq" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGbbnr" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGbbns" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGbbnt" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ4A" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbblC" resolve="uiState" />
              </node>
              <node concept="liA8E" id="5XU7UUGbbnv" role="2OqNvi">
                <ref role="37wK5l" to="1l1h:3SnNvqCaJ$b" resolve="selectFrame" />
                <node concept="3cmrfG" id="5XU7UUGbbnw" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGbbnx" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbc$D">
    <property role="TrG5h" value="CDTUtilClass" />
    <property role="3GE5qa" value="util" />
    <node concept="3Tm1VV" id="5XU7UUGbc_x" role="1B3o_S" />
    <node concept="Wx3nA" id="5XU7UUGbc$E" role="jymVt">
      <property role="TrG5h" value="libraryLoaded" />
      <node concept="3Tm6S6" id="5XU7UUGbc$F" role="1B3o_S" />
      <node concept="10P_77" id="5XU7UUGbc$G" role="1tU5fm" />
      <node concept="3clFbT" id="5XU7UUGbc$H" role="33vP2m">
        <property role="3clFbU" value="false" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc$I" role="jymVt">
      <property role="TrG5h" value="HOME_VAR" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm6S6" id="5XU7UUGbc$J" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc$K" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc$L" role="33vP2m">
        <property role="Xl_RC" value="mbeddr.github.core.home" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc$M" role="jymVt">
      <property role="TrG5h" value="SPAWNER_BASE" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm6S6" id="5XU7UUGbc$N" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc$O" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc$P" role="33vP2m">
        <property role="Xl_RC" value="/code/languages/com.mbeddr.core/languages/com.mbeddr.core.debug/lib/spawner/" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc$Q" role="jymVt">
      <property role="TrG5h" value="RELATIVE_PROJECT_PATH" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm6S6" id="5XU7UUGbc$R" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc$S" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc$T" role="33vP2m">
        <property role="Xl_RC" value="/code/languages/com.mbeddr.core/tests/test.debugger.core/source_gen/testdata/" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc$U" role="jymVt">
      <property role="TrG5h" value="BINARY_NAME" />
      <property role="3TUv4t" value="false" />
      <node concept="3Tm6S6" id="5XU7UUGbc$V" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc$W" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc$X" role="33vP2m">
        <property role="Xl_RC" value="Debugger_Testdata" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc$Y" role="jymVt">
      <property role="TrG5h" value="STATIC_BASE_PATH" />
      <node concept="3Tm6S6" id="5XU7UUGbc$Z" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc_0" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc_1" role="33vP2m">
        <property role="Xl_RC" value="/Users/domenik/mbeddr.core" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_2" role="jymVt">
      <property role="TrG5h" value="PROCESS_EXITED_CORRECTLY" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm6S6" id="5XU7UUGbc_3" role="1B3o_S" />
      <node concept="10Oyi0" id="5XU7UUGbc_4" role="1tU5fm" />
      <node concept="3cmrfG" id="5XU7UUGbc_5" role="33vP2m">
        <property role="3cmrfH" value="0" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_6" role="jymVt">
      <property role="TrG5h" value="STARTING_TIME" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm1VV" id="5XU7UUGbc_7" role="1B3o_S" />
      <node concept="10Oyi0" id="5XU7UUGbc_8" role="1tU5fm" />
      <node concept="3cmrfG" id="5XU7UUGbc_9" role="33vP2m">
        <property role="3cmrfH" value="1200" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_a" role="jymVt">
      <property role="TrG5h" value="FIRST_LINE_IN_MAIN" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm1VV" id="5XU7UUGbc_b" role="1B3o_S" />
      <node concept="10Oyi0" id="5XU7UUGbc_c" role="1tU5fm" />
      <node concept="3cmrfG" id="5XU7UUGbc_d" role="33vP2m">
        <property role="3cmrfH" value="12" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_e" role="jymVt">
      <property role="TrG5h" value="FIRST_LINE_IN_ADD" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm1VV" id="5XU7UUGbc_f" role="1B3o_S" />
      <node concept="10Oyi0" id="5XU7UUGbc_g" role="1tU5fm" />
      <node concept="3cmrfG" id="5XU7UUGbc_h" role="33vP2m">
        <property role="3cmrfH" value="18" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_i" role="jymVt">
      <property role="TrG5h" value="GLOBAL_VAR_NAME" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm1VV" id="5XU7UUGbc_j" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc_k" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc_l" role="33vP2m">
        <property role="Xl_RC" value="Main_counter" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_m" role="jymVt">
      <property role="TrG5h" value="FILE_NAME" />
      <property role="3TUv4t" value="true" />
      <node concept="3Tm1VV" id="5XU7UUGbc_n" role="1B3o_S" />
      <node concept="17QB3L" id="5XU7UUGbc_o" role="1tU5fm" />
      <node concept="Xl_RD" id="5XU7UUGbc_p" role="33vP2m">
        <property role="Xl_RC" value="Main.c" />
      </node>
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_q" role="jymVt">
      <property role="TrG5h" value="hit" />
      <node concept="3Tm1VV" id="5XU7UUGbc_r" role="1B3o_S" />
      <node concept="10P_77" id="5XU7UUGbc_s" role="1tU5fm" />
    </node>
    <node concept="Wx3nA" id="5XU7UUGbc_t" role="jymVt">
      <property role="TrG5h" value="init" />
      <node concept="3Tm6S6" id="5XU7UUGbc_u" role="1B3o_S" />
      <node concept="10P_77" id="5XU7UUGbc_v" role="1tU5fm" />
      <node concept="3clFbT" id="5XU7UUGbc_w" role="33vP2m">
        <property role="3clFbU" value="false" />
      </node>
    </node>
    <node concept="3clFbW" id="5XU7UUGbc_y" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbc_z" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbc_$" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbc__" role="3clF47" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbc_A" role="jymVt">
      <property role="TrG5h" value="modifyJNIPath" />
      <property role="DiZV1" value="false" />
      <node concept="3cqZAl" id="5XU7UUGbc_B" role="3clF45" />
      <node concept="37vLTG" id="5XU7UUGbc_C" role="3clF46">
        <property role="TrG5h" value="libraryPath" />
        <node concept="17QB3L" id="5XU7UUGbc_D" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbc_E" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbc_F" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc_G" role="3cpWs9">
            <property role="TrG5h" value="field" />
            <node concept="3uibUv" id="5XU7UUGbc_H" role="1tU5fm">
              <ref role="3uigEE" to="t6h5:~Field" resolve="Field" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbc_I" role="33vP2m">
              <node concept="3VsKOn" id="5XU7UUGbc_J" role="2Oq$k0">
                <ref role="3VsUkX" to="wyt6:~ClassLoader" resolve="ClassLoader" />
              </node>
              <node concept="liA8E" id="5XU7UUGbc_K" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Class.getDeclaredField(java.lang.String):java.lang.reflect.Field" resolve="getDeclaredField" />
                <node concept="Xl_RD" id="5XU7UUGbc_L" role="37wK5m">
                  <property role="Xl_RC" value="usr_paths" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbc_M" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbc_N" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdSA" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc_G" resolve="field" />
            </node>
            <node concept="liA8E" id="5XU7UUGbc_P" role="2OqNvi">
              <ref role="37wK5l" to="t6h5:~AccessibleObject.setAccessible(boolean):void" resolve="setAccessible" />
              <node concept="3clFbT" id="5XU7UUGbc_Q" role="37wK5m">
                <property role="3clFbU" value="true" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbc_R" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbc_S" role="3cpWs9">
            <property role="TrG5h" value="paths" />
            <node concept="10Q1$e" id="5XU7UUGbc_T" role="1tU5fm">
              <node concept="17QB3L" id="5XU7UUGbc_U" role="10Q1$1" />
            </node>
            <node concept="10QFUN" id="5XU7UUGbc_V" role="33vP2m">
              <node concept="10Q1$e" id="5XU7UUGbc_W" role="10QFUM">
                <node concept="17QB3L" id="5XU7UUGbc_X" role="10Q1$1" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbc_Y" role="10QFUP">
                <node concept="37vLTw" id="5HxjapvQZnp" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc_G" resolve="field" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcA0" role="2OqNvi">
                  <ref role="37wK5l" to="t6h5:~Field.get(java.lang.Object):java.lang.Object" resolve="get" />
                  <node concept="10Nm6u" id="5XU7UUGbcA1" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGbcA2" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcA3" role="2LFqv$">
            <node concept="3clFbJ" id="5XU7UUGbcA4" role="3cqZAp">
              <node concept="3clFbS" id="5XU7UUGbcA5" role="3clFbx">
                <node concept="3cpWs6" id="5XU7UUGbcA6" role="3cqZAp" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGbcA7" role="3clFbw">
                <node concept="37vLTw" id="5XU7UUGbcA8" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc_C" resolve="libraryPath" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcA9" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.equals(java.lang.Object):boolean" resolve="equals" />
                  <node concept="AH0OO" id="5XU7UUGbcAa" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvQZgJ" role="AHEQo">
                      <ref role="3cqZAo" node="5XU7UUGbcAd" resolve="i" />
                    </node>
                    <node concept="37vLTw" id="5HxjapvQZnH" role="AHHXb">
                      <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGbcAd" role="1Duv9x">
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5XU7UUGbcAe" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbcAf" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGbcAg" role="1Dwp0S">
            <node concept="2OqwBi" id="5XU7UUGbcAh" role="3uHU7w">
              <node concept="37vLTw" id="5XU7UUGbcAi" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
              </node>
              <node concept="1Rwk04" id="5XU7UUGbcAj" role="2OqNvi" />
            </node>
            <node concept="37vLTw" id="5HxjapvTdtO" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbcAd" resolve="i" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGbcAl" role="1Dwrff">
            <node concept="37vLTw" id="5XU7UUGbcAm" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGbcAd" resolve="i" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcAn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcAo" role="3cpWs9">
            <property role="TrG5h" value="tmp" />
            <node concept="10Q1$e" id="5XU7UUGbcAp" role="1tU5fm">
              <node concept="17QB3L" id="5XU7UUGbcAq" role="10Q1$1" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcAr" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGbcAs" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGbcAt" role="3$GQph">
                  <node concept="3cpWs3" id="5XU7UUGbcAu" role="3$I4v7">
                    <node concept="3cmrfG" id="5XU7UUGbcAv" role="3uHU7w">
                      <property role="3cmrfH" value="1" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbcAw" role="3uHU7B">
                      <node concept="37vLTw" id="5HxjapvTdSw" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
                      </node>
                      <node concept="1Rwk04" id="5XU7UUGbcAy" role="2OqNvi" />
                    </node>
                  </node>
                </node>
                <node concept="17QB3L" id="5XU7UUGbcAz" role="3$_nBY" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcA$" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbcA_" role="3clFbG">
            <ref role="37wK5l" to="wyt6:~System.arraycopy(java.lang.Object,int,java.lang.Object,int,int):void" resolve="arraycopy" />
            <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
            <node concept="37vLTw" id="5HxjapvQZol" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGbcAB" role="37wK5m">
              <property role="3cmrfH" value="0" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZtT" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbcAo" resolve="tmp" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGbcAD" role="37wK5m">
              <property role="3cmrfH" value="0" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcAE" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvTdwb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
              </node>
              <node concept="1Rwk04" id="5XU7UUGbcAG" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcAH" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbcAI" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbcAJ" role="37vLTx">
              <ref role="3cqZAo" node="5XU7UUGbc_C" resolve="libraryPath" />
            </node>
            <node concept="AH0OO" id="5XU7UUGbcAK" role="37vLTJ">
              <node concept="2OqwBi" id="5XU7UUGbcAL" role="AHEQo">
                <node concept="37vLTw" id="5HxjapvQZyO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbc_S" resolve="paths" />
                </node>
                <node concept="1Rwk04" id="5XU7UUGbcAN" role="2OqNvi" />
              </node>
              <node concept="37vLTw" id="5XU7UUGbcAO" role="AHHXb">
                <ref role="3cqZAo" node="5XU7UUGbcAo" resolve="tmp" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcAP" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcAQ" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbcAR" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbc_G" resolve="field" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcAS" role="2OqNvi">
              <ref role="37wK5l" to="t6h5:~Field.set(java.lang.Object,java.lang.Object):void" resolve="set" />
              <node concept="10Nm6u" id="5XU7UUGbcAT" role="37wK5m" />
              <node concept="37vLTw" id="5XU7UUGbcAU" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbcAo" resolve="tmp" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGbcAV" role="Sfmx6">
        <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
      </node>
      <node concept="3Tm6S6" id="5XU7UUGbcAW" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcAX" role="jymVt">
      <property role="TrG5h" value="loadSpawnerLibrary" />
      <property role="DiZV1" value="false" />
      <node concept="3cqZAl" id="5XU7UUGbcAY" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbcAZ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbMVS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbMVT" role="3cpWs9">
            <property role="TrG5h" value="mpsPath" />
            <node concept="17QB3L" id="5XU7UUGbMVU" role="1tU5fm" />
            <node concept="2OqwBi" id="5XU7UUGbMVW" role="33vP2m">
              <node concept="2YIFZM" id="5XU7UUGbMVX" role="2Oq$k0">
                <ref role="37wK5l" to="z1c3:~PathMacros.getInstance():jetbrains.mps.project.PathMacros" resolve="getInstance" />
                <ref role="1Pybhc" to="z1c3:~PathMacros" resolve="PathMacros" />
              </node>
              <node concept="liA8E" id="5XU7UUGbMVY" role="2OqNvi">
                <ref role="37wK5l" to="z1c3:~PathMacros.getValue(java.lang.String):java.lang.String" resolve="getValue" />
                <node concept="Xl_RD" id="5XU7UUGbMW0" role="37wK5m">
                  <property role="Xl_RC" value="mbeddr.github.core.home" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbMW6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbMW7" role="3cpWs9">
            <property role="TrG5h" value="librariesPath" />
            <node concept="17QB3L" id="5XU7UUGbMW8" role="1tU5fm" />
            <node concept="3cpWs3" id="5XU7UUGbMWc" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZQr" role="3uHU7B">
                <ref role="3cqZAo" node="5XU7UUGbMVT" resolve="mpsPath" />
              </node>
              <node concept="Xl_RD" id="5XU7UUGbMWa" role="3uHU7w">
                <property role="Xl_RC" value="/tools/mbeddr.spawner/lib/spawner/" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5XU7UUGbcB0" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcB1" role="3clFbx">
            <node concept="3clFbF" id="5XU7UUGbcB2" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcB3" role="3clFbG">
                <node concept="3clFbT" id="5XU7UUGbcB4" role="37vLTx">
                  <property role="3clFbU" value="true" />
                </node>
                <node concept="10M0yZ" id="5XU7UUGbcB5" role="37vLTJ">
                  <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                  <ref role="3cqZAo" node="5XU7UUGbc$E" resolve="libraryLoaded" />
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5XU7UUGbcB6" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbcB7" role="3cpWs9">
                <property role="TrG5h" value="osName" />
                <node concept="17QB3L" id="5XU7UUGbcB8" role="1tU5fm" />
                <node concept="2YIFZM" id="5XU7UUGbcB9" role="33vP2m">
                  <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
                  <ref role="37wK5l" to="wyt6:~System.getProperty(java.lang.String):java.lang.String" resolve="getProperty" />
                  <node concept="Xl_RD" id="5XU7UUGbcBa" role="37wK5m">
                    <property role="Xl_RC" value="os.name" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5XU7UUGbcBb" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbcBc" role="3cpWs9">
                <property role="TrG5h" value="arch" />
                <node concept="17QB3L" id="5XU7UUGbcBd" role="1tU5fm" />
                <node concept="2YIFZM" id="5XU7UUGbcBe" role="33vP2m">
                  <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
                  <ref role="37wK5l" to="wyt6:~System.getProperty(java.lang.String):java.lang.String" resolve="getProperty" />
                  <node concept="Xl_RD" id="5XU7UUGbcBf" role="37wK5m">
                    <property role="Xl_RC" value="os.arch" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5XU7UUGbcBg" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbcBh" role="3cpWs9">
                <property role="TrG5h" value="librarayFolder" />
                <node concept="17QB3L" id="5XU7UUGbcBi" role="1tU5fm" />
                <node concept="10Nm6u" id="5XU7UUGbcBj" role="33vP2m" />
              </node>
            </node>
            <node concept="3clFbJ" id="5XU7UUGbcBk" role="3cqZAp">
              <node concept="3clFbS" id="5XU7UUGbcBl" role="3clFbx">
                <node concept="3clFbJ" id="5XU7UUGbcBm" role="3cqZAp">
                  <node concept="3clFbS" id="5XU7UUGbcBn" role="3clFbx">
                    <node concept="3clFbF" id="5XU7UUGbcBo" role="3cqZAp">
                      <node concept="37vLTI" id="5XU7UUGbcBp" role="3clFbG">
                        <node concept="37vLTw" id="5HxjapvTdCx" role="37vLTJ">
                          <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                        </node>
                        <node concept="Xl_RD" id="5XU7UUGbcBs" role="37vLTx">
                          <property role="Xl_RC" value="win32.x86_64" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbcBw" role="3clFbw">
                    <node concept="2OqwBi" id="5XU7UUGbcBx" role="2Oq$k0">
                      <node concept="37vLTw" id="5HxjapvQZMh" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcBz" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcB$" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                      <node concept="Xl_RD" id="5XU7UUGbcB_" role="37wK5m">
                        <property role="Xl_RC" value="64" />
                      </node>
                    </node>
                  </node>
                  <node concept="3eNFk2" id="5XU7UUGbcBA" role="3eNLev">
                    <node concept="3clFbS" id="5XU7UUGbcBB" role="3eOfB_">
                      <node concept="3clFbF" id="5XU7UUGbcBC" role="3cqZAp">
                        <node concept="37vLTI" id="5XU7UUGbcBD" role="3clFbG">
                          <node concept="37vLTw" id="5HxjapvQZrW" role="37vLTJ">
                            <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                          </node>
                          <node concept="Xl_RD" id="5XU7UUGbcBG" role="37vLTx">
                            <property role="Xl_RC" value="win32.x86" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbcBK" role="3eO9$A">
                      <ref role="37wK5l" node="5XU7UUGbcDz" resolve="is32Bit" />
                      <ref role="1Pybhc" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                      <node concept="37vLTw" id="5HxjapvQZj7" role="37wK5m">
                        <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="2OqwBi" id="5XU7UUGbcBM" role="3clFbw">
                <node concept="2OqwBi" id="5XU7UUGbcBN" role="2Oq$k0">
                  <node concept="37vLTw" id="5HxjapvQZEl" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcB7" resolve="osName" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcBP" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGbcBQ" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                  <node concept="Xl_RD" id="5XU7UUGbcBR" role="37wK5m">
                    <property role="Xl_RC" value="win" />
                  </node>
                </node>
              </node>
              <node concept="3eNFk2" id="5XU7UUGbcBS" role="3eNLev">
                <node concept="3clFbS" id="5XU7UUGbcBT" role="3eOfB_">
                  <node concept="3clFbJ" id="5XU7UUGbcBU" role="3cqZAp">
                    <node concept="3clFbS" id="5XU7UUGbcBV" role="3clFbx">
                      <node concept="3clFbF" id="5XU7UUGbcBW" role="3cqZAp">
                        <node concept="37vLTI" id="5XU7UUGbcBX" role="3clFbG">
                          <node concept="37vLTw" id="5HxjapvQZr5" role="37vLTJ">
                            <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                          </node>
                          <node concept="Xl_RD" id="5XU7UUGbcC0" role="37vLTx">
                            <property role="Xl_RC" value="linux.x86_64" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbcC4" role="3clFbw">
                      <node concept="2OqwBi" id="5XU7UUGbcC5" role="2Oq$k0">
                        <node concept="37vLTw" id="5XU7UUGbcC6" role="2Oq$k0">
                          <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                        </node>
                        <node concept="liA8E" id="5XU7UUGbcC7" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcC8" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                        <node concept="Xl_RD" id="5XU7UUGbcC9" role="37wK5m">
                          <property role="Xl_RC" value="64" />
                        </node>
                      </node>
                    </node>
                    <node concept="3eNFk2" id="5XU7UUGbcCa" role="3eNLev">
                      <node concept="3clFbS" id="5XU7UUGbcCb" role="3eOfB_">
                        <node concept="3clFbF" id="5XU7UUGbcCc" role="3cqZAp">
                          <node concept="37vLTI" id="5XU7UUGbcCd" role="3clFbG">
                            <node concept="37vLTw" id="5HxjapvTdA4" role="37vLTJ">
                              <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                            </node>
                            <node concept="Xl_RD" id="5XU7UUGbcCg" role="37vLTx">
                              <property role="Xl_RC" value="linux.x86" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="2YIFZM" id="5XU7UUGbcCk" role="3eO9$A">
                        <ref role="37wK5l" node="5XU7UUGbcDz" resolve="is32Bit" />
                        <ref role="1Pybhc" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                        <node concept="37vLTw" id="5HxjapvQZRE" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcCm" role="3eO9$A">
                  <node concept="2OqwBi" id="5XU7UUGbcCn" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvTdsL" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcB7" resolve="osName" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcCp" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcCq" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                    <node concept="Xl_RD" id="5XU7UUGbcCr" role="37wK5m">
                      <property role="Xl_RC" value="linux" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3eNFk2" id="5XU7UUGbcCs" role="3eNLev">
                <node concept="3clFbS" id="5XU7UUGbcCt" role="3eOfB_">
                  <node concept="3clFbJ" id="5XU7UUGbcCu" role="3cqZAp">
                    <node concept="3clFbS" id="5XU7UUGbcCv" role="3clFbx">
                      <node concept="3clFbF" id="5XU7UUGbcCw" role="3cqZAp">
                        <node concept="37vLTI" id="5XU7UUGbcCx" role="3clFbG">
                          <node concept="37vLTw" id="5HxjapvQZAZ" role="37vLTJ">
                            <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                          </node>
                          <node concept="Xl_RD" id="5XU7UUGbcC$" role="37vLTx">
                            <property role="Xl_RC" value="macosx..x86_64" />
                          </node>
                        </node>
                      </node>
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbcCC" role="3clFbw">
                      <node concept="2OqwBi" id="5XU7UUGbcCD" role="2Oq$k0">
                        <node concept="37vLTw" id="5HxjapvTdKQ" role="2Oq$k0">
                          <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                        </node>
                        <node concept="liA8E" id="5XU7UUGbcCF" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcCG" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                        <node concept="Xl_RD" id="5XU7UUGbcCH" role="37wK5m">
                          <property role="Xl_RC" value="64" />
                        </node>
                      </node>
                    </node>
                    <node concept="3eNFk2" id="5XU7UUGbcCI" role="3eNLev">
                      <node concept="3clFbS" id="5XU7UUGbcCJ" role="3eOfB_">
                        <node concept="3clFbF" id="5XU7UUGbcCK" role="3cqZAp">
                          <node concept="37vLTI" id="5XU7UUGbcCL" role="3clFbG">
                            <node concept="37vLTw" id="5XU7UUGbcCM" role="37vLTJ">
                              <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                            </node>
                            <node concept="Xl_RD" id="5XU7UUGbcCO" role="37vLTx">
                              <property role="Xl_RC" value="macosx.x86" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="2YIFZM" id="5XU7UUGbcCS" role="3eO9$A">
                        <ref role="37wK5l" node="5XU7UUGbcDz" resolve="is32Bit" />
                        <ref role="1Pybhc" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                        <node concept="37vLTw" id="5HxjapvQZwt" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                        </node>
                      </node>
                    </node>
                    <node concept="3eNFk2" id="5XU7UUGbcCU" role="3eNLev">
                      <node concept="3clFbS" id="5XU7UUGbcCV" role="3eOfB_">
                        <node concept="3clFbF" id="5XU7UUGbcCW" role="3cqZAp">
                          <node concept="37vLTI" id="5XU7UUGbcCX" role="3clFbG">
                            <node concept="37vLTw" id="5HxjapvQZId" role="37vLTJ">
                              <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                            </node>
                            <node concept="Xl_RD" id="5XU7UUGbcD0" role="37vLTx">
                              <property role="Xl_RC" value="macosx.ppc" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="2OqwBi" id="5XU7UUGbcD4" role="3eO9$A">
                        <node concept="2OqwBi" id="5XU7UUGbcD5" role="2Oq$k0">
                          <node concept="37vLTw" id="5HxjapvQZjL" role="2Oq$k0">
                            <ref role="3cqZAo" node="5XU7UUGbcBc" resolve="arch" />
                          </node>
                          <node concept="liA8E" id="5XU7UUGbcD7" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                          </node>
                        </node>
                        <node concept="liA8E" id="5XU7UUGbcD8" role="2OqNvi">
                          <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                          <node concept="Xl_RD" id="5XU7UUGbcD9" role="37wK5m">
                            <property role="Xl_RC" value="ppc" />
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcDa" role="3eO9$A">
                  <node concept="2OqwBi" id="5XU7UUGbcDb" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvQZat" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcB7" resolve="osName" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcDd" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcDe" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                    <node concept="Xl_RD" id="5XU7UUGbcDf" role="37wK5m">
                      <property role="Xl_RC" value="mac" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="SfApY" id="5XU7UUGbcDg" role="3cqZAp">
              <node concept="3clFbS" id="5XU7UUGbcDh" role="SfCbr">
                <node concept="3clFbF" id="5XU7UUGbcDi" role="3cqZAp">
                  <node concept="3$87h9" id="5XU7UUGbcDj" role="3clFbG">
                    <ref role="37wK5l" node="5XU7UUGbc_A" resolve="modifyJNIPath" />
                    <node concept="3cpWs3" id="5XU7UUGbMWp" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZtg" role="3uHU7B">
                        <ref role="3cqZAo" node="5XU7UUGbMW7" resolve="librariesPath" />
                      </node>
                      <node concept="37vLTw" id="5HxjapvTdRq" role="3uHU7w">
                        <ref role="3cqZAo" node="5XU7UUGbcBh" resolve="librarayFolder" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="TDmWw" id="5XU7UUGbcDl" role="TEbGg">
                <node concept="3cpWsn" id="5XU7UUGbcDm" role="TDEfY">
                  <property role="TrG5h" value="e" />
                  <node concept="3uibUv" id="5XU7UUGbcDn" role="1tU5fm">
                    <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
                  </node>
                </node>
                <node concept="3clFbS" id="5XU7UUGbcDo" role="TDEfX">
                  <node concept="3xETmq" id="5XU7UUGbcDp" role="3cqZAp">
                    <node concept="3_1$Yv" id="5XU7UUGbcDq" role="3_9lra">
                      <node concept="3cpWs3" id="5XU7UUGbcDr" role="3_1BAH">
                        <node concept="2OqwBi" id="5XU7UUGbcDs" role="3uHU7w">
                          <node concept="37vLTw" id="5HxjapvTdQf" role="2Oq$k0">
                            <ref role="3cqZAo" node="5XU7UUGbcDm" resolve="e" />
                          </node>
                          <node concept="liA8E" id="5XU7UUGbcDu" role="2OqNvi">
                            <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                          </node>
                        </node>
                        <node concept="Xl_RD" id="5XU7UUGbcDv" role="3uHU7B">
                          <property role="Xl_RC" value="Could not load library via JNI: " />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3fqX7Q" id="5XU7UUGbcDw" role="3clFbw">
            <node concept="10M0yZ" id="5XU7UUGbcDx" role="3fr31v">
              <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
              <ref role="3cqZAo" node="5XU7UUGbc$E" resolve="libraryLoaded" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcDy" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcDz" role="jymVt">
      <property role="TrG5h" value="is32Bit" />
      <node concept="3Tm6S6" id="5XU7UUGbcD$" role="1B3o_S" />
      <node concept="10P_77" id="5XU7UUGbcD_" role="3clF45" />
      <node concept="37vLTG" id="5XU7UUGbcDA" role="3clF46">
        <property role="TrG5h" value="arch" />
        <node concept="17QB3L" id="5XU7UUGbcDB" role="1tU5fm" />
      </node>
      <node concept="3clFbS" id="5XU7UUGbcDC" role="3clF47">
        <node concept="3cpWs6" id="5XU7UUGbcDD" role="3cqZAp">
          <node concept="22lmx$" id="5XU7UUGbcDE" role="3cqZAk">
            <node concept="2OqwBi" id="5XU7UUGbcDF" role="3uHU7w">
              <node concept="2OqwBi" id="5XU7UUGbcDG" role="2Oq$k0">
                <node concept="37vLTw" id="5XU7UUGbcDH" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcDA" resolve="arch" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcDI" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcDJ" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                <node concept="Xl_RD" id="5XU7UUGbcDK" role="37wK5m">
                  <property role="Xl_RC" value="i386" />
                </node>
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcDL" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGbcDM" role="2Oq$k0">
                <node concept="37vLTw" id="5XU7UUGbcDN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcDA" resolve="arch" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcDO" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcDP" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
                <node concept="Xl_RD" id="5XU7UUGbcDQ" role="37wK5m">
                  <property role="Xl_RC" value="x86" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcDR" role="jymVt">
      <property role="TrG5h" value="getHomeVarPath" />
      <node concept="17QB3L" id="5XU7UUGbcDS" role="3clF45" />
      <node concept="3Tm6S6" id="5XU7UUGbcDT" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcDU" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcDV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcDW" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="17QB3L" id="5XU7UUGbcDX" role="1tU5fm" />
            <node concept="10Nm6u" id="5XU7UUGbcDY" role="33vP2m" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcDZ" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcE0" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcE1" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcE2" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbcE3" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcDW" resolve="result" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcE4" role="37vLTx">
                  <node concept="2YIFZM" id="5XU7UUGbcE5" role="2Oq$k0">
                    <ref role="37wK5l" to="z1c3:~PathMacros.getInstance():jetbrains.mps.project.PathMacros" resolve="getInstance" />
                    <ref role="1Pybhc" to="z1c3:~PathMacros" resolve="PathMacros" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcE6" role="2OqNvi">
                    <ref role="37wK5l" to="z1c3:~PathMacros.getValue(java.lang.String):java.lang.String" resolve="getValue" />
                    <node concept="10M0yZ" id="5XU7UUGbcE7" role="37wK5m">
                      <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                      <ref role="3cqZAo" node="5XU7UUGbc$I" resolve="HOME_VAR" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcE8" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcE9" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcEa" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~NullPointerException" resolve="NullPointerException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcEb" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcEj" role="3cqZAp">
                <node concept="37vLTI" id="5XU7UUGbcEk" role="3clFbG">
                  <node concept="10M0yZ" id="5XU7UUGbcEl" role="37vLTx">
                    <ref role="3cqZAo" node="5XU7UUGbc$Y" resolve="STATIC_BASE_PATH" />
                    <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZRj" role="37vLTJ">
                    <ref role="3cqZAo" node="5XU7UUGbcDW" resolve="result" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcEn" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdPO" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcDW" resolve="result" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcEp" role="jymVt">
      <property role="TrG5h" value="getBinaryPath" />
      <node concept="17QB3L" id="5XU7UUGbcEq" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcEr" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcEs" role="3clF47">
        <node concept="3clFbJ" id="5XU7UUGbcEt" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcEu" role="3clFbx">
            <node concept="3clFbF" id="5XU7UUGbcEv" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcEw" role="3clFbG">
                <node concept="3cpWs3" id="5XU7UUGbcEx" role="37vLTx">
                  <node concept="Xl_RD" id="5XU7UUGbcEy" role="3uHU7w">
                    <property role="Xl_RC" value=".exe" />
                  </node>
                  <node concept="10M0yZ" id="5XU7UUGbcEz" role="3uHU7B">
                    <ref role="3cqZAo" node="5XU7UUGbc$U" resolve="BINARY_NAME" />
                    <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                  </node>
                </node>
                <node concept="10M0yZ" id="5XU7UUGbcE$" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbc$U" resolve="BINARY_NAME" />
                  <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                </node>
              </node>
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcE_" role="3clFbw">
            <node concept="2OqwBi" id="5XU7UUGbcEA" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGbcEB" role="2Oq$k0">
                <ref role="37wK5l" to="wyt6:~System.getProperty(java.lang.String):java.lang.String" resolve="getProperty" />
                <ref role="1Pybhc" to="wyt6:~System" resolve="System" />
                <node concept="Xl_RD" id="5XU7UUGbcEC" role="37wK5m">
                  <property role="Xl_RC" value="os.name" />
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGbcED" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~String.toLowerCase():java.lang.String" resolve="toLowerCase" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcEE" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~String.contains(java.lang.CharSequence):boolean" resolve="contains" />
              <node concept="Xl_RD" id="5XU7UUGbcEF" role="37wK5m">
                <property role="Xl_RC" value="win" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcEG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcEH" role="3cpWs9">
            <property role="TrG5h" value="basePath" />
            <node concept="17QB3L" id="5XU7UUGbcEI" role="1tU5fm" />
            <node concept="3$87h9" id="5XU7UUGbcEJ" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbcDR" resolve="getHomeVarPath" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcEK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcEL" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="17QB3L" id="5XU7UUGbcEM" role="1tU5fm" />
            <node concept="3cpWs3" id="5XU7UUGbcEN" role="33vP2m">
              <node concept="10M0yZ" id="5XU7UUGbcEO" role="3uHU7w">
                <ref role="3cqZAo" node="5XU7UUGbc$U" resolve="BINARY_NAME" />
                <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
              </node>
              <node concept="3cpWs3" id="5XU7UUGbcEP" role="3uHU7B">
                <node concept="37vLTw" id="5HxjapvQZ9s" role="3uHU7B">
                  <ref role="3cqZAo" node="5XU7UUGbcEH" resolve="basePath" />
                </node>
                <node concept="10M0yZ" id="5XU7UUGbcER" role="3uHU7w">
                  <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                  <ref role="3cqZAo" node="5XU7UUGbc$Q" resolve="RELATIVE_PROJECT_PATH" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcES" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTel_" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcEL" resolve="result" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcEU" role="jymVt">
      <property role="TrG5h" value="getMakePath" />
      <node concept="17QB3L" id="5XU7UUGbcEV" role="3clF45" />
      <node concept="3Tm6S6" id="5XU7UUGbcEW" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcEX" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcEY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcEZ" role="3cpWs9">
            <property role="TrG5h" value="basePath" />
            <node concept="17QB3L" id="5XU7UUGbcF0" role="1tU5fm" />
            <node concept="3$87h9" id="5XU7UUGbcF1" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbcDR" resolve="getHomeVarPath" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcF2" role="3cqZAp">
          <node concept="3cpWs3" id="5XU7UUGbcF3" role="3cqZAk">
            <node concept="37vLTw" id="5HxjapvTdAE" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbcEZ" resolve="basePath" />
            </node>
            <node concept="10M0yZ" id="5XU7UUGbcF5" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGbc$Q" resolve="RELATIVE_PROJECT_PATH" />
              <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcF6" role="jymVt">
      <property role="TrG5h" value="makeBinary" />
      <node concept="3cqZAl" id="5XU7UUGbcF7" role="3clF45" />
      <node concept="3Tm6S6" id="5XU7UUGbcF8" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcF9" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcFa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcFb" role="3cpWs9">
            <property role="TrG5h" value="makePath" />
            <node concept="17QB3L" id="5XU7UUGbcFc" role="1tU5fm" />
            <node concept="3$87h9" id="5XU7UUGbcFd" role="33vP2m">
              <ref role="37wK5l" node="5XU7UUGbcEU" resolve="getMakePath" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcFe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcFf" role="3cpWs9">
            <property role="TrG5h" value="workingDirectory" />
            <node concept="3uibUv" id="5XU7UUGbcFg" role="1tU5fm">
              <ref role="3uigEE" to="guwi:~File" resolve="File" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcFh" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbcFi" role="2ShVmc">
                <ref role="37wK5l" to="guwi:~File.&lt;init&gt;(java.lang.String)" resolve="File" />
                <node concept="3$87h9" id="5XU7UUGbcFj" role="37wK5m">
                  <ref role="37wK5l" node="5XU7UUGbcEU" resolve="getMakePath" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcFk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcFl" role="3vwVQn">
            <node concept="37vLTw" id="5HxjapvTdBF" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcFf" resolve="workingDirectory" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcFn" role="2OqNvi">
              <ref role="37wK5l" to="guwi:~File.exists():boolean" resolve="exists" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcFo" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcFp" role="3cpWs9">
            <property role="TrG5h" value="builder" />
            <node concept="3uibUv" id="5XU7UUGbcFq" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~ProcessBuilder" resolve="ProcessBuilder" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcFr" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbcFs" role="2ShVmc">
                <ref role="37wK5l" to="wyt6:~ProcessBuilder.&lt;init&gt;(java.lang.String...)" resolve="ProcessBuilder" />
                <node concept="Xl_RD" id="5XU7UUGbcFt" role="37wK5m">
                  <property role="Xl_RC" value="make" />
                </node>
                <node concept="Xl_RD" id="5XU7UUGbcFu" role="37wK5m">
                  <property role="Xl_RC" value="debug" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcFv" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcFw" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbcFx" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcFp" resolve="builder" />
            </node>
            <node concept="liA8E" id="5XU7UUGbcFy" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~ProcessBuilder.directory(java.io.File):java.lang.ProcessBuilder" resolve="directory" />
              <node concept="37vLTw" id="5HxjapvTdVc" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbcFf" resolve="workingDirectory" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcF$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcF_" role="3cpWs9">
            <property role="TrG5h" value="makeProcess" />
            <node concept="3uibUv" id="5XU7UUGbcFA" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Process" resolve="Process" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbcFB" role="33vP2m" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcFC" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcFD" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcFE" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcFF" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGbcFG" role="37vLTx">
                  <node concept="37vLTw" id="5HxjapvTd_B" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcFp" resolve="builder" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcFI" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~ProcessBuilder.start():java.lang.Process" resolve="start" />
                  </node>
                </node>
                <node concept="37vLTw" id="5HxjapvQZ8T" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcF_" resolve="makeProcess" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcFK" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcFL" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcFM" role="1tU5fm">
                <ref role="3uigEE" to="guwi:~IOException" resolve="IOException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcFN" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcFO" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbcFP" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvTdyC" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcFL" resolve="e" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcFR" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Throwable.printStackTrace():void" resolve="printStackTrace" />
                  </node>
                </node>
              </node>
              <node concept="3xETmq" id="5XU7UUGbcFS" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcFT" role="3_9lra">
                  <node concept="Xl_RD" id="5XU7UUGbcFU" role="3_1BAH">
                    <property role="Xl_RC" value="Could not start process" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcFV" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcFW" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcFX" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcFY" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTeq_" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcF_" resolve="makeProcess" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcG0" role="2OqNvi">
                  <ref role="37wK5l" to="wyt6:~Process.waitFor():int" resolve="waitFor" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcG1" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcG2" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcG3" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~InterruptedException" resolve="InterruptedException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcG4" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcG5" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbcG6" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvTdWQ" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcG2" resolve="e" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcG8" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Throwable.printStackTrace():void" resolve="printStackTrace" />
                  </node>
                </node>
              </node>
              <node concept="3xETmq" id="5XU7UUGbcG9" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcGa" role="3_9lra">
                  <node concept="Xl_RD" id="5XU7UUGbcGb" role="3_1BAH">
                    <property role="Xl_RC" value="Could not wait until process ended" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbcGc" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcGd" role="3vwVQn">
            <node concept="10M0yZ" id="5XU7UUGbcGe" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGbc_2" resolve="PROCESS_EXITED_CORRECTLY" />
              <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcGf" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZkK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcF_" resolve="makeProcess" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcGh" role="2OqNvi">
                <ref role="37wK5l" to="wyt6:~Process.exitValue():int" resolve="exitValue" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcGi" role="jymVt">
      <property role="TrG5h" value="createSession" />
      <node concept="3uibUv" id="5XU7UUGbcGj" role="3clF45">
        <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcGk" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcGl" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcGm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcGn" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGbcGo" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbcGp" role="33vP2m" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcGq" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcGr" role="SfCbr">
            <node concept="3cpWs8" id="5XU7UUGbcGs" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbcGt" role="3cpWs9">
                <property role="TrG5h" value="path" />
                <node concept="17QB3L" id="5XU7UUGbcGu" role="1tU5fm" />
              </node>
            </node>
            <node concept="3clFbJ" id="5XU7UUGbcGv" role="3cqZAp">
              <node concept="3clFbS" id="5XU7UUGbcGw" role="3clFbx">
                <node concept="3clFbF" id="5XU7UUGbcGx" role="3cqZAp">
                  <node concept="37vLTI" id="5XU7UUGbcGy" role="3clFbG">
                    <node concept="37vLTw" id="5HxjapvQZPM" role="37vLTJ">
                      <ref role="3cqZAo" node="5XU7UUGbcGt" resolve="path" />
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGbcG$" role="37vLTx">
                      <ref role="1Pybhc" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                      <ref role="37wK5l" node="5XU7UUGbcEp" resolve="getBinaryPath" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="3clFbC" id="5XU7UUGbcG_" role="3clFbw">
                <node concept="10Nm6u" id="5XU7UUGbcGA" role="3uHU7w" />
                <node concept="37vLTw" id="5XU7UUGbcGB" role="3uHU7B">
                  <ref role="3cqZAo" node="5XU7UUGbcH0" resolve="sessionPath" />
                </node>
              </node>
              <node concept="9aQIb" id="5XU7UUGbcGC" role="9aQIa">
                <node concept="3clFbS" id="5XU7UUGbcGD" role="9aQI4">
                  <node concept="3clFbF" id="5XU7UUGbcGE" role="3cqZAp">
                    <node concept="37vLTI" id="5XU7UUGbcGF" role="3clFbG">
                      <node concept="37vLTw" id="5HxjapvQZ7P" role="37vLTJ">
                        <ref role="3cqZAo" node="5XU7UUGbcGt" resolve="path" />
                      </node>
                      <node concept="37vLTw" id="5XU7UUGbcGH" role="37vLTx">
                        <ref role="3cqZAo" node="5XU7UUGbcH0" resolve="sessionPath" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbcGI" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcGJ" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbcGM" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcGn" resolve="session" />
                </node>
                <node concept="2YIFZM" id="1q9LF7vGkRZ" role="37vLTx">
                  <ref role="37wK5l" to="y0ja:~CDTDebuggerFacade.createSession(java.lang.String,int,int):org.eclipse.cdt.debug.core.cdi.ICDISession" resolve="createSession" />
                  <ref role="1Pybhc" to="y0ja:~CDTDebuggerFacade" resolve="CDTDebuggerFacade" />
                  <node concept="37vLTw" id="5HxjapvTdPp" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGbcGt" resolve="path" />
                  </node>
                  <node concept="3cmrfG" id="1q9LF7vGkS1" role="37wK5m">
                    <property role="3cmrfH" value="2000" />
                  </node>
                  <node concept="3cmrfG" id="1q9LF7vGkS2" role="37wK5m">
                    <property role="3cmrfH" value="1500" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcGN" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcGO" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcGP" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcGQ" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcGR" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcGS" role="3_9lra">
                  <node concept="3cpWs3" id="5XU7UUGbcGT" role="3_1BAH">
                    <node concept="2OqwBi" id="5XU7UUGbcGU" role="3uHU7w">
                      <node concept="37vLTw" id="5HxjapvTdty" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbcGO" resolve="e" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcGW" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5XU7UUGbcGX" role="3uHU7B">
                      <property role="Xl_RC" value="Could not create session: " />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcGY" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZob" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcGn" resolve="session" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcH0" role="3clF46">
        <property role="TrG5h" value="sessionPath" />
        <node concept="17QB3L" id="5XU7UUGbcH1" role="1tU5fm" />
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcH2" role="jymVt">
      <property role="TrG5h" value="beforeTestCase" />
      <node concept="3cqZAl" id="5XU7UUGbcH3" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcH4" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcH5" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGbcH6" role="3cqZAp">
          <node concept="3$87h9" id="5XU7UUGbcH7" role="3clFbG">
            <ref role="37wK5l" node="5XU7UUGbcAX" resolve="loadSpawnerLibrary" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcH8" role="3cqZAp">
          <node concept="3$87h9" id="5XU7UUGbcH9" role="3clFbG">
            <ref role="37wK5l" node="5XU7UUGbcF6" resolve="makeBinary" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcHa" role="jymVt">
      <property role="TrG5h" value="terminateSession" />
      <node concept="3cqZAl" id="5XU7UUGbcHb" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcHc" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcHd" role="3clF47">
        <node concept="SfApY" id="5XU7UUGbcHe" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcHf" role="SfCbr">
            <node concept="3clFbJ" id="5XU7UUGbcHg" role="3cqZAp">
              <node concept="3y3z36" id="5XU7UUGbcHh" role="3clFbw">
                <node concept="37vLTw" id="5XU7UUGbcHi" role="3uHU7B">
                  <ref role="3cqZAo" node="5XU7UUGbcH$" resolve="session" />
                </node>
                <node concept="10Nm6u" id="5XU7UUGbcHj" role="3uHU7w" />
              </node>
              <node concept="3clFbS" id="5XU7UUGbcHk" role="3clFbx">
                <node concept="3clFbF" id="5XU7UUGbcHl" role="3cqZAp">
                  <node concept="2OqwBi" id="5XU7UUGbcHm" role="3clFbG">
                    <node concept="37vLTw" id="5XU7UUGbcHn" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcH$" resolve="session" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcHo" role="2OqNvi">
                      <ref role="37wK5l" to="ys5c:~ICDISession.terminate():void" resolve="terminate" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcHp" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcHq" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcHr" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcHs" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcHt" role="3cqZAp">
                <node concept="2OqwBi" id="5XU7UUGbcHu" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvQZCL" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcHq" resolve="e" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcHw" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Throwable.printStackTrace():void" resolve="printStackTrace" />
                  </node>
                </node>
              </node>
              <node concept="3xETmq" id="5XU7UUGbcHx" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcHy" role="3_9lra">
                  <node concept="Xl_RD" id="5XU7UUGbcHz" role="3_1BAH">
                    <property role="Xl_RC" value="Could not terminate session" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcH$" role="3clF46">
        <property role="TrG5h" value="session" />
        <node concept="3uibUv" id="5XU7UUGbcH_" role="1tU5fm">
          <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcHA" role="jymVt">
      <property role="TrG5h" value="getTopFrameLocator" />
      <node concept="37vLTG" id="5XU7UUGbcHB" role="3clF46">
        <property role="TrG5h" value="target" />
        <node concept="3uibUv" id="2npj2sqFbmH" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGbcHD" role="3clF45">
        <ref role="3uigEE" to="ys5c:~ICDILocator" resolve="ICDILocator" />
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcHE" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcHF" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcHG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcHH" role="3cpWs9">
            <property role="TrG5h" value="locator" />
            <node concept="3uibUv" id="5XU7UUGbcHI" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILocator" resolve="ICDILocator" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGbcHJ" role="33vP2m" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcHK" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcHL" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcHM" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcHN" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZs0" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcHH" resolve="locator" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcHP" role="37vLTx">
                  <node concept="AH0OO" id="5XU7UUGbcHQ" role="2Oq$k0">
                    <node concept="3cmrfG" id="5XU7UUGbcHR" role="AHEQo">
                      <property role="3cmrfH" value="0" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGbcHS" role="AHHXb">
                      <node concept="2OqwBi" id="5XU7UUGbcHT" role="2Oq$k0">
                        <node concept="37vLTw" id="5XU7UUGbcHU" role="2Oq$k0">
                          <ref role="3cqZAo" node="5XU7UUGbcHB" resolve="target" />
                        </node>
                        <node concept="liA8E" id="5XU7UUGbcHV" role="2OqNvi">
                          <ref role="37wK5l" to="n06z:~ICDIThreadGroup.getCurrentThread():org.eclipse.cdt.debug.core.cdi.model.ICDIThread" resolve="getCurrentThread" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcHW" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIThread.getStackFrames():org.eclipse.cdt.debug.core.cdi.model.ICDIStackFrame[]" resolve="getStackFrames" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGbcHX" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIStackFrame.getLocator():org.eclipse.cdt.debug.core.cdi.ICDILocator" resolve="getLocator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcHY" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcHZ" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcI0" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcI1" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcI2" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcI3" role="3_9lra">
                  <node concept="Xl_RD" id="5XU7UUGbcI4" role="3_1BAH">
                    <property role="Xl_RC" value="Could not retrieve the locator" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcI5" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZ_C" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcHH" resolve="locator" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcI7" role="jymVt">
      <property role="TrG5h" value="breakpointCreated" />
      <node concept="37vLTG" id="5XU7UUGbcI8" role="3clF46">
        <property role="TrG5h" value="target" />
        <node concept="3uibUv" id="2npj2sqExzW" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcIa" role="3clF46">
        <property role="TrG5h" value="createdBreakpoint" />
        <node concept="3uibUv" id="5XU7UUGbcIb" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
        </node>
      </node>
      <node concept="10P_77" id="5XU7UUGbcIc" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcId" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcIe" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcIf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcIg" role="3cpWs9">
            <property role="TrG5h" value="breakpointCreated" />
            <node concept="10P_77" id="5XU7UUGbcIh" role="1tU5fm" />
            <node concept="3clFbT" id="5XU7UUGbcIi" role="33vP2m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbcIj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcIk" role="3cpWs9">
            <property role="TrG5h" value="breakpoints" />
            <node concept="10Q1$e" id="5XU7UUGbcIl" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbcIm" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
              </node>
            </node>
            <node concept="10Nm6u" id="5XU7UUGbcIn" role="33vP2m" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcIo" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcIp" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcIq" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcIr" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGbcIs" role="37vLTx">
                  <node concept="37vLTw" id="5XU7UUGbcIt" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcI8" resolve="target" />
                  </node>
                  <node concept="liA8E" id="2npj2sqEPJH" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.getBreakpoints():org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpoint[]" resolve="getBreakpoints" />
                  </node>
                </node>
                <node concept="37vLTw" id="5HxjapvQZ9w" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcIk" resolve="breakpoints" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcIw" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcIx" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcIy" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcIz" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcI$" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcI_" role="3_9lra">
                  <node concept="Xl_RD" id="5XU7UUGbcIA" role="3_1BAH">
                    <property role="Xl_RC" value="Could not retrieve breakpoints" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcIB" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcIC" role="2Gsz3X">
            <property role="TrG5h" value="currentBreakpoint" />
          </node>
          <node concept="37vLTw" id="5HxjapvQZ92" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGbcIk" resolve="breakpoints" />
          </node>
          <node concept="3clFbS" id="5XU7UUGbcIE" role="2LFqv$">
            <node concept="3clFbJ" id="5XU7UUGbcIF" role="3cqZAp">
              <node concept="3clFbC" id="5XU7UUGbcIG" role="3clFbw">
                <node concept="37vLTw" id="5XU7UUGbcIH" role="3uHU7w">
                  <ref role="3cqZAo" node="5XU7UUGbcIa" resolve="createdBreakpoint" />
                </node>
                <node concept="2GrUjf" id="5XU7UUGbcII" role="3uHU7B">
                  <ref role="2Gs0qQ" node="5XU7UUGbcIC" resolve="currentBreakpoint" />
                </node>
              </node>
              <node concept="3clFbS" id="5XU7UUGbcIJ" role="3clFbx">
                <node concept="3clFbF" id="5XU7UUGbcIK" role="3cqZAp">
                  <node concept="37vLTI" id="5XU7UUGbcIL" role="3clFbG">
                    <node concept="3clFbT" id="5XU7UUGbcIM" role="37vLTx">
                      <property role="3clFbU" value="true" />
                    </node>
                    <node concept="37vLTw" id="5HxjapvQZh1" role="37vLTJ">
                      <ref role="3cqZAo" node="5XU7UUGbcIg" resolve="breakpointCreated" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcIO" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbcIP" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcIg" resolve="breakpointCreated" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcIQ" role="jymVt">
      <property role="TrG5h" value="suspedThreadAfterCDTStart" />
      <node concept="3cqZAl" id="5XU7UUGbcIR" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcIS" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcIT" role="3clF47">
        <node concept="SfApY" id="5XU7UUGbcIU" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcIV" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcIW" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGbcIX" role="3clFbG">
                <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                <node concept="10M0yZ" id="5XU7UUGbcIY" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGbc_6" resolve="STARTING_TIME" />
                  <ref role="1PxDUh" node="5XU7UUGbc$D" resolve="CDTUtilClass" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcIZ" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcJ0" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcJ1" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~InterruptedException" resolve="InterruptedException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcJ2" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcJ3" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcJ4" role="3_9lra">
                  <node concept="3cpWs3" id="4r78KUsiH8E" role="3_1BAH">
                    <node concept="Xl_RD" id="5XU7UUGbcJ5" role="3uHU7B">
                      <property role="Xl_RC" value="Could not suspend debugger: " />
                    </node>
                    <node concept="2OqwBi" id="4r78KUsiH8H" role="3uHU7w">
                      <node concept="37vLTw" id="5HxjapvTdBt" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbcJ0" resolve="e" />
                      </node>
                      <node concept="liA8E" id="4r78KUsiH8J" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcJ6" role="jymVt">
      <property role="TrG5h" value="suspedThreadAfterCDTRequest" />
      <node concept="3cqZAl" id="5XU7UUGbcJ7" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcJ8" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcJ9" role="3clF47">
        <node concept="SfApY" id="5XU7UUGbcJa" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcJb" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcJc" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGbcJd" role="3clFbG">
                <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                <node concept="3cmrfG" id="5XU7UUGbcJe" role="37wK5m">
                  <property role="3cmrfH" value="500" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcJf" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcJg" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcJh" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~InterruptedException" resolve="InterruptedException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcJi" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGbcJj" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcJk" role="3_9lra">
                  <node concept="3cpWs3" id="4r78KUsiH82" role="3_1BAH">
                    <node concept="Xl_RD" id="5XU7UUGbcJl" role="3uHU7B">
                      <property role="Xl_RC" value="Could not suspend debugger: " />
                    </node>
                    <node concept="2OqwBi" id="4r78KUsiH87" role="3uHU7w">
                      <node concept="37vLTw" id="4r78KUsiH88" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbcJg" resolve="e" />
                      </node>
                      <node concept="liA8E" id="4r78KUsiH89" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcJm" role="jymVt">
      <property role="TrG5h" value="resumeDebugger" />
      <node concept="37vLTG" id="5XU7UUGbcJn" role="3clF46">
        <property role="TrG5h" value="target" />
        <node concept="3uibUv" id="2npj2sqFjSB" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
        </node>
      </node>
      <node concept="3cqZAl" id="5XU7UUGbcJp" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcJq" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcJr" role="3clF47">
        <node concept="SfApY" id="5XU7UUGbcJs" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcJt" role="SfCbr">
            <node concept="3clFbF" id="4r78KUsiH75" role="3cqZAp">
              <node concept="2YIFZM" id="4r78KUsiH76" role="3clFbG">
                <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                <node concept="3cmrfG" id="4r78KUsiH77" role="37wK5m">
                  <property role="3cmrfH" value="1000" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbcJu" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcJv" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbcJw" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcJn" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcJx" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIExecuteResume.resume(boolean):void" resolve="resume" />
                  <node concept="3clFbT" id="5XU7UUGbcJy" role="37wK5m" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcJz" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcJ$" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcJ_" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcJA" role="TDEfX">
              <node concept="3clFbF" id="4r78KUsiH9z" role="3cqZAp">
                <node concept="2OqwBi" id="4r78KUsiH9N" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvQZJn" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcJ$" resolve="e" />
                  </node>
                  <node concept="liA8E" id="4r78KUsiH9T" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Throwable.printStackTrace():void" resolve="printStackTrace" />
                  </node>
                </node>
              </node>
              <node concept="3xETmq" id="5XU7UUGbcJB" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGbcJC" role="3_9lra">
                  <node concept="3cpWs3" id="4r78KUsiH7s" role="3_1BAH">
                    <node concept="2OqwBi" id="4r78KUsiH7I" role="3uHU7w">
                      <node concept="37vLTw" id="5HxjapvQZQB" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGbcJ$" resolve="e" />
                      </node>
                      <node concept="liA8E" id="4r78KUsiH7N" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                      </node>
                    </node>
                    <node concept="Xl_RD" id="5XU7UUGbcJD" role="3uHU7B">
                      <property role="Xl_RC" value="Could not resume debugger: " />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="Qs71p" id="5XU7UUGbcJE" role="jymVt">
      <property role="2bfB8j" value="true" />
      <property role="TrG5h" value="ListenerEvents" />
      <node concept="QsSxf" id="5XU7UUGbcJF" role="Qtgdg">
        <property role="TrG5h" value="ATTACHED" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="QsSxf" id="5XU7UUGbcJG" role="Qtgdg">
        <property role="TrG5h" value="DETACHED" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="QsSxf" id="5XU7UUGbcJH" role="Qtgdg">
        <property role="TrG5h" value="ERROR_OCCURED" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="QsSxf" id="5XU7UUGbcJI" role="Qtgdg">
        <property role="TrG5h" value="RESUMED" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="QsSxf" id="5XU7UUGbcJJ" role="Qtgdg">
        <property role="TrG5h" value="SUSPENDED" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="QsSxf" id="5XU7UUGbcJK" role="Qtgdg">
        <property role="TrG5h" value="ALL" />
        <ref role="37wK5l" node="5XU7UUGbcJM" resolve="CDTUtilClass.ListenerEvents" />
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcJL" role="1B3o_S" />
      <node concept="3clFbW" id="5XU7UUGbcJM" role="jymVt">
        <node concept="3cqZAl" id="5XU7UUGbcJN" role="3clF45" />
        <node concept="3Tm1VV" id="5XU7UUGbcJO" role="1B3o_S" />
        <node concept="3clFbS" id="5XU7UUGbcJP" role="3clF47" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbcJQ">
    <property role="TrG5h" value="GuiceTestingUtil" />
    <property role="3GE5qa" value="util" />
    <node concept="3Tm1VV" id="5XU7UUGbcJR" role="1B3o_S" />
    <node concept="3clFbW" id="5XU7UUGbcJS" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbcJT" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcJU" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcJV" role="3clF47" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcJW" role="jymVt">
      <property role="TrG5h" value="areSameObject" />
      <property role="DiZV1" value="false" />
      <node concept="10P_77" id="5XU7UUGbcJX" role="3clF45" />
      <node concept="37vLTG" id="5XU7UUGbcJY" role="3clF46">
        <property role="TrG5h" value="sameInstances" />
        <node concept="_YKpA" id="5XU7UUGbcJZ" role="1tU5fm">
          <node concept="3uibUv" id="5XU7UUGbcK0" role="_ZDj9">
            <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
          </node>
        </node>
      </node>
      <node concept="3clFbS" id="5XU7UUGbcK1" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcK2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcK3" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="10P_77" id="5XU7UUGbcK4" role="1tU5fm" />
            <node concept="3clFbT" id="5XU7UUGbcK5" role="33vP2m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5XU7UUGbcK6" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcK7" role="3clFbx">
            <node concept="3cpWs8" id="5XU7UUGbcK8" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGbcK9" role="3cpWs9">
                <property role="TrG5h" value="firstObject" />
                <node concept="3uibUv" id="5XU7UUGbcKa" role="1tU5fm">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGbcKb" role="33vP2m">
                  <node concept="37vLTw" id="5XU7UUGbcKc" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbcJY" resolve="sameInstances" />
                  </node>
                  <node concept="1uHKPH" id="5XU7UUGbcKd" role="2OqNvi" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbcKe" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcKf" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZSz" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcK3" resolve="result" />
                </node>
                <node concept="1Wc70l" id="5XU7UUGbcKh" role="37vLTx">
                  <node concept="2OqwBi" id="5XU7UUGbcKi" role="3uHU7w">
                    <node concept="37vLTw" id="5XU7UUGbcKj" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcJY" resolve="sameInstances" />
                    </node>
                    <node concept="2HxqBE" id="5XU7UUGbcKk" role="2OqNvi">
                      <node concept="1bVj0M" id="5XU7UUGbcKl" role="23t8la">
                        <node concept="3clFbS" id="5XU7UUGbcKm" role="1bW5cS">
                          <node concept="3clFbF" id="5XU7UUGbcKn" role="3cqZAp">
                            <node concept="3clFbC" id="5XU7UUGbcKo" role="3clFbG">
                              <node concept="37vLTw" id="5HxjapvTdxI" role="3uHU7w">
                                <ref role="3cqZAo" node="5XU7UUGbcK9" resolve="firstObject" />
                              </node>
                              <node concept="37vLTw" id="5XU7UUGbcKq" role="3uHU7B">
                                <ref role="3cqZAo" node="5XU7UUGbcKr" resolve="it" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="Rh6nW" id="5XU7UUGbcKr" role="1bW2Oz">
                          <property role="TrG5h" value="it" />
                          <node concept="2jxLKc" id="5XU7UUGbcKs" role="1tU5fm" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbcKt" role="3uHU7B">
                    <node concept="37vLTw" id="5XU7UUGbcKu" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGbcJY" resolve="sameInstances" />
                    </node>
                    <node concept="2HxqBE" id="5XU7UUGbcKv" role="2OqNvi">
                      <node concept="1bVj0M" id="5XU7UUGbcKw" role="23t8la">
                        <node concept="3clFbS" id="5XU7UUGbcKx" role="1bW5cS">
                          <node concept="3clFbF" id="5XU7UUGbcKy" role="3cqZAp">
                            <node concept="2OqwBi" id="5XU7UUGbcKz" role="3clFbG">
                              <node concept="2OqwBi" id="5XU7UUGbcK$" role="2Oq$k0">
                                <node concept="37vLTw" id="5XU7UUGbcK_" role="2Oq$k0">
                                  <ref role="3cqZAo" node="5XU7UUGbcKF" resolve="it" />
                                </node>
                                <node concept="liA8E" id="5XU7UUGbcKA" role="2OqNvi">
                                  <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                </node>
                              </node>
                              <node concept="liA8E" id="5XU7UUGbcKB" role="2OqNvi">
                                <ref role="37wK5l" to="wyt6:~Object.equals(java.lang.Object):boolean" resolve="equals" />
                                <node concept="2OqwBi" id="5XU7UUGbcKC" role="37wK5m">
                                  <node concept="37vLTw" id="5XU7UUGbcKD" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5XU7UUGbcK9" resolve="firstObject" />
                                  </node>
                                  <node concept="liA8E" id="5XU7UUGbcKE" role="2OqNvi">
                                    <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="Rh6nW" id="5XU7UUGbcKF" role="1bW2Oz">
                          <property role="TrG5h" value="it" />
                          <node concept="2jxLKc" id="5XU7UUGbcKG" role="1tU5fm" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3eOSWO" id="5XU7UUGbcKH" role="3clFbw">
            <node concept="3cmrfG" id="5XU7UUGbcKI" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGbcKJ" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGbcKK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcJY" resolve="sameInstances" />
              </node>
              <node concept="34oBXx" id="5XU7UUGbcKL" role="2OqNvi" />
            </node>
          </node>
          <node concept="9aQIb" id="5XU7UUGbcKM" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGbcKN" role="9aQI4">
              <node concept="3clFbF" id="5XU7UUGbcKO" role="3cqZAp">
                <node concept="37vLTI" id="5XU7UUGbcKP" role="3clFbG">
                  <node concept="3clFbT" id="5XU7UUGbcKQ" role="37vLTx">
                    <property role="3clFbU" value="true" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTduZ" role="37vLTJ">
                    <ref role="3cqZAo" node="5XU7UUGbcK3" resolve="result" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcKS" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZRd" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcK3" resolve="result" />
          </node>
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcKU" role="1B3o_S" />
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcKV" role="jymVt">
      <property role="TrG5h" value="createTwoInstances" />
      <node concept="_YKpA" id="5XU7UUGbcKW" role="3clF45">
        <node concept="3uibUv" id="5XU7UUGbcKX" role="_ZDj9">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5XU7UUGbcKY" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcKZ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcL0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcL1" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="_YKpA" id="5XU7UUGbcL2" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbcL3" role="_ZDj9">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbcL4" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGbcL5" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGbcL6" role="HW$YZ">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcL7" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcL8" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZgP" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcL1" resolve="result" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbcLa" role="2OqNvi">
              <node concept="2OqwBi" id="5XU7UUGbcLb" role="25WWJ7">
                <node concept="37vLTw" id="5XU7UUGbcLc" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcLd" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="37vLTw" id="5XU7UUGbcLe" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGbcLr" resolve="clazz" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbcLf" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbcLg" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbcLh" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbcL1" resolve="result" />
            </node>
            <node concept="TSZUe" id="5XU7UUGbcLi" role="2OqNvi">
              <node concept="2OqwBi" id="5XU7UUGbcLj" role="25WWJ7">
                <node concept="37vLTw" id="5XU7UUGbcLk" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcLp" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcLl" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="37vLTw" id="5XU7UUGbcLm" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGbcLr" resolve="clazz" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcLn" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbcLo" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcL1" resolve="result" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcLp" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5XU7UUGbcLq" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcLr" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5XU7UUGbcLs" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5HSnKgHUoXF" role="jymVt">
      <property role="TrG5h" value="createTwoInstances" />
      <node concept="_YKpA" id="5HSnKgHUoXG" role="3clF45">
        <node concept="3uibUv" id="5HSnKgHUoXH" role="_ZDj9">
          <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
        </node>
      </node>
      <node concept="3Tm1VV" id="5HSnKgHUoXI" role="1B3o_S" />
      <node concept="3clFbS" id="5HSnKgHUoXJ" role="3clF47">
        <node concept="3cpWs8" id="5HSnKgHUoXK" role="3cqZAp">
          <node concept="3cpWsn" id="5HSnKgHUoXL" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="_YKpA" id="5HSnKgHUoXM" role="1tU5fm">
              <node concept="3uibUv" id="5HSnKgHUoXN" role="_ZDj9">
                <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
              </node>
            </node>
            <node concept="2ShNRf" id="5HSnKgHUoXO" role="33vP2m">
              <node concept="Tc6Ow" id="5HSnKgHUoXP" role="2ShVmc">
                <node concept="3uibUv" id="5HSnKgHUoXQ" role="HW$YZ">
                  <ref role="3uigEE" to="wyt6:~Object" resolve="Object" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5HSnKgHUoXR" role="3cqZAp">
          <node concept="2OqwBi" id="5HSnKgHUoXS" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdzF" role="2Oq$k0">
              <ref role="3cqZAo" node="5HSnKgHUoXL" resolve="result" />
            </node>
            <node concept="TSZUe" id="5HSnKgHUoXU" role="2OqNvi">
              <node concept="2OqwBi" id="5HSnKgHUoXV" role="25WWJ7">
                <node concept="37vLTw" id="5HSnKgHUoXW" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUoY9" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUoYp" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="5HSnKgHUpdQ" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="37vLTw" id="5HSnKgHUoYq" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUoYb" resolve="clazz" />
                    </node>
                    <node concept="37vLTw" id="5HSnKgHUpdw" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUoYf" resolve="annotation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5HSnKgHUoXZ" role="3cqZAp">
          <node concept="2OqwBi" id="5HSnKgHUoY0" role="3clFbG">
            <node concept="37vLTw" id="5HSnKgHUoY1" role="2Oq$k0">
              <ref role="3cqZAo" node="5HSnKgHUoXL" resolve="result" />
            </node>
            <node concept="TSZUe" id="5HSnKgHUoY2" role="2OqNvi">
              <node concept="2OqwBi" id="5HSnKgHUoY3" role="25WWJ7">
                <node concept="37vLTw" id="5HSnKgHUoY4" role="2Oq$k0">
                  <ref role="3cqZAo" node="5HSnKgHUoY9" resolve="injector" />
                </node>
                <node concept="liA8E" id="5HSnKgHUoY5" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(com.google.inject.Key):java.lang.Object" resolve="getInstance" />
                  <node concept="2YIFZM" id="5HSnKgHUpe8" role="37wK5m">
                    <ref role="1Pybhc" to="ez3t:~Key" resolve="Key" />
                    <ref role="37wK5l" to="ez3t:~Key.get(java.lang.Class,java.lang.Class):com.google.inject.Key" resolve="get" />
                    <node concept="37vLTw" id="5HSnKgHUpe9" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUoYb" resolve="clazz" />
                    </node>
                    <node concept="37vLTw" id="5HSnKgHUpea" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUoYf" resolve="annotation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5HSnKgHUoY7" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTe0i" role="3cqZAk">
            <ref role="3cqZAo" node="5HSnKgHUoXL" resolve="result" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUoY9" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5HSnKgHUoYa" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUoYb" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5HSnKgHUoYc" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUoYf" role="3clF46">
        <property role="TrG5h" value="annotation" />
        <node concept="3uibUv" id="5HSnKgHUoYh" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcLt" role="jymVt">
      <property role="TrG5h" value="isSingleton" />
      <node concept="10P_77" id="5XU7UUGbcLu" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcLv" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcLw" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcLx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcLy" role="3cpWs9">
            <property role="TrG5h" value="isSingleton" />
            <node concept="10P_77" id="5XU7UUGbcLz" role="1tU5fm" />
            <node concept="3clFbT" id="5XU7UUGbcL$" role="33vP2m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcL_" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcLA" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcLB" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcLC" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTe2F" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcLy" resolve="isSingleton" />
                </node>
                <node concept="3$87h9" id="5XU7UUGbcLE" role="37vLTx">
                  <ref role="37wK5l" node="5XU7UUGbcJW" resolve="areSameObject" />
                  <node concept="3$87h9" id="5XU7UUGbcLF" role="37wK5m">
                    <ref role="37wK5l" node="5XU7UUGbcKV" resolve="createTwoInstances" />
                    <node concept="37vLTw" id="5XU7UUGbcLG" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGbcLS" resolve="injector" />
                    </node>
                    <node concept="37vLTw" id="5XU7UUGbcLH" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGbcLU" resolve="clazz" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcLI" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcLJ" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcLK" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~ConfigurationException" resolve="ConfigurationException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcLL" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcLM" role="3cqZAp">
                <node concept="37vLTI" id="5XU7UUGbcLN" role="3clFbG">
                  <node concept="3clFbT" id="5XU7UUGbcLO" role="37vLTx">
                    <property role="3clFbU" value="false" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvQZ$h" role="37vLTJ">
                    <ref role="3cqZAo" node="5XU7UUGbcLy" resolve="isSingleton" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcLQ" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZwc" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcLy" resolve="isSingleton" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcLS" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5XU7UUGbcLT" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcLU" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5XU7UUGbcLV" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5HSnKgHUnzA" role="jymVt">
      <property role="TrG5h" value="isSingleton" />
      <node concept="10P_77" id="5HSnKgHUnzB" role="3clF45" />
      <node concept="3Tm1VV" id="5HSnKgHUnzC" role="1B3o_S" />
      <node concept="3clFbS" id="5HSnKgHUnzD" role="3clF47">
        <node concept="3cpWs8" id="5HSnKgHUnzE" role="3cqZAp">
          <node concept="3cpWsn" id="5HSnKgHUnzF" role="3cpWs9">
            <property role="TrG5h" value="isSingleton" />
            <node concept="10P_77" id="5HSnKgHUnzG" role="1tU5fm" />
            <node concept="3clFbT" id="5HSnKgHUnzH" role="33vP2m">
              <property role="3clFbU" value="false" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5HSnKgHUnzI" role="3cqZAp">
          <node concept="3clFbS" id="5HSnKgHUnzJ" role="SfCbr">
            <node concept="3clFbF" id="5HSnKgHUnzK" role="3cqZAp">
              <node concept="37vLTI" id="5HSnKgHUnzL" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZ72" role="37vLTJ">
                  <ref role="3cqZAo" node="5HSnKgHUnzF" resolve="isSingleton" />
                </node>
                <node concept="3$87h9" id="5HSnKgHUnzN" role="37vLTx">
                  <ref role="37wK5l" node="5XU7UUGbcJW" resolve="areSameObject" />
                  <node concept="3$87h9" id="5HSnKgHUnzO" role="37wK5m">
                    <ref role="37wK5l" node="5HSnKgHUoXF" resolve="createTwoInstances" />
                    <node concept="37vLTw" id="5HSnKgHUnzP" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUn$1" resolve="injector" />
                    </node>
                    <node concept="37vLTw" id="5HSnKgHUnzQ" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUn$3" resolve="clazz" />
                    </node>
                    <node concept="37vLTw" id="5HSnKgHUpdn" role="37wK5m">
                      <ref role="3cqZAo" node="5HSnKgHUn$q" resolve="annotation" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5HSnKgHUnzR" role="TEbGg">
            <node concept="3cpWsn" id="5HSnKgHUnzS" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5HSnKgHUnzT" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~ConfigurationException" resolve="ConfigurationException" />
              </node>
            </node>
            <node concept="3clFbS" id="5HSnKgHUnzU" role="TDEfX">
              <node concept="3clFbF" id="5HSnKgHUnzV" role="3cqZAp">
                <node concept="37vLTI" id="5HSnKgHUnzW" role="3clFbG">
                  <node concept="3clFbT" id="5HSnKgHUnzX" role="37vLTx">
                    <property role="3clFbU" value="false" />
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdUv" role="37vLTJ">
                    <ref role="3cqZAo" node="5HSnKgHUnzF" resolve="isSingleton" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5HSnKgHUnzZ" role="3cqZAp">
          <node concept="37vLTw" id="5HSnKgHUn$0" role="3cqZAk">
            <ref role="3cqZAo" node="5HSnKgHUnzF" resolve="isSingleton" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUn$1" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5HSnKgHUn$2" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUn$3" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5HSnKgHUn$4" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
      <node concept="37vLTG" id="5HSnKgHUn$q" role="3clF46">
        <property role="TrG5h" value="annotation" />
        <node concept="3uibUv" id="5HSnKgHUn$s" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcLW" role="jymVt">
      <property role="TrG5h" value="instancesExist" />
      <node concept="10P_77" id="5XU7UUGbcLX" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcLY" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcLZ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcM0" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcM1" role="3cpWs9">
            <property role="TrG5h" value="instanceExists" />
            <node concept="10P_77" id="5XU7UUGbcM2" role="1tU5fm" />
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbcM3" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcM4" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGbcM5" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGbcM6" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGbcM7" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGbcMo" resolve="injector" />
                </node>
                <node concept="liA8E" id="5XU7UUGbcM8" role="2OqNvi">
                  <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                  <node concept="37vLTw" id="5XU7UUGbcM9" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGbcMq" resolve="clazz" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGbcMa" role="3cqZAp">
              <node concept="37vLTI" id="5XU7UUGbcMb" role="3clFbG">
                <node concept="3clFbT" id="5XU7UUGbcMc" role="37vLTx">
                  <property role="3clFbU" value="true" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZvx" role="37vLTJ">
                  <ref role="3cqZAo" node="5XU7UUGbcM1" resolve="instanceExists" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGbcMe" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGbcMf" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGbcMg" role="1tU5fm">
                <ref role="3uigEE" to="ez3t:~ConfigurationException" resolve="ConfigurationException" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGbcMh" role="TDEfX">
              <node concept="3clFbF" id="5XU7UUGbcMi" role="3cqZAp">
                <node concept="37vLTI" id="5XU7UUGbcMj" role="3clFbG">
                  <node concept="3clFbT" id="5XU7UUGbcMk" role="37vLTx">
                    <property role="3clFbU" value="false" />
                  </node>
                  <node concept="37vLTw" id="5XU7UUGbcMl" role="37vLTJ">
                    <ref role="3cqZAo" node="5XU7UUGbcM1" resolve="instanceExists" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcMm" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGbcMn" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGbcM1" resolve="instanceExists" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcMo" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5XU7UUGbcMp" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcMq" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5XU7UUGbcMr" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcMs" role="jymVt">
      <property role="TrG5h" value="areNumberOfInstances" />
      <node concept="37vLTG" id="5XU7UUGbcMt" role="3clF46">
        <property role="TrG5h" value="injector" />
        <node concept="3uibUv" id="5XU7UUGbcMu" role="1tU5fm">
          <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcMv" role="3clF46">
        <property role="TrG5h" value="clazz" />
        <node concept="3uibUv" id="5XU7UUGbcMw" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Class" resolve="Class" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcMx" role="3clF46">
        <property role="TrG5h" value="amountOfInstances" />
        <node concept="10Oyi0" id="5XU7UUGbcMy" role="1tU5fm" />
      </node>
      <node concept="10P_77" id="5XU7UUGbcMz" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcM$" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcM_" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbcMA" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbcMB" role="3cpWs9">
            <property role="TrG5h" value="countedInstances" />
            <node concept="10Oyi0" id="5XU7UUGbcMC" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGbcMD" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGbcME" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGbcMF" role="2Gsz3X">
            <property role="TrG5h" value="binding" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGbcMG" role="2GsD0m">
            <node concept="2OqwBi" id="5XU7UUGbcMH" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGbcMI" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbcMt" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGbcMJ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getBindings():java.util.Map" resolve="getBindings" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbcMK" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Map.values():java.util.Collection" resolve="values" />
            </node>
          </node>
          <node concept="3clFbS" id="5XU7UUGbcML" role="2LFqv$">
            <node concept="3clFbJ" id="5XU7UUGbcMM" role="3cqZAp">
              <node concept="3clFbS" id="5XU7UUGbcMN" role="3clFbx">
                <node concept="3clFbF" id="5XU7UUGbcMO" role="3cqZAp">
                  <node concept="3uNrnE" id="5XU7UUGbcMP" role="3clFbG">
                    <node concept="37vLTw" id="5HxjapvTdGG" role="2$L3a6">
                      <ref role="3cqZAo" node="5XU7UUGbcMB" resolve="countedInstances" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="1Wc70l" id="5XU7UUGbcMR" role="3clFbw">
                <node concept="3clFbC" id="5XU7UUGbcMS" role="3uHU7w">
                  <node concept="37vLTw" id="5XU7UUGbcMT" role="3uHU7w">
                    <ref role="3cqZAo" node="5XU7UUGbcMv" resolve="clazz" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGbcMU" role="3uHU7B">
                    <node concept="2OqwBi" id="5XU7UUGbcMV" role="2Oq$k0">
                      <node concept="2OqwBi" id="5XU7UUGbcMW" role="2Oq$k0">
                        <node concept="1eOMI4" id="5XU7UUGbcMX" role="2Oq$k0">
                          <node concept="10QFUN" id="5XU7UUGbcMY" role="1eOMHV">
                            <node concept="3uibUv" id="5XU7UUGbcMZ" role="10QFUM">
                              <ref role="3uigEE" to="fyq:~BindingImpl" resolve="BindingImpl" />
                            </node>
                            <node concept="2GrUjf" id="5XU7UUGbcN0" role="10QFUP">
                              <ref role="2Gs0qQ" node="5XU7UUGbcMF" resolve="binding" />
                            </node>
                          </node>
                        </node>
                        <node concept="liA8E" id="5XU7UUGbcN1" role="2OqNvi">
                          <ref role="37wK5l" to="fyq:~BindingImpl.getKey():com.google.inject.Key" resolve="getKey" />
                        </node>
                      </node>
                      <node concept="liA8E" id="5XU7UUGbcN2" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Key.getTypeLiteral():com.google.inject.TypeLiteral" resolve="getTypeLiteral" />
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGbcN3" role="2OqNvi">
                      <ref role="37wK5l" to="ez3t:~TypeLiteral.getRawType():java.lang.Class" resolve="getRawType" />
                    </node>
                  </node>
                </node>
                <node concept="2ZW3vV" id="5XU7UUGbcN4" role="3uHU7B">
                  <node concept="3uibUv" id="5XU7UUGbcN5" role="2ZW6by">
                    <ref role="3uigEE" to="fyq:~BindingImpl" resolve="BindingImpl" />
                  </node>
                  <node concept="2GrUjf" id="5XU7UUGbcN6" role="2ZW6bz">
                    <ref role="2Gs0qQ" node="5XU7UUGbcMF" resolve="binding" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGbcN7" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGbcN8" role="3cqZAk">
            <node concept="37vLTw" id="5XU7UUGbcN9" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGbcMx" resolve="amountOfInstances" />
            </node>
            <node concept="37vLTw" id="5XU7UUGbcNa" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbcMB" resolve="countedInstances" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2YIFZL" id="5XU7UUGbcNb" role="jymVt">
      <property role="TrG5h" value="numberOfInstancesEqualsExpected" />
      <node concept="10P_77" id="5XU7UUGbcNc" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbcNd" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbcNe" role="3clF47">
        <node concept="3clFbJ" id="5XU7UUGbcNf" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbcNg" role="3clFbx">
            <node concept="3SKdUt" id="5XU7UUGbcNh" role="3cqZAp">
              <node concept="3SKdUq" id="5XU7UUGbcNi" role="3SKWNk">
                <property role="3SKdUp" value="we must subtract the multibinder" />
              </node>
            </node>
            <node concept="3cpWs6" id="5XU7UUGbcNj" role="3cqZAp">
              <node concept="3clFbC" id="5XU7UUGbcNk" role="3cqZAk">
                <node concept="37vLTw" id="5XU7UUGbcNl" role="3uHU7w">
                  <ref role="3cqZAo" node="5XU7UUGbcN$" resolve="expected" />
                </node>
                <node concept="3cpWsd" id="5XU7UUGbcNm" role="3uHU7B">
                  <node concept="37vLTw" id="5XU7UUGbcNn" role="3uHU7B">
                    <ref role="3cqZAo" node="5XU7UUGbcNy" resolve="counted" />
                  </node>
                  <node concept="3cmrfG" id="5XU7UUGbcNo" role="3uHU7w">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3eOSWO" id="5XU7UUGbcNp" role="3clFbw">
            <node concept="3cmrfG" id="5XU7UUGbcNq" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="37vLTw" id="5XU7UUGbcNr" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGbcNy" resolve="counted" />
            </node>
          </node>
          <node concept="9aQIb" id="5XU7UUGbcNs" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGbcNt" role="9aQI4">
              <node concept="3cpWs6" id="5XU7UUGbcNu" role="3cqZAp">
                <node concept="3clFbC" id="5XU7UUGbcNv" role="3cqZAk">
                  <node concept="37vLTw" id="5XU7UUGbcNw" role="3uHU7w">
                    <ref role="3cqZAo" node="5XU7UUGbcN$" resolve="expected" />
                  </node>
                  <node concept="37vLTw" id="5XU7UUGbcNx" role="3uHU7B">
                    <ref role="3cqZAo" node="5XU7UUGbcNy" resolve="counted" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGbcNy" role="3clF46">
        <property role="TrG5h" value="counted" />
        <node concept="10Oyi0" id="5XU7UUGbcNz" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5XU7UUGbcN$" role="3clF46">
        <property role="TrG5h" value="expected" />
        <node concept="10Oyi0" id="5XU7UUGbcN_" role="1tU5fm" />
      </node>
    </node>
  </node>
  <node concept="312cEu" id="5XU7UUGbaAb">
    <property role="TrG5h" value="MockingMapperModule" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="2RhdJD" id="5XU7UUGbaAc" role="2Rv3y6">
      <property role="2RkwnN" value="callStackConstructor" />
      <node concept="3Tm1VV" id="5XU7UUGbaAd" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAe" role="2RkE6I">
        <ref role="3uigEE" to="x30c:6Zad41TrttH" resolve="MCallStackConstructorImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAf" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAg" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAh" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAi" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAj" role="2Rv3y6">
      <property role="2RkwnN" value="frameMapper" />
      <node concept="3Tm1VV" id="5XU7UUGbaAk" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAl" role="2RkE6I">
        <ref role="3uigEE" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAm" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAn" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAo" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAp" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAq" role="2Rv3y6">
      <property role="2RkwnN" value="unusedVariableWatchablesCreator" />
      <node concept="3Tm1VV" id="5XU7UUGbaAr" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAs" role="2RkE6I">
        <ref role="3uigEE" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAt" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAu" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAv" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAw" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAx" role="2Rv3y6">
      <property role="2RkwnN" value="locationAndBreakpointMapper" />
      <node concept="3Tm1VV" id="5XU7UUGbaAy" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAz" role="2RkE6I">
        <ref role="3uigEE" to="x30c:6HGoZgQ1kss" resolve="MLocationAndBreakpointMapperImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaA$" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaA_" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAA" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAB" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAC" role="2Rv3y6">
      <property role="2RkwnN" value="breakpointMappingManager" />
      <node concept="3Tm1VV" id="5XU7UUGbaAD" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAE" role="2RkE6I">
        <ref role="3uigEE" to="x30c:3nxOvgY3snw" resolve="MBreakpointMappingManagerImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAF" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAG" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAH" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAI" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAJ" role="2Rv3y6">
      <property role="2RkwnN" value="debugApiWrapper" />
      <node concept="3Tm1VV" id="5XU7UUGbaAK" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAL" role="2RkE6I">
        <ref role="3uigEE" to="x30c:5QfD$m0JVst" resolve="TracingWrapperImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAM" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAN" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAO" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAP" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAQ" role="2Rv3y6">
      <property role="2RkwnN" value="breakpointManager" />
      <node concept="3Tm1VV" id="5XU7UUGbaAR" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAS" role="2RkE6I">
        <ref role="3uigEE" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaAT" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaAU" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaAV" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaAW" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaAX" role="2Rv3y6">
      <property role="2RkwnN" value="programStateManager" />
      <node concept="3Tm1VV" id="5XU7UUGbaAY" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaAZ" role="2RkE6I">
        <ref role="3uigEE" to="x30c:2fjdrD4Ga_h" resolve="MProgramStateManagerImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaB0" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaB1" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaB2" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaB3" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaB4" role="2Rv3y6">
      <property role="2RkwnN" value="session" />
      <node concept="3Tm1VV" id="5XU7UUGbaB5" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaB6" role="2RkE6I">
        <ref role="3uigEE" to="x30c:2fjdrD4GajB" resolve="MSessionImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaB7" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaB8" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaB9" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaBa" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaBb" role="2Rv3y6">
      <property role="2RkwnN" value="watchablesCreator" />
      <node concept="3Tm1VV" id="5XU7UUGbaBc" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaBd" role="2RkE6I">
        <ref role="3uigEE" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaBe" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaBf" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaBg" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaBh" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaBi" role="2Rv3y6">
      <property role="2RkwnN" value="stepper" />
      <node concept="3Tm1VV" id="5XU7UUGbaBj" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaBk" role="2RkE6I">
        <ref role="3uigEE" to="x30c:2fjdrD4GanZ" resolve="MStepperImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaBl" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaBm" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaBn" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaBo" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaBp" role="2Rv3y6">
      <property role="2RkwnN" value="eventsManager" />
      <node concept="3Tm1VV" id="5XU7UUGbaBq" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaBr" role="2RkE6I">
        <ref role="3uigEE" to="x30c:5ivE0rf6Foy" resolve="MEventManagerImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaBs" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaBt" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaBu" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaBv" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="5XU7UUGbaBw" role="2Rv3y6">
      <property role="2RkwnN" value="wrapperEventsManager" />
      <node concept="3Tm1VV" id="5XU7UUGbaBx" role="1B3o_S" />
      <node concept="3uibUv" id="5XU7UUGbaBy" role="2RkE6I">
        <ref role="3uigEE" to="x30c:1u0UIMzptJE" resolve="MWrapperEventListenerImpl" />
      </node>
      <node concept="2RoN1w" id="5XU7UUGbaBz" role="2RnVtd">
        <node concept="3wEZqW" id="5XU7UUGbaB$" role="3wFrgM" />
        <node concept="3xqBd$" id="5XU7UUGbaB_" role="3xrYvX">
          <node concept="3Tm6S6" id="5XU7UUGbaBA" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="2RhdJD" id="6ZadL_R4FXP" role="2Rv3y6">
      <property role="2RkwnN" value="executor" />
      <node concept="3Tm1VV" id="6ZadL_R4FXQ" role="1B3o_S" />
      <node concept="2RoN1w" id="6ZadL_R4FXS" role="2RnVtd">
        <node concept="3wEZqW" id="6ZadL_R4FXT" role="3wFrgM" />
        <node concept="3xqBd$" id="6ZadL_R4FXU" role="3xrYvX">
          <node concept="3Tm6S6" id="6ZadL_R4FXV" role="3xqFEP" />
        </node>
      </node>
      <node concept="3uibUv" id="6L3DaT6YrSg" role="2RkE6I">
        <ref role="3uigEE" to="5zyv:~ExecutorService" resolve="ExecutorService" />
      </node>
    </node>
    <node concept="2RhdJD" id="7W4QWPKuzOA" role="2Rv3y6">
      <property role="2RkwnN" value="timeout" />
      <node concept="3Tm1VV" id="7W4QWPKuzOB" role="1B3o_S" />
      <node concept="10Oyi0" id="7W4QWPKuzPO" role="2RkE6I" />
      <node concept="2RoN1w" id="7W4QWPKuzOD" role="2RnVtd">
        <node concept="3wEZqW" id="7W4QWPKuzOE" role="3wFrgM" />
        <node concept="3xqBd$" id="7W4QWPKuzOF" role="3xrYvX">
          <node concept="3Tm6S6" id="7W4QWPKuzOG" role="3xqFEP" />
        </node>
      </node>
    </node>
    <node concept="3Tm1VV" id="5XU7UUGbaBB" role="1B3o_S" />
    <node concept="3uibUv" id="5XU7UUGbaBG" role="1zkMxy">
      <ref role="3uigEE" to="ez3t:~AbstractModule" resolve="AbstractModule" />
    </node>
    <node concept="3clFbW" id="5XU7UUGbaBC" role="jymVt">
      <node concept="3cqZAl" id="5XU7UUGbaBD" role="3clF45" />
      <node concept="3Tm1VV" id="5XU7UUGbaBE" role="1B3o_S" />
      <node concept="3clFbS" id="5XU7UUGbaBF" role="3clF47" />
    </node>
    <node concept="3clFb_" id="5XU7UUGbaBH" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="configure" />
      <property role="DiZV1" value="false" />
      <property role="IEkAT" value="false" />
      <node concept="3Tmbuc" id="5XU7UUGbaBI" role="1B3o_S" />
      <node concept="3cqZAl" id="5XU7UUGbaBJ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaBK" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGbaBL" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaBM" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaBN" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaBO" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6Zad41TrttH" resolve="MCallStackConstructorImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaBP" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAc" resolve="callStackConstructor" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaBQ" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaBR" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaBS" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaBT" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6Zad41Tri2X" resolve="MFrameMapperImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaBU" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAj" resolve="frameMapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaBV" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaBW" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaBX" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaBY" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsl" resolve="MUnusedVariablesWatchablesCreatorImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaBZ" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAq" resolve="unusedVariableWatchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaC0" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaC1" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaC2" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaC3" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1kss" resolve="MLocationAndBreakpointMapperImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaC4" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAx" resolve="locationAndBreakpointMapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaC5" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaC6" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaC7" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaC8" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3nxOvgY3snw" resolve="MBreakpointMappingManagerImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaC9" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAC" resolve="breakpointMappingManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCa" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCb" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCc" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCd" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5QfD$m0JVst" resolve="TracingWrapperImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCe" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAJ" resolve="debugApiWrapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCf" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCg" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCh" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCi" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GaPD" resolve="MBreakpointManagerImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCj" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAQ" resolve="breakpointManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCk" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCl" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCm" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCn" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4Ga_h" resolve="MProgramStateManagerImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCo" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaAX" resolve="programStateManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCp" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCq" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCr" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCs" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GajB" resolve="MSessionImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCt" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaB4" resolve="session" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCu" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCv" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCw" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCx" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3SnnFeu9tHv" resolve="MWatchablesCreatorImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCy" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaBb" resolve="watchablesCreator" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCz" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaC$" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaC_" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCA" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GanZ" resolve="MStepperImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCB" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaBi" resolve="stepper" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCC" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCD" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCE" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCF" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5ivE0rf6Foy" resolve="MEventManagerImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCG" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaBp" resolve="eventsManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6ZadL_R4FYx" role="3cqZAp">
          <node concept="37vLTI" id="6ZadL_R4FYJ" role="3clFbG">
            <node concept="2YIFZM" id="6ZadL_R4FYT" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="6L3DaT6YrS$" role="37wK5m">
                <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
              </node>
            </node>
            <node concept="338YkY" id="6ZadL_R4FYy" role="37vLTJ">
              <ref role="338YkT" node="6ZadL_R4FXP" resolve="executor" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCH" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbaCI" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCJ" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGbaCK" role="37wK5m">
                <ref role="3VsUkX" to="x30c:1u0UIMzptJE" resolve="MWrapperEventListenerImpl" />
              </node>
            </node>
            <node concept="338YkY" id="5XU7UUGbaCL" role="37vLTJ">
              <ref role="338YkT" node="5XU7UUGbaBw" resolve="wrapperEventsManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCM" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaCN" role="3clFbG">
            <node concept="338YkY" id="5XU7UUGbaCO" role="2Oq$k0">
              <ref role="338YkT" node="5XU7UUGbaBp" resolve="eventsManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaCP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5ivE0rf6FOn" resolve="register" />
              <node concept="2YIFZM" id="5XU7UUGbaCQ" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="5XU7UUGbaCR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3mhW1SHpSqT" resolve="IMListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCS" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaCT" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbaCU" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaCV" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaCW" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaCX" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="338YkY" id="5XU7UUGbaCY" role="37wK5m">
              <ref role="338YkT" node="5XU7UUGbaBp" resolve="eventsManager" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaCZ" role="3cqZAp" />
        <node concept="3SKdUt" id="5XU7UUGbaD0" role="3cqZAp">
          <node concept="3SKdUq" id="5XU7UUGbaD1" role="3SKWNk">
            <property role="3SKdUp" value="internal" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaD2" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaD3" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaD4" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaD5" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2RztF93bQ_T" resolve="IMCallStackConstructor" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaD6" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaD7" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAc" resolve="callStackConstructor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaD8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaD9" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDa" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDb" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6Zad41Triay" resolve="IMFrameMapper" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDc" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDd" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAj" resolve="frameMapper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDe" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDf" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDg" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDh" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3gwY0Fa5Tsb" resolve="IMUnusedVariablesWatchablesCreator" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDi" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDj" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAq" resolve="unusedVariableWatchablesCreator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDl" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDm" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDn" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GaCx" resolve="IMBreakpointMapper" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDo" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDp" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAx" resolve="locationAndBreakpointMapper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDq" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDr" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDs" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDt" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5QfD$m0JStd" resolve="IMLocationMapper" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDu" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDv" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAx" resolve="locationAndBreakpointMapper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDw" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDx" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDy" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDz" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GaZn" resolve="IMBreakpointMappingManager" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaD$" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaD_" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAC" resolve="breakpointMappingManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDA" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDB" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaDC" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaDD" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDE" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDF" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAJ" resolve="debugApiWrapper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaDG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaDH" role="3cpWs9">
            <property role="TrG5h" value="multibinder" />
            <node concept="3uibUv" id="5XU7UUGbaDI" role="1tU5fm">
              <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
              <node concept="3uibUv" id="5XU7UUGbaDJ" role="11_B2D">
                <ref role="3uigEE" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaDK" role="33vP2m">
              <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
              <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
              <node concept="3P9mCS" id="5XU7UUGbaDL" role="37wK5m">
                <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
              </node>
              <node concept="3VsKOn" id="5XU7UUGbaDM" role="37wK5m">
                <ref role="3VsUkX" to="x30c:1u0UIMzptJK" resolve="IMWrapperEventListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDN" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDO" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaDP" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZw3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaDH" resolve="multibinder" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaDR" role="2OqNvi">
                <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDS" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaDT" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAQ" resolve="breakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaDU" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaDV" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaDW" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGbaDX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaDH" resolve="multibinder" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaDY" role="2OqNvi">
                <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaDZ" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaE0" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAX" resolve="programStateManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaE1" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaE2" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGbaE3" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZyh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGbaDH" resolve="multibinder" />
              </node>
              <node concept="liA8E" id="5XU7UUGbaE5" role="2OqNvi">
                <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaE6" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaE7" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaB4" resolve="session" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaE8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaE9" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEa" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEb" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6Zad41TrySt" resolve="IMWatchablesCreator" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEc" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEd" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaBb" resolve="watchablesCreator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaEe" role="3cqZAp" />
        <node concept="3SKdUt" id="5XU7UUGbaEf" role="3cqZAp">
          <node concept="3SKdUq" id="5XU7UUGbaEg" role="3SKWNk">
            <property role="3SKdUp" value="provided" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEh" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEi" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEj" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEk" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GaA2" resolve="IMPermanentBreakpointCreator" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEl" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEm" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAQ" resolve="breakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEn" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEo" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEp" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEq" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5LmHPgOIL_A" resolve="IMTemporalBreakpointCreator" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEr" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEs" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAQ" resolve="breakpointManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="29so9VbMK9w" role="3cqZAp">
          <node concept="2OqwBi" id="29so9VbMK9x" role="3clFbG">
            <node concept="2OqwBi" id="29so9VbMK9y" role="2Oq$k0">
              <node concept="3P9mCS" id="29so9VbMK9z" role="2Oq$k0">
                <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                <node concept="3VsKOn" id="29so9VbMK9$" role="37wK5m">
                  <ref role="3VsUkX" to="wyt6:~Integer" resolve="Integer" />
                </node>
              </node>
              <node concept="liA8E" id="29so9VbMK9_" role="2OqNvi">
                <ref role="37wK5l" to="hr7j:~AnnotatedBindingBuilder.annotatedWith(java.lang.annotation.Annotation):com.google.inject.binder.LinkedBindingBuilder" resolve="annotatedWith" />
                <node concept="2YIFZM" id="29so9VbMK9A" role="37wK5m">
                  <ref role="1Pybhc" to="2334:~Names" resolve="Names" />
                  <ref role="37wK5l" to="2334:~Names.named(java.lang.String):com.google.inject.name.Named" resolve="named" />
                  <node concept="Xl_RD" id="29so9VbMK9B" role="37wK5m">
                    <property role="Xl_RC" value="timeout" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="29so9VbMK9C" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="3cmrfG" id="29so9VbMK9D" role="37wK5m">
                <property role="3cmrfH" value="200" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEt" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEu" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEv" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEw" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4GagL" resolve="IMSession" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEx" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEy" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaB4" resolve="session" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEz" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaE$" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaE_" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEA" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2FRp1z37KSh" resolve="IMStepper" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEB" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEC" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaBi" resolve="stepper" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaED" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEE" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEF" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEG" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5Y9SYQfc1O1" resolve="IMProgramStateManager" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEH" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEI" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaAX" resolve="programStateManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEK" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaEL" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaEM" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5VDJ7ZM5CI9" resolve="IMEventManager" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaEN" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEO" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaBp" resolve="eventsManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEP" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEQ" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaER" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaES" role="37wK5m">
                <ref role="3VsUkX" to="x30c:5ivE0rf6FO2" resolve="IMEventManagerRegistry" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaET" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaEU" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaBp" resolve="eventsManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="6ZadL_R4FZ5" role="3cqZAp">
          <node concept="2OqwBi" id="6ZadL_R4FZt" role="3clFbG">
            <node concept="3P9mCS" id="6ZadL_R4FZ6" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="7W4QWPK$VOd" role="37wK5m">
                <ref role="3VsUkX" to="5zyv:~Executor" resolve="Executor" />
              </node>
            </node>
            <node concept="liA8E" id="6ZadL_R4FZ_" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="6ZadL_R4FZA" role="37wK5m">
                <ref role="338YkT" node="6ZadL_R4FXP" resolve="executor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbaEV" role="3cqZAp" />
        <node concept="3SKdUt" id="5XU7UUGbaEW" role="3cqZAp">
          <node concept="3SKdUq" id="5XU7UUGbaEX" role="3SKWNk">
            <property role="3SKdUp" value="used" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbaEY" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbaEZ" role="3clFbG">
            <node concept="3P9mCS" id="5XU7UUGbaF0" role="2Oq$k0">
              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
              <node concept="3VsKOn" id="5XU7UUGbaF1" role="37wK5m">
                <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGbaF2" role="2OqNvi">
              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
              <node concept="338YkY" id="5XU7UUGbaF3" role="37wK5m">
                <ref role="338YkT" node="5XU7UUGbaBw" resolve="wrapperEventsManager" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbaF4">
    <property role="TrG5h" value="WrapperModule" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGbaF5" role="1SL9yI">
      <property role="TrG5h" value="createModule" />
      <node concept="3cqZAl" id="5XU7UUGbaF6" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaF7" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaF8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaF9" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaFa" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaFb" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGbaFc" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbaFd" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:5sA47pBsYyv" resolve="CDebuggerWrapperModule" />
                </node>
              </node>
              <node concept="2ShNRf" id="5XU7UUGbaFe" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGbaFf" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGbaFg" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGbaFh" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGbaFi" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGbaFj" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGbaFk" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGbaFl" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGbaFm" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGbaFn" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGbaFo" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGbaFp" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGbaFq" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGbaFr" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGbaFs" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="6ZadL_R4_dJ" role="3cqZAp">
                          <node concept="2OqwBi" id="6ZadL_R4_e6" role="3clFbG">
                            <node concept="3P9mCS" id="6ZadL_R4_dK" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7W4QWPK$P_l" role="37wK5m">
                                <ref role="3VsUkX" to="5zyv:~Executor" resolve="Executor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6ZadL_R4_ee" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="6ZadL_R4_eg" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="6L3DaT6Y2U2" role="37wK5m">
                                  <ref role="3VsUkX" to="5zyv:~ExecutorService" resolve="ExecutorService" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaF$" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaF_" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdKL" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFB" role="37wK5m">
              <ref role="3VsUkX" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFC" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFD" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdH1" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFF" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFG" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFH" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbaFI" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFJ" role="37wK5m">
              <ref role="3VsUkX" to="x30c:1jRCtZT4jc3" resolve="IWVariablesTransformer" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFK" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFL" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTepb" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFN" role="37wK5m">
              <ref role="3VsUkX" to="x30c:1jRCtZT51mR" resolve="IWChildrenResolver" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFO" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFP" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvQZHO" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFR" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFS" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFT" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdsG" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFV" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaFW" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaFX" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTe52" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaFZ" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaG0" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaG1" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5XU7UUGbaG2" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaG3" role="37wK5m">
              <ref role="3VsUkX" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaG4" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaG5" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvQZD3" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaG7" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaG8" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaG9" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcMs" resolve="areNumberOfInstances" />
            <node concept="37vLTw" id="5XU7UUGbaGa" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaGb" role="37wK5m">
              <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGbaGc" role="37wK5m">
              <property role="3cmrfH" value="2" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaGd" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaGe" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLt" resolve="isSingleton" />
            <node concept="37vLTw" id="5HxjapvTdQo" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaF9" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaGg" role="37wK5m">
              <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGbaGh" role="1SL9yI">
      <property role="TrG5h" value="verifyDependencies" />
      <node concept="3cqZAl" id="5XU7UUGbaGi" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbaGj" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbaGp" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaGq" role="3cpWs9">
            <property role="TrG5h" value="mapperModuleMock" />
            <node concept="3uibUv" id="5XU7UUGbaGr" role="1tU5fm">
              <ref role="3uigEE" node="5XU7UUGbaAb" resolve="MockingMapperModule" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbaGs" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbaGt" role="2ShVmc">
                <ref role="37wK5l" node="5XU7UUGbaBC" resolve="MockingMapperModule" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbaGu" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbaGv" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGbaGw" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGbaGx" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGbaGy" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGbaGz" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:5sA47pBsYyv" resolve="CDebuggerWrapperModule" />
                </node>
              </node>
              <node concept="37vLTw" id="5HxjapvQZqP" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGbaGq" resolve="mapperModuleMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaGE" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaGF" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLW" resolve="instancesExist" />
            <node concept="37vLTw" id="5HxjapvQZb8" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaGv" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaGH" role="37wK5m">
              <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGbaGI" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbaGJ" role="3vwVQn">
            <ref role="1Pybhc" node="5XU7UUGbcJQ" resolve="GuiceTestingUtil" />
            <ref role="37wK5l" node="5XU7UUGbcLW" resolve="instancesExist" />
            <node concept="37vLTw" id="5HxjapvTdyx" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbaGv" resolve="injector" />
            </node>
            <node concept="3VsKOn" id="5XU7UUGbaGL" role="37wK5m">
              <ref role="3VsUkX" to="x30c:5QfD$m0JVsz" resolve="ITracingWrapper" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8s8">
    <property role="TrG5h" value="BreakpointFactory" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGb8s9" role="1SL9yI">
      <property role="TrG5h" value="createLineBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8sa" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8sb" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8sc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8sd" role="3cpWs9">
            <property role="TrG5h" value="factory" />
            <node concept="3uibUv" id="5XU7UUGb8se" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8sf" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8sg" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkN" resolve="WBreakpointLocationFactoryImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8sh" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8si" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZCH" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8sk" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
              <node concept="Xl_RD" id="5XU7UUGb8sl" role="37wK5m">
                <property role="Xl_RC" value="Main.c" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8sm" role="37wK5m">
                <property role="3cmrfH" value="9" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="2RIdqIAJsJm" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8sp" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdFN" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8sr" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
              <node concept="Xl_RD" id="5XU7UUGb8ss" role="37wK5m">
                <property role="Xl_RC" value="Main" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8st" role="37wK5m">
                <property role="3cmrfH" value="9" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8sv" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8sw" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8sx" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8sy" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8sz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8s$" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8s_" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8sA" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8sB" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8sC" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8sD" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8sE" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8sF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8sG" role="37wK5m">
                  <property role="Xl_RC" value="Main" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8sH" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8sI" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8sJ" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8sK" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8sL" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZhT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8sN" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                <node concept="10Nm6u" id="5XU7UUGb8sO" role="37wK5m" />
                <node concept="3cmrfG" id="5XU7UUGb8sP" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8sQ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8sR" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8sS" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8sT" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTd8K" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8sd" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8sV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ll2" resolve="createLineBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8sW" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8sX" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8sY" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8sZ" role="1SL9yI">
      <property role="TrG5h" value="createFunctionBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8t0" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8t1" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8t2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8t3" role="3cpWs9">
            <property role="TrG5h" value="factory" />
            <node concept="3uibUv" id="5XU7UUGb8t4" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8t5" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8t6" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkN" resolve="WBreakpointLocationFactoryImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8t7" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8t8" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZd1" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8ta" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
              <node concept="Xl_RD" id="5XU7UUGb8tb" role="37wK5m">
                <property role="Xl_RC" value="main" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8tc" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8td" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTeiV" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8tf" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
              <node concept="Xl_RD" id="5XU7UUGb8tg" role="37wK5m">
                <property role="Xl_RC" value="main_" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8th" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8ti" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8tj" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdZa" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8tl" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8tm" role="37wK5m">
                  <property role="Xl_RC" value="%%%" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8tn" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8to" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8tp" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8tq" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8tr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8ts" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8tt" role="37wK5m">
                  <property role="Xl_RC" value="main:" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8tu" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8tv" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8tw" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8tx" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8ty" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8tz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                <node concept="10Nm6u" id="5XU7UUGb8t$" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8t_" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8tA" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8tB" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8tC" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdEP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8t3" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8tE" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkS" resolve="createFunctionBreakpointLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8tF" role="37wK5m">
                  <property role="Xl_RC" value="" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8tG" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8tH" role="1SL9yI">
      <property role="TrG5h" value="createAddressBreakpoin" />
      <node concept="3cqZAl" id="5XU7UUGb8tI" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8tJ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8tK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8tL" role="3cpWs9">
            <property role="TrG5h" value="factory" />
            <node concept="3uibUv" id="5XU7UUGb8tM" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8tN" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8tO" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lkN" resolve="WBreakpointLocationFactoryImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8tP" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8tQ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8tR" role="3cpWs9">
            <property role="TrG5h" value="address" />
            <node concept="3uibUv" id="5XU7UUGb8tS" role="1tU5fm">
              <ref role="3uigEE" to="xlxw:~BigInteger" resolve="BigInteger" />
            </node>
            <node concept="10Nm6u" id="5XU7UUGb8tT" role="33vP2m" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8tU" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8tV" role="3clFbG">
            <node concept="2ShNRf" id="5XU7UUGb8tW" role="37vLTx">
              <node concept="1pGfFk" id="5XU7UUGb8tX" role="2ShVmc">
                <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                <node concept="Xl_RD" id="5XU7UUGb8tY" role="37wK5m">
                  <property role="Xl_RC" value="1" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZ_0" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8u0" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8u1" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZdd" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8tL" resolve="factory" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8u3" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
              <node concept="37vLTw" id="5XU7UUGb8u4" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8u5" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8u6" role="3clFbG">
            <node concept="2ShNRf" id="5XU7UUGb8u7" role="37vLTx">
              <node concept="1pGfFk" id="5XU7UUGb8u8" role="2ShVmc">
                <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                <node concept="Xl_RD" id="5XU7UUGb8u9" role="37wK5m">
                  <property role="Xl_RC" value="0" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvTe1D" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8ub" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8uc" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8ud" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZvT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8tL" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8uf" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
                <node concept="37vLTw" id="5HxjapvTduF" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8uh" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8ui" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8uj" role="3clFbG">
            <node concept="2ShNRf" id="5XU7UUGb8uk" role="37vLTx">
              <node concept="1pGfFk" id="5XU7UUGb8ul" role="2ShVmc">
                <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                <node concept="Xl_RD" id="5XU7UUGb8um" role="37wK5m">
                  <property role="Xl_RC" value="-1" />
                </node>
              </node>
            </node>
            <node concept="37vLTw" id="5HxjapvQZEF" role="37vLTJ">
              <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8uo" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8up" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8uq" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8ur" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8tL" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8us" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
                <node concept="37vLTw" id="5XU7UUGb8ut" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8tR" resolve="address" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8uu" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8uv" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb8uw" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8ux" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZLr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8tL" resolve="factory" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8uz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3IzB1DMiIjK" resolve="createAddressBreakpointLocation" />
                <node concept="10Nm6u" id="5XU7UUGb8u$" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb8u_" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8uA">
    <property role="TrG5h" value="BreakpointManager" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="2XrIbr" id="5XU7UUGb8uB" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGb8uC" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb8uD" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8uE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8uF" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8uG" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8uH" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGb8uI" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb8uJ" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb8uK" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb8uL" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb8uM" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb8uN" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb8uO" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb8uP" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb8uQ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8uR" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8uS" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8uT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8uU" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb8uV" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGb8uW" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8uX" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8uY" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8uZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8v0" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8v1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb8v2" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGb8v3" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8v4" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8v5" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8v6" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8v7" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8v8" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8v9" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3iz3" resolve="WBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8va" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8vb" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8vc" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8vd" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8ve" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8vf" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3nxOvgY3iz3" resolve="WBreakpointManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb8vg" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZR1" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb8uF" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8vi" role="1qtyYc">
      <property role="TrG5h" value="targetThrowsExceptionOnRequestingMixedInstructions" />
      <node concept="37vLTG" id="5XU7UUGb8vj" role="3clF46">
        <property role="TrG5h" value="sessionAccessor" />
        <node concept="3uibUv" id="5XU7UUGb8vk" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
        </node>
      </node>
      <node concept="3cqZAl" id="5XU7UUGb8vl" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8vm" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8vn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8vo" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="2npj2sqFX1S" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8vq" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="2npj2sqFWpv" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8vs" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8vt" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8vu" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8vv" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8vw" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZbI" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8vo" resolve="target" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8vy" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDISourceManagement.getMixedInstructions(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.model.ICDIMixedInstruction[]" resolve="getMixedInstructions" />
                    <node concept="Xl_RD" id="5XU7UUGb8vz" role="37wK5m">
                      <property role="Xl_RC" value="Main.c" />
                    </node>
                    <node concept="3cmrfG" id="5XU7UUGb8v$" role="37wK5m">
                      <property role="3cmrfH" value="6" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8v_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGb8vA" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb8vB" role="2ShVmc">
                    <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8vC" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8vD" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8vE" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8vF" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8vG" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8vH" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb8vI" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8vj" resolve="sessionAccessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8vJ" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8vK" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdA$" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8vo" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8vM" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8vN" role="Sfmx6">
        <ref role="3uigEE" to="ys5c:~CDIException" resolve="CDIException" />
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8vO" role="1qtyYc">
      <property role="TrG5h" value="targetReturnsMixedInstructions" />
      <node concept="37vLTG" id="5XU7UUGb8vP" role="3clF46">
        <property role="TrG5h" value="sessionAccessor" />
        <node concept="3uibUv" id="5XU7UUGb8vQ" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
        </node>
      </node>
      <node concept="3cqZAl" id="5XU7UUGb8vR" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8vS" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8vT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8vU" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb8vV" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8vW" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8vX" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8vY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8vZ" role="3cpWs9">
            <property role="TrG5h" value="firstInstruction" />
            <node concept="3uibUv" id="5XU7UUGb8w0" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8w1" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8w2" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8w3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8w4" role="3cpWs9">
            <property role="TrG5h" value="firstInstructionOfFirstInstruction" />
            <node concept="3uibUv" id="5XU7UUGb8w5" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8w6" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8w7" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8w8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8w9" role="3cpWs9">
            <property role="TrG5h" value="mixedInstructions" />
            <node concept="10Q1$e" id="5XU7UUGb8wa" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8wb" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb8wc" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8wd" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb8vZ" resolve="firstInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8we" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8wf" role="3cpWs9">
            <property role="TrG5h" value="emptyMixedInstructions" />
            <node concept="10Q1$e" id="5XU7UUGb8wg" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8wh" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8wi" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGb8wj" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGb8wk" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGb8wl" role="3$I4v7">
                    <property role="3cmrfH" value="0" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGb8wm" role="3$_nBY">
                  <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8wn" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8wo" role="3cpWs9">
            <property role="TrG5h" value="instructionsOfFirstInstruction" />
            <node concept="10Q1$e" id="5XU7UUGb8wp" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8wq" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb8wr" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZwe" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb8w4" resolve="firstInstructionOfFirstInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8wt" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8wu" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8wv" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8ww" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGb8wx" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdG7" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8w4" resolve="firstInstructionOfFirstInstruction" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8wz" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIInstruction.getAdress():java.math.BigInteger" resolve="getAdress" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8w$" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="2ShNRf" id="5XU7UUGb8w_" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGb8wA" role="2ShVmc">
                  <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                  <node concept="Xl_RD" id="5XU7UUGb8wB" role="37wK5m">
                    <property role="Xl_RC" value="500" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8wC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8wD" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8wE" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="5XU7UUGb8wF" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdM3" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8vZ" resolve="firstInstruction" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8wH" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIMixedInstruction.getLineNumber():int" resolve="getLineNumber" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8wI" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="3cmrfG" id="5XU7UUGb8wJ" role="37wK5m">
                <property role="3cmrfH" value="4" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8wK" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8wL" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8wM" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGb8wN" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGb8wO" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8vZ" resolve="firstInstruction" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8wP" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIMixedInstruction.getInstructions():org.eclipse.cdt.debug.core.cdi.model.ICDIInstruction[]" resolve="getInstructions" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8wQ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvQZpt" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8wo" resolve="instructionsOfFirstInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8wS" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8wT" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8wU" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGb8wV" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvTdRU" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8vU" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8wX" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDISourceManagement.getMixedInstructions(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.model.ICDIMixedInstruction[]" resolve="getMixedInstructions" />
                  <node concept="Xl_RD" id="5XU7UUGb8wY" role="37wK5m">
                    <property role="Xl_RC" value="Main.c" />
                  </node>
                  <node concept="3cmrfG" id="5XU7UUGb8wZ" role="37wK5m">
                    <property role="3cmrfH" value="4" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8x0" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvTdSQ" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8w9" resolve="mixedInstructions" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8x2" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8x3" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8x4" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGb8x5" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZ5L" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8vU" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8x7" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDISourceManagement.getMixedInstructions(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.model.ICDIMixedInstruction[]" resolve="getMixedInstructions" />
                  <node concept="Xl_RD" id="5XU7UUGb8x8" role="37wK5m">
                    <property role="Xl_RC" value="Main.c" />
                  </node>
                  <node concept="3cmrfG" id="5XU7UUGb8x9" role="37wK5m">
                    <property role="3cmrfH" value="6" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8xa" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvTdE_" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8wf" resolve="emptyMixedInstructions" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8xc" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8xd" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8xe" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="2OqwBi" id="5XU7UUGb8xf" role="37wK5m">
                <node concept="37vLTw" id="5XU7UUGb8xg" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8vP" resolve="sessionAccessor" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8xh" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8xi" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="5HxjapvTen7" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8vU" resolve="target" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8xk" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb8xl" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8xm" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8xn" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdIw" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8w4" resolve="firstInstructionOfFirstInstruction" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8xp" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8xq" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZDL" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8vU" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8xs" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8xt" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb8xu" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8vZ" resolve="firstInstruction" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8xv" role="Sfmx6">
        <ref role="3uigEE" to="ys5c:~CDIException" resolve="CDIException" />
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8xw" role="1SL9yI">
      <property role="TrG5h" value="getFactory" />
      <node concept="3cqZAl" id="5XU7UUGb8xx" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8xy" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8xz" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8x$" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8x_" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8xA" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8xB" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8xC" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8xD" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8xE" role="3cpWs9">
            <property role="TrG5h" value="breakpointService" />
            <node concept="2OqwBi" id="5XU7UUGb8xF" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ_8" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8x$" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8xH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8xI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
            <node concept="3uibUv" id="5XU7UUGb8xJ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8xK" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8xL" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvQZPy" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8xE" resolve="breakpointService" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8xN" role="2OqNvi">
              <ref role="37wK5l" to="x30c:k9NVG_At1c" resolve="getBreakpointLocationFactory" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8xO" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb8xP" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb8xQ" role="2ZW6by">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lkw" resolve="IWBreakpointLocationFactory" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8xR" role="2ZW6bz">
              <node concept="37vLTw" id="5HxjapvTdSa" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8xE" resolve="breakpointService" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8xT" role="2OqNvi">
                <ref role="37wK5l" to="x30c:k9NVG_At1c" resolve="getBreakpointLocationFactory" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8xU" role="1SL9yI">
      <property role="TrG5h" value="addBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8xV" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8xW" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8xX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8xY" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8xZ" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8y0" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8y1" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8y2" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8y3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8y4" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8y5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8y6" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8y7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8xY" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8y8" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8y9" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8ya" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8yb" role="3cpWs9">
            <property role="TrG5h" value="targetMock" />
            <node concept="3uibUv" id="2npj2sqFDHZ" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8yd" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8ye" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8yf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8yg" role="3cpWs9">
            <property role="TrG5h" value="lineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8yh" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8yi" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8yj" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8yk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8yl" role="3cpWs9">
            <property role="TrG5h" value="lineBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8ym" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8yn" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8yo" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8yp" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8yq" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8yr" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8ys" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZSi" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8xY" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8yu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8yv" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8yw" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8yx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8yy" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8yz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8y$" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8y_" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZS0" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8yq" resolve="accessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8yB" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8yC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdPv" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8yb" resolve="targetMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8yE" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8yF" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8yG" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8yH" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8yI" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8yJ" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZEp" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8yb" resolve="targetMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8yL" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.createLineLocation(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.ICDILineLocation" resolve="createLineLocation" />
                    <node concept="Xl_RD" id="5XU7UUGb8yM" role="37wK5m">
                      <property role="Xl_RC" value="Main.c" />
                    </node>
                    <node concept="3cmrfG" id="5XU7UUGb8yN" role="37wK5m">
                      <property role="3cmrfH" value="9" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8yO" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb8yP" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8yg" resolve="lineLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8yQ" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8yR" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8yS" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8yT" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8yU" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb8yV" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb8yW" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb8yX" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZ6L" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8yb" resolve="targetMock" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8yZ" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.setLineBreakpoint(int,org.eclipse.cdt.debug.core.cdi.ICDILineLocation,org.eclipse.cdt.debug.core.cdi.ICDICondition,boolean):org.eclipse.cdt.debug.core.cdi.model.ICDILineBreakpoint" resolve="setLineBreakpoint" />
                        <node concept="3cmrfG" id="5XU7UUGb8z0" role="37wK5m">
                          <property role="3cmrfH" value="0" />
                        </node>
                        <node concept="37vLTw" id="5XU7UUGb8z1" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGb8yg" resolve="lineLocation" />
                        </node>
                        <node concept="10Nm6u" id="5XU7UUGb8z2" role="37wK5m" />
                        <node concept="3clFbT" id="5XU7UUGb8z3" role="37wK5m">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8z4" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvQZ5$" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb8yl" resolve="lineBreakpoint" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb8z6" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8z7" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8z8" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8z9" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8za" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8zb" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8zc" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8zd" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTej3" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8z8" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8zf" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8zg" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8zh" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8zi" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGb8zj" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8yb" resolve="targetMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8zk" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8zl" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdvQ" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8yq" resolve="accessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8zn" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8zo" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8zp" role="3cpWs9">
            <property role="TrG5h" value="cratedLineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8zq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lmO" resolve="WLineLocation" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8zr" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8zs" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lmQ" resolve="WLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8zt" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8zu" role="37wK5m">
                  <property role="3cmrfH" value="9" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8zv" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8zw" role="3cpWs9">
            <property role="TrG5h" value="breakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8zx" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8zy" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZH$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8y4" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8z$" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                <node concept="37vLTw" id="5XU7UUGb8z_" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8zp" resolve="cratedLineLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8zA" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZr1" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGb8zw" resolve="breakpoint" />
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8zC" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8zD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8zE" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTe3v" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8yb" resolve="targetMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8zG" role="1SL9yI">
      <property role="TrG5h" value="addBreakpointForUnsupportedBreakpointLocation" />
      <node concept="3cqZAl" id="5XU7UUGb8zH" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8zI" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8zJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8zK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8zL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8zM" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8zN" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8zO" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8zP" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8zQ" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8zR" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8zS" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdIq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8zK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8zU" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8zV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8zW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8zX" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="2npj2sqFzXp" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8zZ" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2npj2sqFzkr" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8$1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8$2" role="3cpWs9">
            <property role="TrG5h" value="lineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8$3" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8$4" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8$5" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8$6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8$7" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8$8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8$9" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8$a" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8$b" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8$c" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8$d" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8$e" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8$f" role="37wK5m">
                  <node concept="2OqwBi" id="5XU7UUGb8$g" role="2Oq$k0">
                    <node concept="37vLTw" id="5XU7UUGb8$h" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8zK" resolve="injector" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8$i" role="2OqNvi">
                      <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                      <node concept="3VsKOn" id="5XU7UUGb8$j" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8$k" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8$l" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb8$m" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8zX" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8$n" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8$o" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8$p" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb8$q" role="37wK5m">
              <node concept="37vLTw" id="5XU7UUGb8$r" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8zK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8$s" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8$t" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8$u" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8$v" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8$w" role="3cpWs9">
            <property role="TrG5h" value="breakpointLocation" />
            <node concept="3uibUv" id="5XU7UUGb8$x" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8$y" role="33vP2m">
              <node concept="YeOm9" id="5XU7UUGb8$z" role="2ShVmc">
                <node concept="1Y3b0j" id="5XU7UUGb8$$" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                  <ref role="1Y3XeK" to="x30c:5QRJpNTr_e_" resolve="IWBreakpointLocation" />
                  <node concept="3Tm1VV" id="5XU7UUGb8$_" role="1B3o_S" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8$A" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8$B" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2$vlzIIentn" resolve="WUnsupportedBreakpointLocation" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8$C" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8$D" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdVZ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8zQ" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8$F" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                <node concept="37vLTw" id="5HxjapvTdVD" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8$w" resolve="breakpointLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8$H" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8$I" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8$J" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="2OqwBi" id="5XU7UUGb8$K" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvQZ4E" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8zK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8$M" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8$N" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8$O" role="1SL9yI">
      <property role="TrG5h" value="handleTargetExceptionWhenAddBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8$P" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8$Q" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8$R" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8$S" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8$T" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8$U" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8$V" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8$W" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8$X" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8$Y" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8$Z" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8_0" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8_1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8$S" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8_2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8_3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8_4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8_5" role="3cpWs9">
            <property role="TrG5h" value="targetMock" />
            <node concept="3uibUv" id="2npj2sqGHXc" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8_7" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2npj2sqGH96" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8_9" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8_a" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8_b" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8_c" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZfz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8$S" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8_e" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8_f" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8_g" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8_h" role="3cpWs9">
            <property role="TrG5h" value="lineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8_i" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8_j" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8_k" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8_l" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8_m" role="3cpWs9">
            <property role="TrG5h" value="lineBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8_n" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8_o" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8_p" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8_q" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8_r" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8_s" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8_t" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8_u" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8_v" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdWG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8_5" resolve="targetMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8_x" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.createLineLocation(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.ICDILineLocation" resolve="createLineLocation" />
                    <node concept="Xl_RD" id="5XU7UUGb8_y" role="37wK5m">
                      <property role="Xl_RC" value="Main.c" />
                    </node>
                    <node concept="3cmrfG" id="5XU7UUGb8_z" role="37wK5m">
                      <property role="3cmrfH" value="9" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8_$" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb8__" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8_h" resolve="lineLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8_A" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8_B" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8_C" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8_D" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8_E" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb8_F" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb8_G" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb8_H" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZxm" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8_5" resolve="targetMock" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8_J" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.setLineBreakpoint(int,org.eclipse.cdt.debug.core.cdi.ICDILineLocation,org.eclipse.cdt.debug.core.cdi.ICDICondition,boolean):org.eclipse.cdt.debug.core.cdi.model.ICDILineBreakpoint" resolve="setLineBreakpoint" />
                        <node concept="3cmrfG" id="5XU7UUGb8_K" role="37wK5m">
                          <property role="3cmrfH" value="0" />
                        </node>
                        <node concept="37vLTw" id="5XU7UUGb8_L" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGb8_h" resolve="lineLocation" />
                        </node>
                        <node concept="10Nm6u" id="5XU7UUGb8_M" role="37wK5m" />
                        <node concept="3clFbT" id="5XU7UUGb8_N" role="37wK5m">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8_O" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                    <node concept="2ShNRf" id="5XU7UUGb8_P" role="37wK5m">
                      <node concept="1pGfFk" id="5XU7UUGb8_Q" role="2ShVmc">
                        <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb8_R" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8_S" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8_T" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8_U" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8_V" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8_W" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8_X" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8_Y" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb8_Z" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8_T" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8A0" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8A1" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8A2" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8A3" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8A4" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8A5" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb8A6" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8_a" resolve="accessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8A7" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8A8" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdS6" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8_5" resolve="targetMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Aa" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Ab" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Ac" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Ad" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZl8" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8_5" resolve="targetMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Af" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Ag" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZ_y" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8_a" resolve="accessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Ai" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8Aj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Ak" role="3cpWs9">
            <property role="TrG5h" value="cratedLineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8Al" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lmO" resolve="WLineLocation" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Am" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8An" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lmQ" resolve="WLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8Ao" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8Ap" role="37wK5m">
                  <property role="3cmrfH" value="9" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8Aq" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8Ar" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2$vlzIIenuK" resolve="WFailedToCreateBreakpointException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8As" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8At" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeiP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8$Y" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Av" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                <node concept="37vLTw" id="5XU7UUGb8Aw" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8Ak" resolve="cratedLineLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Ax" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Ay" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Az" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb8A$" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8_5" resolve="targetMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8A_" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8AA" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdv3" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8_a" resolve="accessor" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8AC" role="1SL9yI">
      <property role="TrG5h" value="removeUnknownBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8AD" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8AE" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8AF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8AG" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8AH" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8AI" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8AJ" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8AK" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8AL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8AM" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8AN" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8AO" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8AP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8AG" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8AQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8AR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8AS" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8AT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8AU" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb8AV" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8AW" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8AX" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8AY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8AZ" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8B0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8B1" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZGk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8AG" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8B3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8B4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8B5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8B6" role="3cpWs9">
            <property role="TrG5h" value="lineBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8B7" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8B8" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8B9" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ba" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Bb" role="3cpWs9">
            <property role="TrG5h" value="unmanagedBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8Bc" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1m3i" resolve="WBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Bd" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Be" role="37wK5m">
                <ref role="3VsUkX" to="x30c:6HGoZgQ1m3i" resolve="WBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Bf" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Bg" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Bh" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Bi" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Bj" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8Bk" role="37wK5m">
                  <node concept="liA8E" id="5XU7UUGb8Bl" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                  <node concept="37vLTw" id="5XU7UUGb8Bm" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8AZ" resolve="accessor" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8Bn" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdU7" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8AU" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Bp" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Bq" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Br" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdsw" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8AZ" resolve="accessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Bt" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb8Bu" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8Bv" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2$vlzIIdKlB" resolve="WUnknownBreakpointException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8Bw" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8Bx" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZlP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8AM" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Bz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
                <node concept="37vLTw" id="5HxjapvQZNE" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8Bb" resolve="unmanagedBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8B_" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8BA" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8BB" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZLB" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8AZ" resolve="accessor" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8BD" role="1SL9yI">
      <property role="TrG5h" value="targetFailsToRemoveBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8BE" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8BF" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8BG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8BH" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8BI" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8BJ" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8BK" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8BL" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8BM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8BN" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8BO" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8BP" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdXy" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8BH" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8BR" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8BS" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8BT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8BU" role="3cpWs9">
            <property role="TrG5h" value="cratedLineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8BV" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lmO" resolve="WLineLocation" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8BW" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8BX" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lmQ" resolve="WLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8BY" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8BZ" role="37wK5m">
                  <property role="3cmrfH" value="9" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8C0" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8C1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8C2" role="3cpWs9">
            <property role="TrG5h" value="lineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8C3" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8C4" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8C5" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8C6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8C7" role="3cpWs9">
            <property role="TrG5h" value="lineBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8C8" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8C9" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Ca" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Cb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Cc" role="3cpWs9">
            <property role="TrG5h" value="breakpointContainer" />
            <node concept="10Q1$e" id="5XU7UUGb8Cd" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Ce" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb8Cf" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZbU" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb8C7" resolve="lineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ch" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Ci" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="2npj2sqG8vB" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Ck" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="2npj2sqG7zd" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Cm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Cn" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8Co" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Cp" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZap" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8BH" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Cr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Cs" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Ct" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Cu" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Cv" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Cw" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Cx" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8Cy" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdL8" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Cn" resolve="accessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8C$" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8C_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb8CA" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8CB" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8CC" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8CD" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8CE" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8CF" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8CG" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZgR" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8CI" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.createLineLocation(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.ICDILineLocation" resolve="createLineLocation" />
                    <node concept="Xl_RD" id="5XU7UUGb8CJ" role="37wK5m">
                      <property role="Xl_RC" value="Main.c" />
                    </node>
                    <node concept="3cmrfG" id="5XU7UUGb8CK" role="37wK5m">
                      <property role="3cmrfH" value="9" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8CL" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdZG" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8C2" resolve="lineLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8CN" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8CO" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8CP" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8CQ" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8CR" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb8CS" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb8CT" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb8CU" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZtm" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8CW" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.setLineBreakpoint(int,org.eclipse.cdt.debug.core.cdi.ICDILineLocation,org.eclipse.cdt.debug.core.cdi.ICDICondition,boolean):org.eclipse.cdt.debug.core.cdi.model.ICDILineBreakpoint" resolve="setLineBreakpoint" />
                        <node concept="3cmrfG" id="5XU7UUGb8CX" role="37wK5m">
                          <property role="3cmrfH" value="0" />
                        </node>
                        <node concept="37vLTw" id="5XU7UUGb8CY" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGb8C2" resolve="lineLocation" />
                        </node>
                        <node concept="10Nm6u" id="5XU7UUGb8CZ" role="37wK5m" />
                        <node concept="3clFbT" id="5XU7UUGb8D0" role="37wK5m">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8D1" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvTdWj" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb8C7" resolve="lineBreakpoint" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb8D3" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb8D4" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8D5" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdLk" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8D7" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.deleteBreakpoints(org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpoint[]):void" resolve="deleteBreakpoints" />
                  <node concept="2YIFZM" id="5XU7UUGb8D8" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="2OqwBi" id="5XU7UUGb8D9" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZCD" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8Cc" resolve="breakpointContainer" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8Db" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8Dc" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8Dd" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8De" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8Df" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8Dg" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8Dh" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8Di" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb8Dj" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8Dd" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8Dk" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Dl" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Dm" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8Dn" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Do" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
              <node concept="2ShNRf" id="5XU7UUGb8Dp" role="37wK5m">
                <node concept="1pGfFk" id="5XU7UUGb8Dq" role="2ShVmc">
                  <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Dr" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Ds" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Dt" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZIH" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Dv" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Dw" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdBW" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Cn" resolve="accessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Dy" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8Dz" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8D$" role="3cpWs9">
            <property role="TrG5h" value="breakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8D_" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8DA" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZz5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8BN" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8DC" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                <node concept="37vLTw" id="5HxjapvTeqv" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8BU" resolve="cratedLineLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8DE" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8DF" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:2$vlzIIdKmM" resolve="WFailedToRemoveBreakpointException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8DG" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8DH" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8DI" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8BN" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8DJ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
                <node concept="37vLTw" id="5XU7UUGb8DK" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8D$" resolve="breakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8DL" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8DM" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8DN" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvQZBO" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Ci" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8DP" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8DQ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTdHf" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Cn" resolve="accessor" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8DS" role="1SL9yI">
      <property role="TrG5h" value="removeAddedBreakpoint" />
      <node concept="3cqZAl" id="5XU7UUGb8DT" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8DU" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8DV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8DW" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8DX" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8DY" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8DZ" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8E0" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8E1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8E2" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8E3" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8E4" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZhv" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8DW" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8E6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8E7" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8E8" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8E9" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="2npj2sqGfQL" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Eb" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2npj2sqGmbl" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ed" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Ee" role="3cpWs9">
            <property role="TrG5h" value="lineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8Ef" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Eg" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Eh" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILineLocation" resolve="ICDILineLocation" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ei" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Ej" role="3cpWs9">
            <property role="TrG5h" value="lineBreakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8Ek" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8El" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Em" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILineBreakpoint" resolve="ICDILineBreakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8En" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Eo" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Ep" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Eq" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8Er" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZjy" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8Et" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.createLineLocation(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.ICDILineLocation" resolve="createLineLocation" />
                    <node concept="Xl_RD" id="5XU7UUGb8Eu" role="37wK5m">
                      <property role="Xl_RC" value="Main.c" />
                    </node>
                    <node concept="3cmrfG" id="5XU7UUGb8Ev" role="37wK5m">
                      <property role="3cmrfH" value="9" />
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8Ew" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb8Ex" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8Ee" resolve="lineLocation" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Ey" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8Ez" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8E$" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8E_" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8EA" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb8EB" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb8EC" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb8ED" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvTdyl" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8EF" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.setLineBreakpoint(int,org.eclipse.cdt.debug.core.cdi.ICDILineLocation,org.eclipse.cdt.debug.core.cdi.ICDICondition,boolean):org.eclipse.cdt.debug.core.cdi.model.ICDILineBreakpoint" resolve="setLineBreakpoint" />
                        <node concept="3cmrfG" id="5XU7UUGb8EG" role="37wK5m">
                          <property role="3cmrfH" value="0" />
                        </node>
                        <node concept="37vLTw" id="5HxjapvTdZW" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGb8Ee" resolve="lineLocation" />
                        </node>
                        <node concept="10Nm6u" id="5XU7UUGb8EI" role="37wK5m" />
                        <node concept="3clFbT" id="5XU7UUGb8EJ" role="37wK5m">
                          <property role="3clFbU" value="false" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8EK" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvQZA3" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb8Ej" resolve="lineBreakpoint" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb8EM" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8EN" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8EO" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8EP" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8EQ" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8ER" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8ES" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8ET" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb8EU" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8EO" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8EV" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2npj2sqRRDY" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8EW" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8EX" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8EY" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8EZ" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="2npj2sqRXC9" role="37wK5m">
                  <node concept="37vLTw" id="2npj2sqRWYN" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
                  </node>
                  <node concept="liA8E" id="2npj2sqS36Y" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDISessionObject.getSession():org.eclipse.cdt.debug.core.cdi.ICDISession" resolve="getSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8F3" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb8F4" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2npj2sqSaLX" role="37wK5m">
                    <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8F6" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8F7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8F8" role="3cpWs9">
            <property role="TrG5h" value="breakpointsDummy" />
            <node concept="10Q1$e" id="5XU7UUGb8F9" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Fa" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Fb" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGb8Fc" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGb8Fd" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGb8Fe" role="3$I4v7">
                    <property role="3cmrfH" value="0" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGb8Ff" role="3$_nBY">
                  <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8Fg" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8Fh" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8Fi" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8Fj" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdGl" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8Fl" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.deleteBreakpoints(org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpoint[]):void" resolve="deleteBreakpoints" />
                  <node concept="2YIFZM" id="5XU7UUGb8Fm" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                    <node concept="2OqwBi" id="5XU7UUGb8Fn" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZxb" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb8F8" resolve="breakpointsDummy" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8Fp" role="2OqNvi">
                        <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8Fq" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8Fr" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8Fs" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8Ft" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8Fu" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8Fv" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8Fw" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb8Fx" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8Fr" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8Fy" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Fz" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8F$" role="3cpWs9">
            <property role="TrG5h" value="accessor" />
            <node concept="3uibUv" id="5XU7UUGb8F_" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8FA" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe3x" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8DW" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8FC" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8FD" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8FE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8FF" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8FG" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8FH" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8FI" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZDP" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8F$" resolve="accessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8FK" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8FL" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdSq" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8FN" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8FO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8FP" role="3cpWs9">
            <property role="TrG5h" value="cratedLineLocation" />
            <node concept="3uibUv" id="5XU7UUGb8FQ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:6HGoZgQ1lmO" resolve="WLineLocation" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8FR" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb8FS" role="2ShVmc">
                <ref role="37wK5l" to="x30c:6HGoZgQ1lmQ" resolve="WLineLocation" />
                <node concept="Xl_RD" id="5XU7UUGb8FT" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8FU" role="37wK5m">
                  <property role="3cmrfH" value="9" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8FV" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8FW" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8FX" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb8FY" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8FZ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8G0" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdVN" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8F$" resolve="accessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8G2" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8G3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8G4" role="3cpWs9">
            <property role="TrG5h" value="breakpoint" />
            <node concept="3uibUv" id="5XU7UUGb8G5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7I15FylTtR2" resolve="IWBreakpoint" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8G6" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZNC" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8E2" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8G8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:6HGoZgQ1kt6" resolve="addBreakpoint" />
                <node concept="37vLTw" id="5HxjapvQZto" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8FP" resolve="cratedLineLocation" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8Ga" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGb8Gb" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGb8G4" resolve="breakpoint" />
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Gc" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Gd" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZIf" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8E2" resolve="breakpointManager" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Gf" role="2OqNvi">
              <ref role="37wK5l" to="x30c:6HGoZgQ1ktF" resolve="removeBreakpoint" />
              <node concept="37vLTw" id="5HxjapvTdRC" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8G4" resolve="breakpoint" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Gh" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Gi" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Gj" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZGx" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8E9" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Gl" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Gm" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTek7" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8F$" resolve="accessor" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Go" role="1SL9yI">
      <property role="TrG5h" value="fetchAddresses" />
      <node concept="3cqZAl" id="5XU7UUGb8Gp" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Gq" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8Gr" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Gs" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8Gt" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Gu" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8Gv" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8Gw" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Gx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Gy" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8Gz" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8G$" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdyd" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Gs" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8GA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8GB" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8GC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8GD" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb8GE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8GF" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8GG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Gs" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8GH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8GI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8GJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8GK" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8GL" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8GM" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8vO" resolve="targetReturnsMixedInstructions" />
              <node concept="37vLTw" id="5XU7UUGb8GN" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8GD" resolve="sessionAccessor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8GO" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8GP" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8GQ" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8GR" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8GS" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb8GT" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8GD" resolve="sessionAccessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8GU" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8GV" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb8GW" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="2npj2sqFTlE" role="37wK5m">
                    <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8GY" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8GZ" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8H0" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8H1" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZgD" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8GD" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8H3" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8H4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8H5" role="3cpWs9">
            <property role="TrG5h" value="address" />
            <node concept="_YKpA" id="5XU7UUGb8H6" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8H7" role="_ZDj9">
                <ref role="3uigEE" to="xlxw:~BigInteger" resolve="BigInteger" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8H8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeo9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Gy" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Ha" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5I6yYB8zcoy" resolve="getInstructionAdresses" />
                <node concept="Xl_RD" id="5XU7UUGb8Hb" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8Hc" role="37wK5m">
                  <property role="3cmrfH" value="4" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8Hd" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZi7" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGb8H5" resolve="address" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8Hf" role="3cqZAp">
          <node concept="3eOSWO" id="5XU7UUGb8Hg" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb8Hh" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Hi" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdzS" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8H5" resolve="address" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb8Hk" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8Hl" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb8Hm" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb8Hn" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Ho" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGb8Hp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8H5" resolve="address" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb8Hq" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb8Hr" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Hs" role="3tpDZB">
            <node concept="37vLTw" id="5HxjapvTe2r" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8H5" resolve="address" />
            </node>
            <node concept="1uHKPH" id="5XU7UUGb8Hu" role="2OqNvi" />
          </node>
          <node concept="2ShNRf" id="5XU7UUGb8Hv" role="3tpDZA">
            <node concept="1pGfFk" id="5XU7UUGb8Hw" role="2ShVmc">
              <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
              <node concept="Xl_RD" id="5XU7UUGb8Hx" role="37wK5m">
                <property role="Xl_RC" value="500" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Hy" role="1SL9yI">
      <property role="TrG5h" value="noAddressesForLineNumber" />
      <node concept="3cqZAl" id="5XU7UUGb8Hz" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8H$" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8H_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8HA" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8HB" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8HC" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8HD" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8HE" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8HF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8HG" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8HH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8HI" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZqu" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8HA" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8HK" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8HL" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8HM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8HN" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb8HO" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8HP" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8HQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8HA" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8HR" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8HS" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8HT" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8HU" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8HV" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8HW" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8vO" resolve="targetReturnsMixedInstructions" />
              <node concept="37vLTw" id="5HxjapvQZbY" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8HN" resolve="sessionAccessor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8HY" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8HZ" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8I0" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8I1" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8I2" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZ4w" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8HN" resolve="sessionAccessor" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8I4" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8I5" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb8I6" role="37wK5m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="2npj2sqFKOB" role="37wK5m">
                    <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8I8" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8I9" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Ia" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8Ib" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZMp" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8HN" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Id" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8Ie" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8If" role="3cpWs9">
            <property role="TrG5h" value="address" />
            <node concept="_YKpA" id="5XU7UUGb8Ig" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Ih" role="_ZDj9">
                <ref role="3uigEE" to="xlxw:~BigInteger" resolve="BigInteger" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Ii" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdS$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8HG" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Ik" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5I6yYB8zcoy" resolve="getInstructionAdresses" />
                <node concept="Xl_RD" id="5XU7UUGb8Il" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8Im" role="37wK5m">
                  <property role="3cmrfH" value="6" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8In" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZuC" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGb8If" resolve="address" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8Ip" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb8Iq" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGb8Ir" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTelr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8If" resolve="address" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb8It" role="2OqNvi" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGb8Iu" role="3uHU7w">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Iv" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromCDTDuringVariablesFetch" />
      <node concept="3cqZAl" id="5XU7UUGb8Iw" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Ix" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8Iy" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Iz" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8I$" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8I_" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8IA" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8IB" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8uB" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8IC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8ID" role="3cpWs9">
            <property role="TrG5h" value="breakpointManager" />
            <node concept="3uibUv" id="5XU7UUGb8IE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8IF" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe19" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Iz" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8IH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8II" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3nxOvgY3721" resolve="IWBreakpointManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8IJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8IK" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb8IL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8IM" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8IN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Iz" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8IO" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8IP" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8IQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8IR" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8IS" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8IT" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8vi" resolve="targetThrowsExceptionOnRequestingMixedInstructions" />
              <node concept="37vLTw" id="5HxjapvTdtS" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8IK" resolve="sessionAccessor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8IV" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8IW" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8IX" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdPj" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8IK" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8IZ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8J0" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="2OqwBi" id="5XU7UUGb8J1" role="37wK5m">
              <node concept="37vLTw" id="5XU7UUGb8J2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8IK" resolve="sessionAccessor" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8J3" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8J4" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb8J5" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb8J6" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8J7" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8$zSX" resolve="WFetchingVariablesFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8J8" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8J9" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8Ja" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8ID" resolve="breakpointManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Jb" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5I6yYB8zcoy" resolve="getInstructionAdresses" />
                <node concept="Xl_RD" id="5XU7UUGb8Jc" role="37wK5m">
                  <property role="Xl_RC" value="Main.c" />
                </node>
                <node concept="3cmrfG" id="5XU7UUGb8Jd" role="37wK5m">
                  <property role="3cmrfH" value="6" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8Je">
    <property role="TrG5h" value="Events" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="2XrIbr" id="5XU7UUGb8Jf" role="1qtyYc">
      <property role="TrG5h" value="verifyEventType" />
      <node concept="37vLTG" id="5XU7UUGb8Jg" role="3clF46">
        <property role="TrG5h" value="listeners" />
        <property role="3TUv4t" value="true" />
        <node concept="_YKpA" id="5XU7UUGb8Jh" role="1tU5fm">
          <node concept="3uibUv" id="5XU7UUGb8Ji" role="_ZDj9">
            <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Jj" role="3clF46">
        <property role="TrG5h" value="event" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="5XU7UUGb8Jk" role="1tU5fm">
          <ref role="3uigEE" node="5XU7UUGbcJE" resolve="CDTUtilClass.ListenerEvents" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Jl" role="3clF46">
        <property role="TrG5h" value="invocations" />
        <property role="3TUv4t" value="true" />
        <node concept="10Oyi0" id="5XU7UUGb8Jm" role="1tU5fm" />
      </node>
      <node concept="3cqZAl" id="5XU7UUGb8Jn" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Jo" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8J$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8J_" role="3cpWs9">
            <property role="TrG5h" value="finalListeners" />
            <property role="3TUv4t" value="true" />
            <node concept="_YKpA" id="5XU7UUGb8JA" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8JB" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="37vLTw" id="5XU7UUGb8JC" role="33vP2m">
              <ref role="3cqZAo" node="5XU7UUGb8Jg" resolve="listeners" />
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb8JP" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGb8JQ" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb8J_" resolve="finalListeners" />
          </node>
          <node concept="2GrKxI" id="5XU7UUGb8JR" role="2Gsz3X">
            <property role="TrG5h" value="aListener" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb8JS" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb8JT" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGb8JU" role="3clFbG">
                <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2GrUjf" id="5XU7UUGb8JV" role="37wK5m">
                  <ref role="2Gs0qQ" node="5XU7UUGb8JR" resolve="aListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8Kt" role="Sfmx6">
        <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8Ku" role="1qtyYc">
      <property role="TrG5h" value="createArrayFromEvent" />
      <node concept="3clFbS" id="5XU7UUGb8Kv" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8Kw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Kx" role="3cpWs9">
            <property role="TrG5h" value="result" />
            <node concept="10Q1$e" id="5XU7UUGb8Ky" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Kz" role="10Q1$1">
                <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8K$" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGb8K_" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGb8KA" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGb8KB" role="3$I4v7">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGb8KC" role="3$_nBY">
                  <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8KD" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8KE" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8KF" role="37vLTx">
              <ref role="3cqZAo" node="5XU7UUGb8KN" resolve="event" />
            </node>
            <node concept="AH0OO" id="5XU7UUGb8KG" role="37vLTJ">
              <node concept="3cmrfG" id="5XU7UUGb8KH" role="AHEQo">
                <property role="3cmrfH" value="0" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZcq" role="AHHXb">
                <ref role="3cqZAo" node="5XU7UUGb8Kx" resolve="result" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb8KJ" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGb8KK" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb8Kx" resolve="result" />
          </node>
        </node>
      </node>
      <node concept="10Q1$e" id="5XU7UUGb8KL" role="3clF45">
        <node concept="3uibUv" id="5XU7UUGb8KM" role="10Q1$1">
          <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8KN" role="3clF46">
        <property role="TrG5h" value="event" />
        <node concept="3uibUv" id="5XU7UUGb8KO" role="1tU5fm">
          <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8KP" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="5XU7UUGb8KQ" role="3clF46">
        <property role="TrG5h" value="numberOfListeners" />
        <node concept="10Oyi0" id="5XU7UUGb8KR" role="1tU5fm" />
      </node>
      <node concept="37vLTG" id="5XU7UUGb8KS" role="3clF46">
        <property role="TrG5h" value="listeners" />
        <property role="3TUv4t" value="true" />
        <node concept="_YKpA" id="5XU7UUGb8KT" role="1tU5fm">
          <node concept="3uibUv" id="5XU7UUGb8KU" role="_ZDj9">
            <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8KV" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb8KW" role="3clF47">
        <node concept="1Dw8fO" id="5XU7UUGb8KX" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8KY" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb8KZ" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8L0" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGb8L1" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8KS" resolve="listeners" />
                </node>
                <node concept="TSZUe" id="5XU7UUGb8L2" role="2OqNvi">
                  <node concept="2YIFZM" id="5XU7UUGb8L3" role="25WWJ7">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGb8L4" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGb8L5" role="1Duv9x">
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5XU7UUGb8L6" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGb8L7" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGb8L8" role="1Dwp0S">
            <node concept="37vLTw" id="5XU7UUGb8L9" role="3uHU7w">
              <ref role="3cqZAo" node="5XU7UUGb8KQ" resolve="numberOfListeners" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZi$" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGb8L5" resolve="i" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGb8Lb" role="1Dwrff">
            <node concept="37vLTw" id="5HxjapvQZRf" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGb8L5" resolve="i" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ld" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Le" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8Lf" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Lg" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGb8Lh" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb8Li" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb8Lj" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb8Lk" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb8Ll" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb8Lm" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb8Ln" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb8Lo" role="3clF47">
                        <node concept="3cpWs8" id="5XU7UUGb8Lp" role="3cqZAp">
                          <node concept="3cpWsn" id="5XU7UUGb8Lq" role="3cpWs9">
                            <property role="TrG5h" value="multibinding" />
                            <node concept="3uibUv" id="5XU7UUGb8Lr" role="1tU5fm">
                              <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
                              <node concept="3uibUv" id="5XU7UUGb8Ls" role="11_B2D">
                                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="5XU7UUGb8Lt" role="33vP2m">
                              <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
                              <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
                              <node concept="3P9mCS" id="5XU7UUGb8Lu" role="37wK5m">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
                              </node>
                              <node concept="3VsKOn" id="5XU7UUGb8Lv" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="2Gpval" id="5XU7UUGb8Lw" role="3cqZAp">
                          <node concept="2GrKxI" id="5XU7UUGb8Lx" role="2Gsz3X">
                            <property role="TrG5h" value="listener" />
                          </node>
                          <node concept="37vLTw" id="5XU7UUGb8Ly" role="2GsD0m">
                            <ref role="3cqZAo" node="5XU7UUGb8KS" resolve="listeners" />
                          </node>
                          <node concept="3clFbS" id="5XU7UUGb8Lz" role="2LFqv$">
                            <node concept="3clFbF" id="5XU7UUGb8L$" role="3cqZAp">
                              <node concept="2OqwBi" id="5XU7UUGb8L_" role="3clFbG">
                                <node concept="2OqwBi" id="5XU7UUGb8LA" role="2Oq$k0">
                                  <node concept="37vLTw" id="5HxjapvTdxu" role="2Oq$k0">
                                    <ref role="3cqZAo" node="5XU7UUGb8Lq" resolve="multibinding" />
                                  </node>
                                  <node concept="liA8E" id="5XU7UUGb8LC" role="2OqNvi">
                                    <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                                  </node>
                                </node>
                                <node concept="liA8E" id="5XU7UUGb8LD" role="2OqNvi">
                                  <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                  <node concept="2GrUjf" id="5XU7UUGb8LE" role="37wK5m">
                                    <ref role="2Gs0qQ" node="5XU7UUGb8Lx" resolve="listener" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8LF" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8LG" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8LH" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8LI" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8LJ" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8LK" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:1tVZDsLozjz" resolve="WEventManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKzSr9" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKzSra" role="3clFbG">
                            <node concept="3P9mCS" id="7W4QWPKzSrb" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7W4QWPKzSrp" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKzSrd" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="7W4QWPKzSry" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="7W4QWPKzSrz" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="7W4QWPKvmWe" role="3cqZAp">
                          <node concept="2OqwBi" id="7W4QWPKvmWf" role="3clFbG">
                            <node concept="3P9mCS" id="7W4QWPKvmWg" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7W4QWPK$AHs" role="37wK5m">
                                <ref role="3VsUkX" to="5zyv:~Executor" resolve="Executor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="7W4QWPKvmWi" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2ShNRf" id="7W4QWPK$AHy" role="37wK5m">
                                <node concept="YeOm9" id="7W4QWPK$AHA" role="2ShVmc">
                                  <node concept="1Y3b0j" id="7W4QWPK$AHB" role="YeSDq">
                                    <property role="2bfB8j" value="true" />
                                    <ref role="1Y3XeK" to="5zyv:~Executor" resolve="Executor" />
                                    <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                                    <node concept="3Tm1VV" id="7W4QWPK$AHC" role="1B3o_S" />
                                    <node concept="3clFb_" id="7W4QWPK$AHD" role="jymVt">
                                      <property role="1EzhhJ" value="false" />
                                      <property role="TrG5h" value="execute" />
                                      <property role="DiZV1" value="false" />
                                      <property role="IEkAT" value="false" />
                                      <node concept="3Tm1VV" id="7W4QWPK$AHE" role="1B3o_S" />
                                      <node concept="3cqZAl" id="7W4QWPK$AHF" role="3clF45" />
                                      <node concept="37vLTG" id="7W4QWPK$AHG" role="3clF46">
                                        <property role="TrG5h" value="runnable" />
                                        <node concept="3uibUv" id="7W4QWPK$AHH" role="1tU5fm">
                                          <ref role="3uigEE" to="wyt6:~Runnable" resolve="Runnable" />
                                        </node>
                                      </node>
                                      <node concept="3clFbS" id="7W4QWPK$AHI" role="3clF47">
                                        <node concept="3clFbF" id="7W4QWPK$AHJ" role="3cqZAp">
                                          <node concept="2OqwBi" id="7W4QWPK$AHX" role="3clFbG">
                                            <node concept="37vLTw" id="7W4QWPK$AHK" role="2Oq$k0">
                                              <ref role="3cqZAo" node="7W4QWPK$AHG" resolve="runnable" />
                                            </node>
                                            <node concept="liA8E" id="7W4QWPK$AI2" role="2OqNvi">
                                              <ref role="37wK5l" to="wyt6:~Runnable.run():void" resolve="run" />
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb8LL" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZ4T" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb8Le" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8LN" role="1SL9yI">
      <property role="TrG5h" value="attachedEvent" />
      <node concept="3cqZAl" id="5XU7UUGb8LO" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8LP" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8LV" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8LW" role="3cpWs9">
            <property role="TrG5h" value="listeners" />
            <node concept="_YKpA" id="5XU7UUGb8LX" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8LY" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8LZ" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb8M0" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb8M1" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8M2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8M3" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8M4" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8M5" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8M6" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8M7" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8KP" resolve="injectDependencies" />
                <node concept="3cmrfG" id="5XU7UUGb8M8" role="2XxRq1">
                  <property role="3cmrfH" value="5" />
                </node>
                <node concept="37vLTw" id="5HxjapvTe0_" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb8LW" resolve="listeners" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb8Ma" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb8Mb" role="2Gsz3X">
            <property role="TrG5h" value="listener" />
          </node>
          <node concept="37vLTw" id="5HxjapvQZE_" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb8LW" resolve="listeners" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb8Md" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb8Me" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8Mf" role="3clFbG">
                <node concept="2GrUjf" id="5XU7UUGb8Mg" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb8Mb" resolve="listener" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8Mh" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb8Mi" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGb8Mj" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="2GrUjf" id="5XU7UUGb8Mk" role="37wK5m">
                  <ref role="2Gs0qQ" node="5XU7UUGb8Mb" resolve="listener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Ml" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Mm" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Mn" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdOK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8M3" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Mp" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Mq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Mr" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="5XU7UUGb8Ms" role="37wK5m">
                <node concept="2WthIp" id="5XU7UUGb8Mt" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGb8Mu" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="5XU7UUGb8Mv" role="2XxRq1">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7sNQp64knJs" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDICreatedEvent" resolve="ICDICreatedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKzYIg" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Mx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8My" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8Mz" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8M$" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8Jf" resolve="verifyEventType" />
              <node concept="37vLTw" id="5HxjapvQZzz" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8LW" resolve="listeners" />
              </node>
              <node concept="Rm8GO" id="5XU7UUGb8MA" role="2XxRq1">
                <ref role="1Px2BO" node="5XU7UUGbcJE" resolve="CDTUtilClass.ListenerEvents" />
                <ref role="Rm8GQ" node="5XU7UUGbcJF" resolve="ATTACHED" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8MB" role="2XxRq1">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8MC" role="1SL9yI">
      <property role="TrG5h" value="resumedEvent" />
      <node concept="3cqZAl" id="5XU7UUGb8MD" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8ME" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8MG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8MH" role="3cpWs9">
            <property role="TrG5h" value="listeners" />
            <node concept="_YKpA" id="5XU7UUGb8MI" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8MJ" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8MK" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb8ML" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb8MM" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8MN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8MO" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8MP" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8MQ" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8MR" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8MS" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8KP" resolve="injectDependencies" />
                <node concept="3cmrfG" id="5XU7UUGb8MT" role="2XxRq1">
                  <property role="3cmrfH" value="5" />
                </node>
                <node concept="37vLTw" id="5XU7UUGb8MU" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb8MH" resolve="listeners" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb8MV" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb8MW" role="2Gsz3X">
            <property role="TrG5h" value="listener" />
          </node>
          <node concept="37vLTw" id="5HxjapvQZlo" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb8MH" resolve="listeners" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb8MY" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb8MZ" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8N0" role="3clFbG">
                <node concept="2GrUjf" id="5XU7UUGb8N1" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb8MW" resolve="listener" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8N2" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="2ZXSOCt7Q95" role="3cqZAp">
              <node concept="2OqwBi" id="2ZXSOCt7Q96" role="3clFbG">
                <node concept="2GrUjf" id="2ZXSOCt7Q97" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb8MW" resolve="listener" />
                </node>
                <node concept="liA8E" id="2ZXSOCt7Q98" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb8N3" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGb8N4" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="2GrUjf" id="5XU7UUGb8N5" role="37wK5m">
                  <ref role="2Gs0qQ" node="5XU7UUGb8MW" resolve="listener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2ZXSOCt7Q8y" role="3cqZAp">
          <node concept="2OqwBi" id="2ZXSOCt7Q8P" role="3clFbG">
            <node concept="2OqwBi" id="2ZXSOCt7Q8z" role="2Oq$k0">
              <node concept="37vLTw" id="2ZXSOCt7Q8$" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8MO" resolve="injector" />
              </node>
              <node concept="liA8E" id="2ZXSOCt7Q8_" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="2ZXSOCt7Q8A" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2ZXSOCt7Q8W" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="2ZXSOCt7Q8X" role="37wK5m">
                <node concept="2WthIp" id="2ZXSOCt7Q8Y" role="2Oq$k0" />
                <node concept="2XshWL" id="2ZXSOCt7Q8Z" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="2ZXSOCt7Q90" role="2XxRq1">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="7sNQp64ko9d" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDICreatedEvent" resolve="ICDICreatedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8N6" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8N7" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8N8" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGb8N9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8MO" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Na" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Nb" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Nc" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="5XU7UUGb8Nd" role="37wK5m">
                <node concept="2WthIp" id="5XU7UUGb8Ne" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGb8Nf" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="5XU7UUGb8Ng" role="2XxRq1">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7sNQp64knPG" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDIResumedEvent" resolve="ICDIResumedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKzYHE" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Ni" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Nj" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8Nk" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8Nl" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8Jf" resolve="verifyEventType" />
              <node concept="37vLTw" id="5XU7UUGb8Nm" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8MH" resolve="listeners" />
              </node>
              <node concept="Rm8GO" id="5XU7UUGb8Nn" role="2XxRq1">
                <ref role="1Px2BO" node="5XU7UUGbcJE" resolve="CDTUtilClass.ListenerEvents" />
                <ref role="Rm8GQ" node="5XU7UUGbcJI" resolve="RESUMED" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8No" role="2XxRq1">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Np" role="1SL9yI">
      <property role="TrG5h" value="suspendedEvent" />
      <node concept="3cqZAl" id="5XU7UUGb8Nq" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Nr" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8Nt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Nu" role="3cpWs9">
            <property role="TrG5h" value="listeners" />
            <node concept="_YKpA" id="5XU7UUGb8Nv" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Nw" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Nx" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb8Ny" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb8Nz" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8N$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8N_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8NA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8NB" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8NC" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8ND" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8KP" resolve="injectDependencies" />
                <node concept="3cmrfG" id="5XU7UUGb8NE" role="2XxRq1">
                  <property role="3cmrfH" value="5" />
                </node>
                <node concept="37vLTw" id="5HxjapvTdAj" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb8Nu" resolve="listeners" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="2ZXSOCt7Q9a" role="3cqZAp">
          <node concept="2GrKxI" id="2ZXSOCt7Q9b" role="2Gsz3X">
            <property role="TrG5h" value="listener" />
          </node>
          <node concept="37vLTw" id="2ZXSOCt7Q9c" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb8Nu" resolve="listeners" />
          </node>
          <node concept="3clFbS" id="2ZXSOCt7Q9d" role="2LFqv$">
            <node concept="3clFbF" id="2ZXSOCt7Q9e" role="3cqZAp">
              <node concept="2OqwBi" id="2ZXSOCt7Q9f" role="3clFbG">
                <node concept="2GrUjf" id="2ZXSOCt7Q9g" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="2ZXSOCt7Q9b" resolve="listener" />
                </node>
                <node concept="liA8E" id="2ZXSOCt7Q9h" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="2ZXSOCt7Q9i" role="3cqZAp">
              <node concept="2OqwBi" id="2ZXSOCt7Q9j" role="3clFbG">
                <node concept="2GrUjf" id="2ZXSOCt7Q9k" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="2ZXSOCt7Q9b" resolve="listener" />
                </node>
                <node concept="liA8E" id="2ZXSOCt7Q9l" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="2ZXSOCt7Q9m" role="3cqZAp">
              <node concept="2YIFZM" id="2ZXSOCt7Q9n" role="3clFbG">
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2GrUjf" id="2ZXSOCt7Q9o" role="37wK5m">
                  <ref role="2Gs0qQ" node="2ZXSOCt7Q9b" resolve="listener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2ZXSOCt7Q9p" role="3cqZAp">
          <node concept="2OqwBi" id="2ZXSOCt7Q9q" role="3clFbG">
            <node concept="2OqwBi" id="2ZXSOCt7Q9r" role="2Oq$k0">
              <node concept="37vLTw" id="2ZXSOCt7Q9s" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8N_" resolve="injector" />
              </node>
              <node concept="liA8E" id="2ZXSOCt7Q9t" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="2ZXSOCt7Q9u" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2ZXSOCt7Q9v" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="2ZXSOCt7Q9w" role="37wK5m">
                <node concept="2WthIp" id="2ZXSOCt7Q9x" role="2Oq$k0" />
                <node concept="2XshWL" id="2ZXSOCt7Q9y" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="2ZXSOCt7Q9z" role="2XxRq1">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <node concept="3VsKOn" id="7sNQp64koiM" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDICreatedEvent" resolve="ICDICreatedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8NR" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8NS" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8NT" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGb8NU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8N_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8NV" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8NW" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8NX" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="5XU7UUGb8NY" role="37wK5m">
                <node concept="2WthIp" id="5XU7UUGb8NZ" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGb8O0" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="5XU7UUGb8O1" role="2XxRq1">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7sNQp64kop2" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDISuspendedEvent" resolve="ICDISuspendedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKzYH4" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8O3" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8O4" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8O5" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8O6" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8Jf" resolve="verifyEventType" />
              <node concept="37vLTw" id="5XU7UUGb8O7" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8Nu" resolve="listeners" />
              </node>
              <node concept="Rm8GO" id="5XU7UUGb8O8" role="2XxRq1">
                <ref role="1Px2BO" node="5XU7UUGbcJE" resolve="CDTUtilClass.ListenerEvents" />
                <ref role="Rm8GQ" node="5XU7UUGbcJJ" resolve="SUSPENDED" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8O9" role="2XxRq1">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Oa" role="1SL9yI">
      <property role="TrG5h" value="exitedEvent" />
      <node concept="3cqZAl" id="5XU7UUGb8Ob" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Oc" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8Oe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Of" role="3cpWs9">
            <property role="TrG5h" value="listeners" />
            <node concept="_YKpA" id="5XU7UUGb8Og" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Oh" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Oi" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb8Oj" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb8Ok" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ol" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Om" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8On" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Oo" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8Op" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8Oq" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8KP" resolve="injectDependencies" />
                <node concept="3cmrfG" id="5XU7UUGb8Or" role="2XxRq1">
                  <property role="3cmrfH" value="5" />
                </node>
                <node concept="37vLTw" id="5HxjapvQZPT" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb8Of" resolve="listeners" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb8Ot" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb8Ou" role="2Gsz3X">
            <property role="TrG5h" value="listener" />
          </node>
          <node concept="37vLTw" id="5HxjapvTdPQ" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb8Of" resolve="listeners" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb8Ow" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb8Ox" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8Oy" role="3clFbG">
                <node concept="2GrUjf" id="5XU7UUGb8Oz" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb8Ou" resolve="listener" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8O$" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb8O_" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8OA" role="3clFbG">
                <node concept="2GrUjf" id="5XU7UUGb8OB" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb8Ou" resolve="listener" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8OC" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:19PyD1iNNbN" resolve="exited" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb8OD" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGb8OE" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="2GrUjf" id="5XU7UUGb8OF" role="37wK5m">
                  <ref role="2Gs0qQ" node="5XU7UUGb8Ou" resolve="listener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8OG" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8OH" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8OI" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZDF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Om" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8OK" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8OL" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8OM" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="5XU7UUGb8ON" role="37wK5m">
                <node concept="2WthIp" id="5XU7UUGb8OO" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGb8OP" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="5XU7UUGb8OQ" role="2XxRq1">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7sNQp64koyL" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDICreatedEvent" resolve="ICDICreatedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8OS" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8OT" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8OU" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTe2P" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Om" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8OW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8OX" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8OY" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2OqwBi" id="5XU7UUGb8OZ" role="37wK5m">
                <node concept="2WthIp" id="5XU7UUGb8P0" role="2Oq$k0" />
                <node concept="2XshWL" id="5XU7UUGb8P1" role="2OqNvi">
                  <ref role="2WH_rO" node="5XU7UUGb8Ku" resolve="createArrayFromEvent" />
                  <node concept="2YIFZM" id="5XU7UUGb8P2" role="2XxRq1">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="7sNQp64koGm" role="37wK5m">
                      <ref role="3VsUkX" to="d5bg:~ICDIExitedEvent" resolve="ICDIExitedEvent" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7W4QWPKzYFa" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8P4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8P5" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb8P6" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb8P7" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8Jf" resolve="verifyEventType" />
              <node concept="37vLTw" id="5HxjapvTdFe" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb8Of" resolve="listeners" />
              </node>
              <node concept="Rm8GO" id="5XU7UUGb8P9" role="2XxRq1">
                <ref role="1Px2BO" node="5XU7UUGbcJE" resolve="CDTUtilClass.ListenerEvents" />
                <ref role="Rm8GQ" node="5XU7UUGbcJG" resolve="DETACHED" />
              </node>
              <node concept="3cmrfG" id="5XU7UUGb8Pa" role="2XxRq1">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8Pb">
    <property role="TrG5h" value="SessionAccess" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGb8Pc" role="1SL9yI">
      <property role="TrG5h" value="accessBeforeCreation" />
      <node concept="3cqZAl" id="5XU7UUGb8Pd" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Pe" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJw2JMJ" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJw2JMK" role="3cpWs9">
            <property role="TrG5h" value="backendProvider" />
            <node concept="3uibUv" id="4jk7wJw2JML" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJw2JMM" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="10Nm6u" id="4jk7wJw2JMN" role="37wK5m" />
              <node concept="2YIFZM" id="4jk7wJw2JXp" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="3VsKOn" id="4jk7wJw2JZZ" role="37wK5m">
                  <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Pf" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Pg" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8Ph" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Pi" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8Pj" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8Pk" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8R$" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJw2K3p" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJw2JMK" resolve="backendProvider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Pl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Pm" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb8Pn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Po" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdsy" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Pg" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Pq" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Pr" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8Ps" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8Pt" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8Pu" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8Pv" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZc8" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Pm" resolve="sessionAccessor" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Px" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8Py" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8Pz" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8P$" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8P_" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8PA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Pm" resolve="sessionAccessor" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8PB" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsTYy" resolve="getSession" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8PC" role="1SL9yI">
      <property role="TrG5h" value="accessAfterInitialization" />
      <node concept="3cqZAl" id="5XU7UUGb8PD" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8PE" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8PZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Q0" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="5XU7UUGb8Q1" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Q2" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Q3" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="4jk7wJvHcGR" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvHcGS" role="3cpWs9">
            <property role="TrG5h" value="backendProvider" />
            <node concept="3uibUv" id="4jk7wJvHcGO" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvHcGT" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="10Nm6u" id="4jk7wJvHcGU" role="37wK5m" />
              <node concept="37vLTw" id="4jk7wJvHcGV" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGb8Q0" resolve="sessionMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8PF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8PG" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8PH" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8PI" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8PJ" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8PK" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8R$" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJw2JBU" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJvHcGS" resolve="backendProvider" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8PL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8PM" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb8PN" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8PO" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8PP" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8PG" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8PQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8PR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="4jk7wJvHdMv" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8Q4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Q5" role="3cpWs9">
            <property role="TrG5h" value="targets" />
            <node concept="10Q1$e" id="5XU7UUGb8Q6" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Q7" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Q8" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGb8Q9" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGb8Qa" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGb8Qb" role="3$I4v7">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGb8Qc" role="3$_nBY">
                  <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Qd" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8Qe" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8Qf" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Qg" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
            <node concept="AH0OO" id="5XU7UUGb8Qh" role="37vLTJ">
              <node concept="3cmrfG" id="5XU7UUGb8Qi" role="AHEQo">
                <property role="3cmrfH" value="0" />
              </node>
              <node concept="37vLTw" id="5HxjapvTd$D" role="AHHXb">
                <ref role="3cqZAo" node="5XU7UUGb8Q5" resolve="targets" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Qk" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Ql" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Qm" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Qn" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb8Qo" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZnT" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Q0" resolve="sessionMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8Qq" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDISession.getTargets():org.eclipse.cdt.debug.core.cdi.model.ICDITarget[]" resolve="getTargets" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8Qr" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="10QFUN" id="5XU7UUGb8Qs" role="37wK5m">
                  <node concept="10Q1$e" id="5XU7UUGb8Qt" role="10QFUM">
                    <node concept="3uibUv" id="5XU7UUGb8Qu" role="10Q1$1">
                      <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
                    </node>
                  </node>
                  <node concept="37vLTw" id="5HxjapvTdE1" role="10QFUP">
                    <ref role="3cqZAo" node="5XU7UUGb8Q5" resolve="targets" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Qw" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Qx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Qy" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Qz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Q$" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8Q_" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb8QA" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Q0" resolve="sessionMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8QB" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDISession.getEventManager():org.eclipse.cdt.debug.core.cdi.ICDIEventManager" resolve="getEventManager" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8QC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb8QD" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGb8QE" role="37wK5m">
                    <ref role="3VsUkX" to="ys5c:~ICDIEventManager" resolve="ICDIEventManager" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8QF" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8R3" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8R4" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8R5" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGb8R6" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Q0" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Rb" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Rc" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Rd" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8PM" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Re" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75Lcu" resolve="setBinaryPath" />
              <node concept="Xl_RD" id="5XU7UUGb8Rf" role="37wK5m">
                <property role="Xl_RC" value="program.exe" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8Rg" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Rh" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTd_J" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8PM" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Rj" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS73" resolve="createSession" />
              <node concept="10Nm6u" id="4jk7wJvHiS_" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8Rk" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb8Rl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Rm" role="3cpWs9">
            <property role="TrG5h" value="sessionAccesor" />
            <node concept="3uibUv" id="5XU7UUGb8Rn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Ro" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZqw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8PG" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Rq" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Rr" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8Rs" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Rt" role="2Hmdds">
            <node concept="37vLTw" id="5XU7UUGb8Ru" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Rm" resolve="sessionAccesor" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Rv" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8Rw" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Rx" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdIe" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Rm" resolve="sessionAccesor" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Rz" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsTYy" resolve="getSession" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8R$" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="4jk7wJvHiTL" role="3clF46">
        <property role="TrG5h" value="factory" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="4jk7wJvHjMK" role="1tU5fm">
          <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8R_" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb8RA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8RB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8RC" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGb8RD" role="1tU5fm">
              <ref role="3uigEE" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8RE" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb8RF" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8RL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8RM" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8RN" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8RO" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGb8RP" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb8RQ" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb8RR" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb8RS" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb8RT" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb8RU" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb8RV" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb8RW" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb8RX" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8RY" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8RZ" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8S0" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8S1" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTeoT" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8RC" resolve="eventManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbJ" id="4jk7wJvHncB" role="3cqZAp">
                          <node concept="3clFbS" id="4jk7wJvHncE" role="3clFbx">
                            <node concept="3clFbF" id="5XU7UUGb8Sf" role="3cqZAp">
                              <node concept="2OqwBi" id="5XU7UUGb8Sg" role="3clFbG">
                                <node concept="3P9mCS" id="5XU7UUGb8Sh" role="2Oq$k0">
                                  <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                                  <node concept="3VsKOn" id="4jk7wJvHlve" role="37wK5m">
                                    <ref role="3VsUkX" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
                                  </node>
                                </node>
                                <node concept="liA8E" id="5XU7UUGb8Sj" role="2OqNvi">
                                  <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                  <node concept="37vLTw" id="4jk7wJvHlfK" role="37wK5m">
                                    <ref role="3cqZAo" node="4jk7wJvHiTL" resolve="factory" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node concept="3y3z36" id="4jk7wJvHocL" role="3clFbw">
                            <node concept="10Nm6u" id="4jk7wJvHo$8" role="3uHU7w" />
                            <node concept="37vLTw" id="4jk7wJvHnJb" role="3uHU7B">
                              <ref role="3cqZAo" node="4jk7wJvHiTL" resolve="factory" />
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8S3" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8S4" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8S5" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8S6" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8S7" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8S8" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTXj" resolve="WSessionWrapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8S9" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8Sa" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8Sb" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8Sc" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8Sd" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8Se" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTXj" resolve="WSessionWrapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8Sl" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8Sm" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8Sn" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8So" role="37wK5m">
                                <ref role="3VsUkX" to="33ny:~TimerTask" resolve="TimerTask" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8Sp" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb8Sq" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGb8Sr" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fmVzkS6VOx" resolve="WaitingAttachTimerTask" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8Ss" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8St" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8Su" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8Sv" role="37wK5m">
                                <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8Sw" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTeny" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8RC" resolve="eventManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb8Sy" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTek0" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb8RM" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8S$">
    <property role="TrG5h" value="SessionCreation" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="2XrIbr" id="5XU7UUGb8S_" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="37vLTG" id="4jk7wJvA7ij" role="3clF46">
        <property role="TrG5h" value="backendProviderFactory" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="4jk7wJvA9lZ" role="1tU5fm">
          <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb8SA" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb8SB" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8SC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8SD" role="3cpWs9">
            <property role="TrG5h" value="eventManager" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGb8SE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8SF" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8SG" role="37wK5m">
                <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8SM" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8SN" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8SO" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8SP" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGb8SQ" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb8SR" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb8SS" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb8ST" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb8SU" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb8SV" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb8SW" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb8SX" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb8SY" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8SZ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8T0" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8T1" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:35BAyTmWWpU" resolve="IWEventManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8T2" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTduf" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8SD" resolve="eventManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="4jk7wJvA5pw" role="3cqZAp">
                          <node concept="2OqwBi" id="4jk7wJvA6fG" role="3clFbG">
                            <node concept="1rXfSq" id="4jk7wJvA5pu" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="4jk7wJvA5Z0" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
                              </node>
                            </node>
                            <node concept="liA8E" id="4jk7wJvA7bI" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="4jk7wJvAduI" role="37wK5m">
                                <ref role="3cqZAo" node="4jk7wJvA7ij" resolve="backendProviderFactory" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8T4" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8T5" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8T6" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8T7" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8T8" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb8T9" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTXj" resolve="WSessionWrapperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8Tg" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8Th" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8Ti" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8Tj" role="37wK5m">
                                <ref role="3VsUkX" to="33ny:~TimerTask" resolve="TimerTask" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8Tk" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb8Tl" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGb8Tm" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fmVzkS6VOx" resolve="WaitingAttachTimerTask" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb8Tn" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb8To" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb8Tp" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb8Tq" role="37wK5m">
                                <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb8Tr" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvQZ_$" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8SD" resolve="eventManager" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb8Tt" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZdA" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb8SN" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8Tv" role="1SL9yI">
      <property role="TrG5h" value="createSessionWithoutBinaryPath" />
      <node concept="3cqZAl" id="5XU7UUGb8Tw" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Tx" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJvBl1j" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvBl1k" role="3cpWs9">
            <property role="TrG5h" value="backendFactory" />
            <node concept="3uibUv" id="4jk7wJvBl1l" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvH45b" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="10Nm6u" id="4jk7wJvH4dx" role="37wK5m" />
              <node concept="2YIFZM" id="4jk7wJvBmGZ" role="37wK5m">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                <node concept="3VsKOn" id="4jk7wJvBmQW" role="37wK5m">
                  <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Ty" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Tz" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8T$" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8T_" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8TA" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8TB" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8S_" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJvBmZq" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJvBl1k" resolve="backendFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8TC" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8TD" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb8TE" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8TF" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8TG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Tz" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8TH" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8TI" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8TJ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8TK" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8TL" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8TM" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb8TN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8TD" resolve="sessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8TO" role="2OqNvi">
                <ref role="37wK5l" to="x30c:xyAZe75Lcu" resolve="setBinaryPath" />
                <node concept="10Nm6u" id="5XU7UUGb8TP" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb8TQ" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8TR" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3YEMYtJqVhC" resolve="WCreatingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8TS" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8TT" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZ9e" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8TD" resolve="sessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8TV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS73" resolve="createSession" />
                <node concept="10Nm6u" id="4jk7wJvCGsm" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8TW" role="1SL9yI">
      <property role="TrG5h" value="createValidSession" />
      <node concept="3cqZAl" id="5XU7UUGb8TX" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8TY" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJvBEM9" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvBEMa" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <node concept="3uibUv" id="4jk7wJvBEM8" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvBEMb" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="4jk7wJvBEMc" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="4jk7wJvByHl" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvByHm" role="3cpWs9">
            <property role="TrG5h" value="backendFactory" />
            <node concept="3uibUv" id="4jk7wJvByHn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvH57m" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="10Nm6u" id="4jk7wJvByHr" role="37wK5m" />
              <node concept="37vLTw" id="4jk7wJvBEMd" role="37wK5m">
                <ref role="3cqZAo" node="4jk7wJvBEMa" resolve="sessionMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Uo" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Up" role="3cpWs9">
            <property role="TrG5h" value="targets" />
            <node concept="10Q1$e" id="5XU7UUGb8Uq" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb8Ur" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb8Us" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGb8Ut" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGb8Uu" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGb8Uv" role="3$I4v7">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGb8Uw" role="3$_nBY">
                  <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb8UD" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8UE" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8UF" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8UG" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb8UH" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb8UI" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb8UJ" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb8UK" role="2Oq$k0">
                        <ref role="3cqZAo" node="4jk7wJvBEMa" resolve="sessionMock" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb8UL" role="2OqNvi">
                        <ref role="37wK5l" to="ys5c:~ICDISession.getTargets():org.eclipse.cdt.debug.core.cdi.model.ICDITarget[]" resolve="getTargets" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8UM" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvQZvv" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb8Up" resolve="targets" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb8UR" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8US" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8UT" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8UU" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8UV" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8UW" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8UX" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8UY" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb8UZ" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8UT" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8V0" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8V1" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8V2" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8V3" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8V4" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8V5" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZsk" role="2Oq$k0">
                    <ref role="3cqZAo" node="4jk7wJvBEMa" resolve="sessionMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb8V7" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDISession.getEventManager():org.eclipse.cdt.debug.core.cdi.ICDIEventManager" resolve="getEventManager" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8V8" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb8V9" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGb8Va" role="37wK5m">
                    <ref role="3VsUkX" to="ys5c:~ICDIEventManager" resolve="ICDIEventManager" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8Vb" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8TZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8U0" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8U1" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8U2" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8U3" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8U4" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8S_" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJvC1FE" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJvByHm" resolve="backendFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8U5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8U6" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb8U7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8U8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZi3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8U0" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Ua" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8Ub" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Ux" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGb8Uy" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8Uz" role="37vLTx">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8U$" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
            <node concept="AH0OO" id="5XU7UUGb8U_" role="37vLTJ">
              <node concept="3cmrfG" id="5XU7UUGb8UA" role="AHEQo">
                <property role="3cmrfH" value="0" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZy0" role="AHHXb">
                <ref role="3cqZAo" node="5XU7UUGb8Up" resolve="targets" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8UC" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8Vz" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8V$" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGb8V_" role="37wK5m">
              <ref role="3cqZAo" node="4jk7wJvBEMa" resolve="sessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8VD" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8VE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8VF" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdXb" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8U6" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8VH" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75Lcu" resolve="setBinaryPath" />
              <node concept="Xl_RD" id="5XU7UUGb8VI" role="37wK5m">
                <property role="Xl_RC" value="program.exe" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb8VJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8VK" role="2Hmdds">
            <node concept="37vLTw" id="5HxjapvTdyE" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8U6" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8VM" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS73" resolve="createSession" />
              <node concept="10Nm6u" id="4jk7wJvCmVk" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8VN" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb8VO" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvQZx5" role="37wK5m">
              <ref role="3cqZAo" node="4jk7wJvBEMa" resolve="sessionMock" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8VT" role="1SL9yI">
      <property role="TrG5h" value="handleIOExceptionWhileCreatingSession" />
      <node concept="3cqZAl" id="5XU7UUGb8VU" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8VV" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJvCrSH" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvCrSI" role="3cpWs9">
            <property role="TrG5h" value="backendFactory" />
            <node concept="3uibUv" id="4jk7wJvCrSJ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvH5Aw" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="2ShNRf" id="4jk7wJvCudc" role="37wK5m">
                <node concept="1pGfFk" id="4jk7wJvCvxQ" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~Exception.&lt;init&gt;()" resolve="Exception" />
                </node>
              </node>
              <node concept="10Nm6u" id="4jk7wJvCwc_" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8VW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8VX" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8VY" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8VZ" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8W0" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8W1" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8S_" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJvCsKa" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJvCrSI" resolve="backendFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8W2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8W3" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb8W4" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8W5" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTelK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8VX" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8W7" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8W8" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Wg" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Wh" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Wi" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8W3" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Wj" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75Lcu" resolve="setBinaryPath" />
              <node concept="Xl_RD" id="5XU7UUGb8Wk" role="37wK5m">
                <property role="Xl_RC" value="program.exe" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8WK" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb8WL" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8WM" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3YEMYtJqVhC" resolve="WCreatingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8WN" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8WO" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZJp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8W3" resolve="sessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8WQ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS73" resolve="createSession" />
                <node concept="10Nm6u" id="4jk7wJvCyjL" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb8WU" role="1SL9yI">
      <property role="TrG5h" value="handleMIExceptionWhileCreatingSession" />
      <node concept="3cqZAl" id="5XU7UUGb8WV" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8WW" role="3clF47">
        <node concept="3cpWs8" id="4jk7wJvAnv4" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvAnv5" role="3cpWs9">
            <property role="TrG5h" value="backendProviderFactory" />
            <node concept="3uibUv" id="4jk7wJvAnv6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2YIFZM" id="4jk7wJvH65y" role="33vP2m">
              <ref role="37wK5l" node="4jk7wJvH01L" resolve="getBackendProviderThatReturns" />
              <ref role="1Pybhc" node="4jk7wJvGH$i" resolve="BackendProviderFactoryUtil" />
              <node concept="2ShNRf" id="4jk7wJvC_5E" role="37wK5m">
                <node concept="1pGfFk" id="4jk7wJvCAmI" role="2ShVmc">
                  <ref role="37wK5l" to="wyt6:~Exception.&lt;init&gt;()" resolve="Exception" />
                </node>
              </node>
              <node concept="10Nm6u" id="4jk7wJvC$uK" role="37wK5m" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8WX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8WY" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb8WZ" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8X0" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb8X1" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb8X2" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8S_" resolve="injectDependencies" />
                <node concept="37vLTw" id="4jk7wJvAs6J" role="2XxRq1">
                  <ref role="3cqZAo" node="4jk7wJvAnv5" resolve="backendProviderFactory" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8X3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8X4" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb8X5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8X6" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb8X7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8WY" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8X8" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb8X9" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Xh" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Xi" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZse" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8X4" resolve="sessionCreator" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Xk" role="2OqNvi">
              <ref role="37wK5l" to="x30c:xyAZe75Lcu" resolve="setBinaryPath" />
              <node concept="Xl_RD" id="5XU7UUGb8Xl" role="37wK5m">
                <property role="Xl_RC" value="program.exe" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb8XM" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb8XN" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb8XO" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3YEMYtJqVhC" resolve="WCreatingSessionFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb8XP" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb8XQ" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdWI" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8X4" resolve="sessionCreator" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8XS" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS73" resolve="createSession" />
                <node concept="10Nm6u" id="4jk7wJvCGo$" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb8XW">
    <property role="TrG5h" value="SessionStates" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="2XrIbr" id="5XU7UUGb8XX" role="1qtyYc">
      <property role="TrG5h" value="takeSessionIntoStateSuspended" />
      <node concept="3cqZAl" id="5XU7UUGb8XY" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8XZ" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGb8Y0" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Y1" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Y2" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Yi" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Y3" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Y4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Y5" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Y6" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Yi" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Y7" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Y8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Y9" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Ya" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Yi" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Yb" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8Yc" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb8Yd" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb8Ye" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMEo" resolve="WSessionSuspendedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Yf" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb8Yg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Yk" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Yh" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Yi" role="3clF46">
        <property role="TrG5h" value="eventListener" />
        <node concept="3uibUv" id="5XU7UUGb8Yj" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Yk" role="3clF46">
        <property role="TrG5h" value="sessionContext" />
        <node concept="3uibUv" id="5XU7UUGb8Yl" role="1tU5fm">
          <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8Ym" role="1qtyYc">
      <property role="TrG5h" value="takeSessionIntoStateAttached" />
      <node concept="3cqZAl" id="5XU7UUGb8Yn" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8Yo" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGb8Yp" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Yq" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8Yr" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Yz" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Ys" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8Yt" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb8Yu" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb8Yv" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNM$Z" resolve="WSessionAttachedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8Yw" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb8Yx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8Y_" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8Yy" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Yz" role="3clF46">
        <property role="TrG5h" value="eventListener" />
        <node concept="3uibUv" id="5XU7UUGb8Y$" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8Y_" role="3clF46">
        <property role="TrG5h" value="sessionContext" />
        <node concept="3uibUv" id="5XU7UUGb8YA" role="1tU5fm">
          <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8YB" role="1qtyYc">
      <property role="TrG5h" value="takeSessionIntoStateRunning" />
      <node concept="3cqZAl" id="5XU7UUGb8YC" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb8YD" role="3clF47">
        <node concept="3clFbF" id="5XU7UUGb8YE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8YF" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8YG" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8YS" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8YH" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8YI" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8YJ" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8YK" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8YS" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8YL" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb8YM" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb8YN" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb8YO" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMAt" resolve="WSessionRunningState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb8YP" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb8YQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb8YU" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb8YR" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8YS" role="3clF46">
        <property role="TrG5h" value="eventListener" />
        <node concept="3uibUv" id="5XU7UUGb8YT" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb8YU" role="3clF46">
        <property role="TrG5h" value="sessionContext" />
        <node concept="3uibUv" id="5XU7UUGb8YV" role="1tU5fm">
          <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb8YW" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGb8YX" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb8YY" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb8YZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Z0" role="3cpWs9">
            <property role="3TUv4t" value="true" />
            <property role="TrG5h" value="sessionWrapper" />
            <node concept="3uibUv" id="5XU7UUGb8Z1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTXj" resolve="WSessionWrapperImpl" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Z2" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb8Z3" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3YEMYtJsTXj" resolve="WSessionWrapperImpl" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Z4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Z5" role="3cpWs9">
            <property role="TrG5h" value="targetMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGb8Z6" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Z7" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="2npj2sqSSCj" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb8Z9" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb8Za" role="3cpWs9">
            <property role="TrG5h" value="miSessionMock" />
            <node concept="3uibUv" id="7sNQp64kADz" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb8Zc" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7sNQp64kDTk" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7T88Na6h9KC" role="3cqZAp">
          <node concept="3cpWsn" id="7T88Na6h9KD" role="3cpWs9">
            <property role="TrG5h" value="sessionMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="2npj2sqT5KN" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="2YIFZM" id="7T88Na6h9KF" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2npj2sqT8Ja" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="2LUqqGRnVXu" role="3cqZAp">
          <node concept="3cpWsn" id="2LUqqGRnVXv" role="3cpWs9">
            <property role="TrG5h" value="processMock" />
            <node concept="3uibUv" id="2LUqqGRnVXw" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Process" resolve="Process" />
            </node>
            <node concept="2YIFZM" id="2LUqqGRnVXz" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2LUqqGRnVX_" role="37wK5m">
                <ref role="3VsUkX" to="wyt6:~Process" resolve="Process" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRo7KD" role="3cqZAp" />
        <node concept="3clFbH" id="2LUqqGRo7KC" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8ZG" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8ZH" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb8ZI" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb8Za" resolve="miSessionMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8ZJ" role="2OqNvi">
              <ref role="37wK5l" to="ys5c:~ICDISession.terminate():void" resolve="terminate" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8ZK" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8ZL" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8ZM" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8ZN" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRo7KA" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb8ZZ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb900" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb901" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb902" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb903" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZcm" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Z0" resolve="sessionWrapper" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb905" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFzk" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb906" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTdP_" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb8Z5" resolve="targetMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb908" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7T88Na6h383" role="3cqZAp">
          <node concept="2OqwBi" id="7T88Na6h384" role="3clFbG">
            <node concept="2OqwBi" id="7T88Na6h385" role="2Oq$k0">
              <node concept="2YIFZM" id="7T88Na6h386" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7T88Na6h387" role="37wK5m">
                  <node concept="37vLTw" id="7T88Na6h388" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Z0" resolve="sessionWrapper" />
                  </node>
                  <node concept="liA8E" id="7T88Na6h8Oq" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3YEMYtJsTYF" resolve="getSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7T88Na6h38a" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="7T88Na6hkeT" role="37wK5m">
                  <ref role="3cqZAo" node="7T88Na6h9KD" resolve="sessionMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7T88Na6h38c" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7T88Na6gXIi" role="3cqZAp" />
        <node concept="3clFbH" id="2LUqqGRo7K_" role="3cqZAp" />
        <node concept="3clFbF" id="2LUqqGRnW08" role="3cqZAp">
          <node concept="2OqwBi" id="2LUqqGRnW0m" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdPM" role="2Oq$k0">
              <ref role="3cqZAo" node="2LUqqGRnVXv" resolve="processMock" />
            </node>
            <node concept="liA8E" id="2LUqqGRnW0r" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Process.destroy():void" resolve="destroy" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2LUqqGRo1C1" role="3cqZAp">
          <node concept="2OqwBi" id="2LUqqGRo1Cz" role="3clFbG">
            <node concept="2YIFZM" id="2LUqqGRo1C3" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="2LUqqGRo1CC" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRo7K$" role="3cqZAp" />
        <node concept="SfApY" id="5XU7UUGb8Ze" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb8Zf" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb8Zg" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb8Zh" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGb8Zi" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8Z5" resolve="targetMock" />
                </node>
                <node concept="liA8E" id="5XU7UUGb8Zj" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIExecuteResume.resume(boolean):void" resolve="resume" />
                  <node concept="2YIFZM" id="5XU7UUGb8Zk" role="37wK5m">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.anyBoolean():boolean" resolve="anyBoolean" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb8Zl" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb8Zm" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb8Zn" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb8Zo" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb8Zp" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb8Zq" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb8Zr" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvQZEf" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb8Zm" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb8Zt" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Zu" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Zv" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb8Zw" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGb8Zx" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb8Zy" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb8Zz" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb8Z$" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb8Z_" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb8ZA" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb8ZB" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb8Z5" resolve="targetMock" />
                  </node>
                  <node concept="liA8E" id="2npj2sqT5uW" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDISessionObject.getSession():org.eclipse.cdt.debug.core.cdi.ICDISession" resolve="getSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb8ZD" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="2npj2sqT5A5" role="37wK5m">
                  <ref role="3cqZAo" node="7T88Na6h9KD" resolve="sessionMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb8ZF" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2LUqqGRnVXD" role="3cqZAp">
          <node concept="2OqwBi" id="2LUqqGRnVXE" role="3clFbG">
            <node concept="2YIFZM" id="2LUqqGRnVXF" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
              <node concept="2OqwBi" id="2LUqqGRnVXG" role="37wK5m">
                <node concept="37vLTw" id="5HxjapvQZP9" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb8Z5" resolve="targetMock" />
                </node>
                <node concept="liA8E" id="2LUqqGRnVXL" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDITarget.getProcess():java.lang.Process" resolve="getProcess" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="2LUqqGRnVXM" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
              <node concept="37vLTw" id="2LUqqGRnVXR" role="37wK5m">
                <ref role="3cqZAo" node="2LUqqGRnVXv" resolve="processMock" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRnXju" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb909" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb90a" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGb90b" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Za" resolve="miSessionMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2LUqqGRnW03" role="3cqZAp">
          <node concept="2YIFZM" id="2LUqqGRnW04" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdUH" role="37wK5m">
              <ref role="3cqZAo" node="2LUqqGRnVXv" resolve="processMock" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRnXiW" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb90c" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb90d" role="3cpWs9">
            <property role="TrG5h" value="listeners" />
            <property role="3TUv4t" value="true" />
            <node concept="_YKpA" id="5XU7UUGb90e" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb90f" role="_ZDj9">
                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb90g" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb90h" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb90i" role="HW$YZ">
                  <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="5XU7UUGb90j" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb90k" role="2LFqv$">
            <node concept="3clFbF" id="5XU7UUGb90l" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb90m" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTeqZ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb90d" resolve="listeners" />
                </node>
                <node concept="TSZUe" id="5XU7UUGb90o" role="2OqNvi">
                  <node concept="2YIFZM" id="5XU7UUGb90p" role="25WWJ7">
                    <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="3VsKOn" id="5XU7UUGb90q" role="37wK5m">
                      <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="5XU7UUGb90r" role="1Duv9x">
            <property role="TrG5h" value="i" />
            <node concept="10Oyi0" id="5XU7UUGb90s" role="1tU5fm" />
            <node concept="3cmrfG" id="5XU7UUGb90t" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="5XU7UUGb90u" role="1Dwp0S">
            <node concept="3cmrfG" id="5XU7UUGb90v" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="37vLTw" id="5XU7UUGb90w" role="3uHU7B">
              <ref role="3cqZAo" node="5XU7UUGb90r" resolve="i" />
            </node>
          </node>
          <node concept="3uNrnE" id="5XU7UUGb90x" role="1Dwrff">
            <node concept="37vLTw" id="5XU7UUGb90y" role="2$L3a6">
              <ref role="3cqZAo" node="5XU7UUGb90r" resolve="i" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb90z" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb90$" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb90_" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb90A" role="33vP2m">
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <node concept="2ShNRf" id="5XU7UUGb90B" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb90C" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb90D" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb90E" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb90F" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb90G" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb90H" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb90I" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb90J" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb90K" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb90L" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2npj2sqT15v" role="37wK5m">
                                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb90N" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvQZ8q" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8Z5" resolve="targetMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb90P" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb90Q" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb90R" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb90S" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb90T" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb90U" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zsab" resolve="WSessionImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb90V" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb90W" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb90X" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb90Y" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb90Z" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb910" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zsab" resolve="WSessionImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb911" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb912" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb913" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb914" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb915" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb916" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zsab" resolve="WSessionImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb917" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb918" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb919" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb91a" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb91b" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb91c" role="37wK5m">
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <node concept="3VsKOn" id="5XU7UUGb91d" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2fjdrD4FGh2" resolve="IWListener" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb91e" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb91f" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb91g" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb91h" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb91i" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTejf" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8Z0" resolve="sessionWrapper" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb91k" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb91l" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb91m" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb91n" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb91o" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvQZyA" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb8Z0" resolve="sessionWrapper" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb91q" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb91r" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb91s" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="2ZXSOCt7Lzo" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2ZXSOCt6IBX" resolve="IWTimerTaskFactory" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb91u" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb91v" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="2ZXSOCt7LzD" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:2ZXSOCt6IBX" resolve="IWTimerTaskFactory" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb91x" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb91y" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb91z" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb91$" role="37wK5m">
                                <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb91_" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb91A" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:1tVZDsLozjz" resolve="WEventManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="6ZadL_R4Dos" role="3cqZAp">
                          <node concept="2OqwBi" id="6ZadL_R4DoN" role="3clFbG">
                            <node concept="3P9mCS" id="6ZadL_R4Dot" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="7W4QWPK$PBZ" role="37wK5m">
                                <ref role="3VsUkX" to="5zyv:~Executor" resolve="Executor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="6ZadL_R4DoW" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="29so9VbMK9E" role="37wK5m">
                                <ref role="1Pybhc" to="wyx4:~MoreExecutors" resolve="MoreExecutors" />
                                <ref role="37wK5l" to="wyx4:~MoreExecutors.sameThreadExecutor():com.google.common.util.concurrent.ListeningExecutorService" resolve="sameThreadExecutor" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3cpWs8" id="29so9VbMK9F" role="3cqZAp">
                          <node concept="3cpWsn" id="29so9VbMK9G" role="3cpWs9">
                            <property role="TrG5h" value="multibinding" />
                            <node concept="3uibUv" id="29so9VbMK9H" role="1tU5fm">
                              <ref role="3uigEE" to="drde:~Multibinder" resolve="Multibinder" />
                              <node concept="3uibUv" id="5XU7UUGb91E" role="11_B2D">
                                <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                            <node concept="2YIFZM" id="29so9VbMK9I" role="33vP2m">
                              <ref role="37wK5l" to="drde:~Multibinder.newSetBinder(com.google.inject.Binder,java.lang.Class):com.google.inject.multibindings.Multibinder" resolve="newSetBinder" />
                              <ref role="1Pybhc" to="drde:~Multibinder" resolve="Multibinder" />
                              <node concept="3P9mCS" id="29so9VbMK9J" role="37wK5m">
                                <ref role="37wK5l" to="ez3t:~AbstractModule.binder():com.google.inject.Binder" resolve="binder" />
                              </node>
                              <node concept="3VsKOn" id="5XU7UUGb91H" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="2Gpval" id="5XU7UUGb91I" role="3cqZAp">
                          <node concept="2GrKxI" id="5XU7UUGb91J" role="2Gsz3X">
                            <property role="TrG5h" value="listener" />
                          </node>
                          <node concept="37vLTw" id="5HxjapvQZAt" role="2GsD0m">
                            <ref role="3cqZAo" node="5XU7UUGb90d" resolve="listeners" />
                          </node>
                          <node concept="3clFbS" id="5XU7UUGb91L" role="2LFqv$">
                            <node concept="3clFbF" id="5XU7UUGb91M" role="3cqZAp">
                              <node concept="2OqwBi" id="5XU7UUGb91N" role="3clFbG">
                                <node concept="2OqwBi" id="5XU7UUGb91O" role="2Oq$k0">
                                  <node concept="37vLTw" id="5HxjapvTdrT" role="2Oq$k0">
                                    <ref role="3cqZAo" node="29so9VbMK9G" resolve="multibinding" />
                                  </node>
                                  <node concept="liA8E" id="5XU7UUGb91Q" role="2OqNvi">
                                    <ref role="37wK5l" to="drde:~Multibinder.addBinding():com.google.inject.binder.LinkedBindingBuilder" resolve="addBinding" />
                                  </node>
                                </node>
                                <node concept="liA8E" id="5XU7UUGb91R" role="2OqNvi">
                                  <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                                  <node concept="2GrUjf" id="5XU7UUGb91S" role="37wK5m">
                                    <ref role="2Gs0qQ" node="5XU7UUGb91J" resolve="listener" />
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb91T" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb91U" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb91V" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb91W" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb8Z0" resolve="sessionWrapper" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb91X" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGb91Y" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGb91Z" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb90$" resolve="injector" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="7sNQp64K6O4" role="Sfmx6">
        <ref role="3uigEE" to="ys5c:~CDIException" resolve="CDIException" />
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb920" role="1SL9yI">
      <property role="TrG5h" value="invalidOperationsOnWaitingAttach" />
      <node concept="3cqZAl" id="5XU7UUGb921" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb922" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb923" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb924" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb925" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb926" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb927" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb928" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb929" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb92a" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb92b" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb92c" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZm5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92e" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92f" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb92g" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb92h" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb92i" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb92j" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTd_5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92l" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92m" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb92n" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb92o" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb92p" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb92q" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ8P" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92s" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92t" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb92u" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb92v" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb92w" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb92x" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeo5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92z" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92$" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb92_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb92A" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb92B" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb92C" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb92D" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92E" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92F" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb92G" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb92H" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb92I" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="2OqwBi" id="5XU7UUGb92J" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvQZua" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb924" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92L" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb92M" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb92N" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb92O" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb92P" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb92Q" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb92R" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb92S" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdCL" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb92a" resolve="session" />
              </node>
              <node concept="liA8E" id="5XU7UUGb92U" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbJ" id="5XU7UUGb92V" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb92W" role="3clFbx">
            <node concept="3$NI$W" id="5XU7UUGb92X" role="3cqZAp">
              <node concept="3uibUv" id="5XU7UUGb92Y" role="3$Qgvv">
                <ref role="3uigEE" to="x30c:FgCpCwgcwf" resolve="WUnsupportedFeatureException" />
              </node>
              <node concept="3clFbF" id="5XU7UUGb92Z" role="3$Oloe">
                <node concept="2OqwBi" id="5XU7UUGb930" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvQZET" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb92a" resolve="session" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb932" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="2YIFZM" id="5XU7UUGb933" role="3clFbw">
            <ref role="1Pybhc" to="x30c:5Y9SYQfaRDt" resolve="Util" />
            <ref role="37wK5l" to="x30c:5j3dzoqNfaA" resolve="isRunningOnMac" />
          </node>
          <node concept="9aQIb" id="5XU7UUGb934" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGb935" role="9aQI4">
              <node concept="3$NI$W" id="5XU7UUGb936" role="3cqZAp">
                <node concept="3uibUv" id="5XU7UUGb937" role="3$Qgvv">
                  <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
                </node>
                <node concept="3clFbF" id="5XU7UUGb938" role="3$Oloe">
                  <node concept="2OqwBi" id="5XU7UUGb939" role="3clFbG">
                    <node concept="37vLTw" id="5HxjapvQZht" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb92a" resolve="session" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb93b" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb93c" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb93d" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb93e" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb93f" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb93g" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb92h" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93h" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb93i" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb93j" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb93k" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb93l" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZCh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb92h" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93n" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb93o" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb93p" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb93q" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMy7" resolve="WSessionWaitingAttachedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93r" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb93s" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb92o" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93t" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb93u" role="1SL9yI">
      <property role="TrG5h" value="fromWaitingAttachToAttached" />
      <node concept="3cqZAl" id="5XU7UUGb93v" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb93w" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb93x" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb93y" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb93z" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93$" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb93_" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb93A" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb93B" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb93C" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb93D" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93E" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdLo" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93G" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb93H" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb93I" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb93J" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb93K" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93L" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ_g" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93N" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb93O" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb93P" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb93Q" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb93R" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93S" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZR9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb93U" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb93V" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb93W" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb93X" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb93Y" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb93Z" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTel2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb941" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb942" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb943" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb944" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb945" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb946" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZcZ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb948" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb949" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb94a" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb94b" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb94c" role="37wK5m">
              <node concept="37vLTw" id="5XU7UUGb94d" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93y" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb94e" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb94f" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb94g" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb94h" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb94i" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb94j" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb93J" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb94k" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb94l" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb94m" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb94n" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNM$Z" resolve="WSessionAttachedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb94o" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb94p" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb93Q" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb94q" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb97K" role="1SL9yI">
      <property role="TrG5h" value="fromWaitingAttachToDetachedWithoutExplicitTermination" />
      <node concept="3cqZAl" id="5XU7UUGb97L" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb97M" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb97N" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb97O" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb97P" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb97Q" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb97R" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb97S" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb97T" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb97U" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb97V" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb97W" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZB7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb97Y" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb97Z" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb980" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb981" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb982" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb983" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTenu" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb985" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb986" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb987" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb988" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb989" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb98a" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZcu" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb98c" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb98d" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb98e" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb98f" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb98g" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb98h" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb98i" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb98j" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb98k" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb98l" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb98m" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb98n" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb98o" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb98p" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb98q" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb98r" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb98s" role="3cqZAp" />
        <node concept="3clFbH" id="7T88Na62SAM" role="3cqZAp" />
        <node concept="3clFbH" id="7T88Na62TeI" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb98t" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb98u" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb98v" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb98w" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb98x" role="37wK5m">
                  <node concept="2OqwBi" id="5XU7UUGb98y" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvTe1J" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb98f" resolve="sessionAccessor" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb98$" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb98_" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.isTerminated():boolean" resolve="isTerminated" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb98A" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3clFbT" id="5XU7UUGb98B" role="37wK5m">
                  <property role="3clFbU" value="true" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb98C" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb98D" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb98E" role="3cpWs9">
            <property role="TrG5h" value="process" />
            <node concept="3uibUv" id="5XU7UUGb98F" role="1tU5fm">
              <ref role="3uigEE" to="wyt6:~Process" resolve="Process" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb98G" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb98H" role="37wK5m">
                <ref role="3VsUkX" to="wyt6:~Process" resolve="Process" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb98I" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb98J" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb98K" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb98E" resolve="process" />
            </node>
            <node concept="liA8E" id="5XU7UUGb98L" role="2OqNvi">
              <ref role="37wK5l" to="wyt6:~Process.destroy():void" resolve="destroy" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb98M" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb98N" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb98O" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGb98P" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb98Q" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb98R" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb98S" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb98T" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb98U" role="37wK5m">
                  <node concept="2OqwBi" id="5XU7UUGb98V" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvQZIQ" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb98f" resolve="sessionAccessor" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb98X" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb98Y" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDITarget.getProcess():java.lang.Process" resolve="getProcess" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb98Z" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb990" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb98E" resolve="process" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb991" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb992" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb993" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZNV" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb98E" resolve="process" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb995" role="3cqZAp" />
        <node concept="1X3_iC" id="5GwePVE7t7I" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb996" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb997" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb998" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb999" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGb99a" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb99b" role="2Oq$k0">
                      <node concept="37vLTw" id="5HxjapvQZRQ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb99d" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb99e" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb99f" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb99g" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb99h" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb99i" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb99j" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb99k" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb99l" role="37wK5m">
              <node concept="37vLTw" id="5XU7UUGb99m" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb97O" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb99n" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb99o" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb99p" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb99q" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb99r" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb99s" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb981" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb99t" role="2OqNvi">
              <ref role="37wK5l" to="x30c:19PyD1iNNbN" resolve="exited" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb99u" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb99v" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb99w" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMFu" resolve="WSessionDetachedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb99x" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb99y" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb988" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb99z" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb99$" role="1SL9yI">
      <property role="TrG5h" value="invalidOperationsOnAttached" />
      <node concept="3cqZAl" id="5XU7UUGb99_" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb99A" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb99B" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb99C" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb99D" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb99E" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb99F" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb99G" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb99H" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb99I" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb99J" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb99K" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe4v" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb99M" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb99N" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb99O" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb99P" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb99Q" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb99R" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ_a" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb99T" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb99U" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb99V" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb99W" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb99X" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb99Y" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb99Z" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9a0" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9a1" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9a2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9a3" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9a4" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9a5" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZOz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9a7" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9a8" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9a9" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9aa" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9ab" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ac" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZwT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ae" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9af" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9ag" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9ah" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9ai" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9aj" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8Ym" resolve="takeSessionIntoStateAttached" />
              <node concept="37vLTw" id="5XU7UUGb9ak" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb99P" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5XU7UUGb9al" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb99W" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7J" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9am" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9an" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9ao" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9ap" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGb9aq" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9ar" role="2Oq$k0">
                      <node concept="37vLTw" id="5XU7UUGb9as" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9at" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9au" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9av" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9aw" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9ax" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9ay" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="2LUqqGRnUq2" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9az" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9a$" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9a_" role="37wK5m">
              <node concept="37vLTw" id="5XU7UUGb9aA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99C" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9aB" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9aC" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9aD" role="3cqZAp" />
        <node concept="3clFbJ" id="5XU7UUGb9aK" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9aL" role="3clFbx">
            <node concept="3$NI$W" id="5XU7UUGb9aM" role="3cqZAp">
              <node concept="3uibUv" id="5XU7UUGb9aN" role="3$Qgvv">
                <ref role="3uigEE" to="x30c:FgCpCwgcwf" resolve="WUnsupportedFeatureException" />
              </node>
              <node concept="3clFbF" id="5XU7UUGb9aO" role="3$Oloe">
                <node concept="2OqwBi" id="5XU7UUGb9aP" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvQZ5g" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb99I" resolve="session" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9aR" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="2YIFZM" id="5XU7UUGb9aS" role="3clFbw">
            <ref role="37wK5l" to="x30c:5j3dzoqNfaA" resolve="isRunningOnMac" />
            <ref role="1Pybhc" to="x30c:5Y9SYQfaRDt" resolve="Util" />
          </node>
          <node concept="9aQIb" id="5XU7UUGb9aT" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGb9aU" role="9aQI4">
              <node concept="3$NI$W" id="5XU7UUGb9aV" role="3cqZAp">
                <node concept="3uibUv" id="5XU7UUGb9aW" role="3$Qgvv">
                  <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
                </node>
                <node concept="3clFbF" id="5XU7UUGb9aX" role="3$Oloe">
                  <node concept="2OqwBi" id="5XU7UUGb9aY" role="3clFbG">
                    <node concept="37vLTw" id="5HxjapvTdrH" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb99I" resolve="session" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9b0" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9b1" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9b2" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9b3" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9b4" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZid" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99P" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9b6" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9bd" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9be" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9bf" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9bg" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdZA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99I" resolve="session" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bi" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcuh" resolve="attach" />
                <node concept="2ShNRf" id="4jk7wJvF57o" role="37wK5m">
                  <node concept="HV5vD" id="4jk7wJvF57p" role="2ShVmc">
                    <ref role="HV5vE" node="4jk7wJvEQiM" resolve="DebuggerSettingsDummy" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9bl" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9bm" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9bn" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9bo" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9bp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99P" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bq" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9br" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9bs" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9bt" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNM$Z" resolve="WSessionAttachedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9bu" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9bv" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb99W" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bw" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9bx" role="1SL9yI">
      <property role="TrG5h" value="fromAttachedToRunning" />
      <node concept="3cqZAl" id="5XU7UUGb9by" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9bz" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9b$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9b_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9bA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9bB" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9bC" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9bD" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9bE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9bF" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9bG" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9bH" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZHG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bJ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9bK" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9bL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9bM" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb9bN" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9bO" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZvB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bQ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9bR" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9bS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9bT" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb9bU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9bV" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdTN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9bX" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9bY" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9bZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9c0" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9c1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9c2" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ8b" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9c4" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9c5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9c6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9c7" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9c8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9c9" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9ca" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9cb" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9cc" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9cd" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9ce" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9cf" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9cg" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8XX" resolve="takeSessionIntoStateSuspended" />
              <node concept="37vLTw" id="5XU7UUGb9ch" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9bM" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5HxjapvTdV9" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9bT" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7K" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9cj" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9ck" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9cl" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9cm" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGb9cn" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9co" role="2Oq$k0">
                      <node concept="37vLTw" id="5HxjapvQZBZ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9cq" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9cr" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9cs" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9ct" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9cu" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9cv" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9cw" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9cx" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9cy" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvQZ8R" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9b_" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9c$" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9c_" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9cA" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9cB" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9cC" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb9cD" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9bF" resolve="session" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9cE" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9cF" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9cG" role="3clFbG">
            <node concept="liA8E" id="5XU7UUGb9cH" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
            </node>
            <node concept="37vLTw" id="5HxjapvQZhX" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9bM" resolve="eventListener" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9cJ" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9cK" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9cL" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMAt" resolve="WSessionRunningState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9cM" role="2ZW6bz">
              <node concept="37vLTw" id="5HxjapvTdPl" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9bT" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9cO" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9cP" role="1SL9yI">
      <property role="TrG5h" value="invalidOperationsOnRunning" />
      <node concept="3cqZAl" id="5XU7UUGb9cQ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9cR" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9cS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9cT" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9cU" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9cV" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9cW" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9cX" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9cY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9cZ" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9d0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9d1" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdAw" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9d3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9d4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9d5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9d6" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb9d7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9d8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZJU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9da" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9db" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9dc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9dd" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb9de" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9df" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9dg" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9dh" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9di" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9dj" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9dk" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9dl" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9dm" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9dn" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9do" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9dp" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9dq" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9dr" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9ds" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9dt" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZex" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9dv" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9dw" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9dx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9dy" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9dz" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9d$" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8YB" resolve="takeSessionIntoStateRunning" />
              <node concept="37vLTw" id="5HxjapvTdEd" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9d6" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5HxjapvTdYZ" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9dd" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7L" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9dB" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9dC" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9dD" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9dE" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGb9dF" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9dG" role="2Oq$k0">
                      <node concept="37vLTw" id="5HxjapvQZKA" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9dI" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9dJ" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9dK" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9dL" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9dM" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9dN" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9dO" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9dP" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9dQ" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvTeqR" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cT" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9dS" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9dT" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9dU" role="3cqZAp" />
        <node concept="3$NI$W" id="5XU7UUGb9dV" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9dW" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9dX" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9dY" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZxA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cZ" resolve="session" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9e0" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9e1" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9e2" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9e3" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9e4" role="3clFbG">
              <node concept="liA8E" id="5XU7UUGb9e5" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZzN" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9d6" resolve="eventListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9e7" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9e8" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9e9" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9ea" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9eb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9cZ" resolve="session" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ec" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcuh" resolve="attach" />
                <node concept="2ShNRf" id="4jk7wJvEZIP" role="37wK5m">
                  <node concept="HV5vD" id="4jk7wJvF54M" role="2ShVmc">
                    <ref role="HV5vE" node="4jk7wJvEQiM" resolve="DebuggerSettingsDummy" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9ef" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9eg" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9eh" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9ei" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvQZHE" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9d6" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ek" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9el" role="3cqZAp" />
        <node concept="3vwNmj" id="5XU7UUGb9em" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9en" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9eo" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMAt" resolve="WSessionRunningState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ep" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9eq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9dd" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9er" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9es" role="1SL9yI">
      <property role="TrG5h" value="fromRunningToSuspended" />
      <node concept="3cqZAl" id="5XU7UUGb9et" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9eu" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9ev" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9ew" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9ex" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ey" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9ez" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9e$" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9e_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9eA" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9eB" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9eC" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ5c" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9eE" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9eF" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9eG" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9eH" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb9eI" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9eJ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZnr" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9eL" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9eM" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9eN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9eO" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb9eP" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9eQ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe2e" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9eS" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9eT" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9eU" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9eV" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9eW" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9eX" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdtQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9eZ" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9f0" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9f1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9f2" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9f3" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9f4" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTejs" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9f6" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9f7" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9f8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9f9" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9fa" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9fb" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8YB" resolve="takeSessionIntoStateRunning" />
              <node concept="37vLTw" id="5HxjapvTdHr" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9eH" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5XU7UUGb9fd" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9eO" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7M" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9fe" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9ff" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9fg" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9fh" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGb9fi" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9fj" role="2Oq$k0">
                      <node concept="37vLTw" id="5XU7UUGb9fk" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9fl" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9fm" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9fn" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9fo" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9fp" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9fq" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9fr" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9fs" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9ft" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9fu" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9fv" role="2Oq$k0">
                  <node concept="37vLTw" id="5XU7UUGb9fw" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9fx" role="2OqNvi">
                    <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                    <node concept="3VsKOn" id="5XU7UUGb9fy" role="37wK5m">
                      <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9fz" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDISuspend.suspend():void" resolve="suspend" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9f$" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9f_" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9fA" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9fB" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9fC" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9fD" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9fE" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9fF" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9f_" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9fG" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9fH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9fI" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGb9fJ" role="2Oq$k0">
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9fK" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9fL" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9fM" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9fN" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvTdsA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ew" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9fP" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9fQ" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9fR" role="3cqZAp" />
        <node concept="3clFbJ" id="5XU7UUGb9fS" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9fT" role="3clFbx">
            <node concept="3clFbF" id="5XU7UUGb9fU" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9fV" role="3clFbG">
                <node concept="37vLTw" id="5XU7UUGb9fW" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9eA" resolve="session" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9fX" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9fY" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9fZ" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdYN" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9eH" resolve="eventListener" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9g1" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
                </node>
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGb9g2" role="3cqZAp">
              <node concept="2ZW3vV" id="5XU7UUGb9g3" role="3vwVQn">
                <node concept="3uibUv" id="5XU7UUGb9g4" role="2ZW6by">
                  <ref role="3uigEE" to="x30c:19PyD1iNMEo" resolve="WSessionSuspendedState" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGb9g5" role="2ZW6bz">
                  <node concept="37vLTw" id="5HxjapvQZsU" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9eO" resolve="sessionContext" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9g7" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3fqX7Q" id="5XU7UUGb9g8" role="3clFbw">
            <node concept="2YIFZM" id="5XU7UUGb9g9" role="3fr31v">
              <ref role="37wK5l" to="x30c:5j3dzoqNfaA" resolve="isRunningOnMac" />
              <ref role="1Pybhc" to="x30c:5Y9SYQfaRDt" resolve="Util" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9hQ" role="1SL9yI">
      <property role="TrG5h" value="invalidOperationsOnSuspended" />
      <node concept="3cqZAl" id="5XU7UUGb9hR" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9hS" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9hT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9hU" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9hV" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9hW" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9hX" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9hY" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9hZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9i0" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9i1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9i2" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdZ8" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9i4" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9i5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9i6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9i7" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb9i8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9i9" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeob" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ib" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9ic" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9id" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9ie" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb9if" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ig" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdPt" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ii" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9ij" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9ik" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9il" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9im" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9in" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9io" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ip" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9iq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9ir" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9is" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9it" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9iu" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdWE" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9iw" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9ix" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9iy" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9iz" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9i$" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9i_" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8XX" resolve="takeSessionIntoStateSuspended" />
              <node concept="37vLTw" id="5XU7UUGb9iA" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9i7" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZGo" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9ie" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7N" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9iC" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9iD" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9iE" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9iF" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGb9iG" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9iH" role="2Oq$k0">
                      <node concept="37vLTw" id="5HxjapvTd$r" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9iJ" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9iK" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9iL" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9iM" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9iN" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9iO" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9iP" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9iQ" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9iR" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvQZk7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9hU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9iT" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9iU" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9iV" role="3cqZAp" />
        <node concept="3clFbJ" id="5XU7UUGb9iW" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9iX" role="3clFbx">
            <node concept="3$NI$W" id="5XU7UUGb9iY" role="3cqZAp">
              <node concept="3uibUv" id="5XU7UUGb9iZ" role="3$Qgvv">
                <ref role="3uigEE" to="x30c:FgCpCwgcwf" resolve="WUnsupportedFeatureException" />
              </node>
              <node concept="3clFbF" id="5XU7UUGb9j0" role="3$Oloe">
                <node concept="2OqwBi" id="5XU7UUGb9j1" role="3clFbG">
                  <node concept="37vLTw" id="5HxjapvQZpY" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9i0" resolve="session" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9j3" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="2YIFZM" id="5XU7UUGb9j4" role="3clFbw">
            <ref role="1Pybhc" to="x30c:5Y9SYQfaRDt" resolve="Util" />
            <ref role="37wK5l" to="x30c:5j3dzoqNfaA" resolve="isRunningOnMac" />
          </node>
          <node concept="9aQIb" id="5XU7UUGb9j5" role="9aQIa">
            <node concept="3clFbS" id="5XU7UUGb9j6" role="9aQI4">
              <node concept="3$NI$W" id="5XU7UUGb9j7" role="3cqZAp">
                <node concept="3uibUv" id="5XU7UUGb9j8" role="3$Qgvv">
                  <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
                </node>
                <node concept="3clFbF" id="5XU7UUGb9j9" role="3$Oloe">
                  <node concept="2OqwBi" id="5XU7UUGb9ja" role="3clFbG">
                    <node concept="37vLTw" id="5XU7UUGb9jb" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9i0" resolve="session" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9jc" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:5I6yYB8zcnD" resolve="suspend" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9jd" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9je" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9jf" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9jg" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdLu" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9i7" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ji" role="2OqNvi">
                <ref role="37wK5l" to="x30c:5Y9SYQfb$z4" resolve="suspended" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9jj" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9jk" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:5I6yYB8zsbE" resolve="WSessionCommandFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9jl" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9jm" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9jn" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9i0" resolve="session" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9jo" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3gwY0Fagcuh" resolve="attach" />
                <node concept="2ShNRf" id="4jk7wJvF59C" role="37wK5m">
                  <node concept="HV5vD" id="4jk7wJvF59D" role="2ShVmc">
                    <ref role="HV5vE" node="4jk7wJvEQiM" resolve="DebuggerSettingsDummy" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9jr" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9js" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalStateException" resolve="IllegalStateException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9jt" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9ju" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeqb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9i7" resolve="eventListener" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9jw" role="2OqNvi">
                <ref role="37wK5l" to="x30c:3YEMYtJsS6_" resolve="attached" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9jx" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9jy" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9jz" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMEo" resolve="WSessionSuspendedState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9j$" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9j_" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9ie" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9jA" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9jB" role="1SL9yI">
      <property role="TrG5h" value="fromSuspendedToRunning" />
      <node concept="3cqZAl" id="5XU7UUGb9jC" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9jD" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9jE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9jF" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9jG" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9jH" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9jI" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9jJ" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb8YW" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9jK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9jL" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9jM" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcny" resolve="IWSession" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9jN" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdzO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9jP" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9jQ" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcny" resolve="IWSession" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9jR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9jS" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGb9jT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9jU" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTd_D" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9jW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9jX" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS6r" resolve="IWCDTEventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9jY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9jZ" role="3cpWs9">
            <property role="TrG5h" value="sessionContext" />
            <node concept="3uibUv" id="5XU7UUGb9k0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9k1" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZxM" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9k3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9k4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:19PyD1iNMu$" resolve="IWSessionContext" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9k5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9k6" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9k7" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9k8" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZoJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ka" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9kb" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9kc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9kd" role="3cpWs9">
            <property role="TrG5h" value="sessionCreator" />
            <node concept="3uibUv" id="5XU7UUGb9ke" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9kf" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe31" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9kh" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9ki" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsS71" resolve="IWSessionCreator" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9kj" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9kk" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9kl" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9km" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb8XX" resolve="takeSessionIntoStateSuspended" />
              <node concept="37vLTw" id="5XU7UUGb9kn" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9jS" resolve="eventListener" />
              </node>
              <node concept="37vLTw" id="5HxjapvTe2m" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9jZ" resolve="sessionContext" />
              </node>
            </node>
          </node>
        </node>
        <node concept="1X3_iC" id="5GwePVE7t7O" role="lGtFl">
          <property role="3V$3am" value="statement" />
          <property role="3V$3ak" value="f3061a53-9226-4cc5-a443-f952ceaf5816/1068580123136/1068581517665" />
          <node concept="3clFbF" id="5XU7UUGb9kp" role="8Wnug">
            <node concept="2OqwBi" id="5XU7UUGb9kq" role="3clFbG">
              <node concept="2OqwBi" id="5XU7UUGb9kr" role="2Oq$k0">
                <node concept="2YIFZM" id="5XU7UUGb9ks" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGb9kt" role="37wK5m">
                    <node concept="2OqwBi" id="5XU7UUGb9ku" role="2Oq$k0">
                      <node concept="37vLTw" id="5XU7UUGb9kv" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9kw" role="2OqNvi">
                        <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                        <node concept="3VsKOn" id="5XU7UUGb9kx" role="37wK5m">
                          <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                        </node>
                      </node>
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9ky" role="2OqNvi">
                      <ref role="37wK5l" to="6pen:~Target.isRunning():boolean" resolve="isRunning" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9kz" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="3clFbT" id="5XU7UUGb9k$" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9k_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9kA" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9kB" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9kC" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9kD" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvTdz2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jF" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9kF" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9kG" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9kH" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9kI" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9kJ" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvQZ4$" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9jL" resolve="session" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9kL" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5I6yYB8zcnI" resolve="resume" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9kM" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9kN" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb9kO" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9jS" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9kP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:5Y9SYQfb$z8" resolve="resumed" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9kQ" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9kR" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9kS" role="2ZW6by">
              <ref role="3uigEE" to="x30c:19PyD1iNMAt" resolve="WSessionRunningState" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9kT" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9kU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9jZ" resolve="sessionContext" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9kV" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2s4sWbmeg6R" resolve="getState" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb9mF">
    <property role="TrG5h" value="Stepper" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGb9mG" role="1SL9yI">
      <property role="TrG5h" value="stepOver" />
      <node concept="3cqZAl" id="5XU7UUGb9mH" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9mI" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9mJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9mK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9mL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9mM" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9mN" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9mO" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9mP" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9mQ" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <node concept="3uibUv" id="5XU7UUGb9mR" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9mS" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdDK" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9mK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9mU" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9mV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9mW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9mX" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9mY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9mZ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdMT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9mK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9n1" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9n2" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9n3" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9n4" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb9n5" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9mX" resolve="stepper" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9n6" role="2OqNvi">
              <ref role="37wK5l" to="x30c:7n6Wve7WZzE" resolve="stepOver" />
              <node concept="3cmrfG" id="5XU7UUGb9n7" role="37wK5m">
                <property role="3cmrfH" value="2" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9n8" role="1SL9yI">
      <property role="TrG5h" value="stepOverWithInvalidLineNumber" />
      <node concept="3cqZAl" id="5XU7UUGb9n9" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9na" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9nb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9nc" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9nd" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ne" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9nf" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9ng" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9nh" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9ni" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <node concept="3uibUv" id="5XU7UUGb9nj" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9nk" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdXs" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9nc" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9nm" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9nn" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9no" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9np" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9nq" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9nr" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9ns" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9nc" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9nt" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9nu" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9nv" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9nw" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9nx" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9ny" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdBp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9np" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9n$" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7n6Wve7WZzE" resolve="stepOver" />
                <node concept="3cmrfG" id="5XU7UUGb9n_" role="37wK5m">
                  <property role="3cmrfH" value="-1" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9nA" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9nB" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9nC" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9nD" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdEz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9np" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9nF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7n6Wve7WZzE" resolve="stepOver" />
                <node concept="3cmrfG" id="5XU7UUGb9nG" role="37wK5m">
                  <property role="3cmrfH" value="0" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9nH" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromTargetDuringStepOver" />
      <node concept="3cqZAl" id="5XU7UUGb9nI" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9nJ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9nK" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9nL" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9nM" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9nN" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9nO" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9nP" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9nQ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9nR" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9nS" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9nT" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZpp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9nL" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9nV" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9nW" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9nX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9nY" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9nZ" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9o0" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdz8" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9nL" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9o2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9o3" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9o4" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9o5" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9o6" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9o7" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZgj" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9nY" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9o9" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIExecuteStep.stepOver(int):void" resolve="stepOver" />
                  <node concept="3cmrfG" id="5XU7UUGb9oa" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9ob" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9oc" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9od" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9oe" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9of" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9og" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9oh" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvQZC3" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9oc" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9oj" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9ok" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9ol" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9om" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9on" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9oo" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGb9op" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9oq" role="2ShVmc">
                    <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9or" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9os" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9ot" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZte" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9nY" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9ov" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb9ow" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9ox" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9oy" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9nR" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9oz" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7n6Wve7WZzE" resolve="stepOver" />
                <node concept="3cmrfG" id="5XU7UUGb9o$" role="37wK5m">
                  <property role="3cmrfH" value="1" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb9o_" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3$1iqG0sfOc" resolve="WSteppingFailedException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9oA" role="1SL9yI">
      <property role="TrG5h" value="stepInto" />
      <node concept="3cqZAl" id="5XU7UUGb9oB" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9oC" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9oD" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9oE" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9oF" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9oG" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9oH" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9oI" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9oJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9oK" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9oL" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9oM" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ5e" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9oE" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9oO" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9oP" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9oQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9oR" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdFR" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9oK" resolve="stepper" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9oT" role="2OqNvi">
              <ref role="37wK5l" to="x30c:3EzwjLBWHBS" resolve="stepIn" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9oU" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromTargetDuringStepInto" />
      <node concept="3cqZAl" id="5XU7UUGb9oV" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9oW" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9oX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9oY" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9oZ" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9p0" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9p1" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9p2" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9p3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9p4" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9p5" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9p6" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9p7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9oY" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9p8" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9p9" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9pa" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9pb" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9pc" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9pd" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe2t" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9oY" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9pf" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9pg" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9ph" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9pi" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9pj" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9pk" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvQZA5" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9pb" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9pm" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIExecuteStep.stepInto(int):void" resolve="stepInto" />
                  <node concept="3cmrfG" id="5XU7UUGb9pn" role="37wK5m">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9po" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9pp" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9pq" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9pr" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9ps" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9pt" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9pu" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTd$B" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9pp" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9pw" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9px" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9py" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9pz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9p$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9p_" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGb9pA" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9pB" role="2ShVmc">
                    <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9pC" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9pD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9pE" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdvW" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9pb" resolve="target" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9pG" role="1SL9yI">
      <property role="TrG5h" value="stepOutFromMain" />
      <node concept="3cqZAl" id="5XU7UUGb9pH" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9pI" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9pJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9pK" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9pL" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9pM" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9pN" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9pO" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9pP" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9pQ" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9pR" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9pS" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZk3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9pK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9pU" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9pV" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9pW" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9pX" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <node concept="3uibUv" id="5XU7UUGb9pY" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9pZ" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe0r" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9pK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9q1" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9q2" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9q3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9q4" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9q5" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9q6" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9q7" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9pK" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9q8" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9q9" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9qa" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9qb" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9qc" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9qd" role="3clFbG">
                <node concept="37vLTw" id="5HxjapvTdHQ" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9q4" resolve="target" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9qf" role="2OqNvi">
                  <ref role="37wK5l" to="n06z:~ICDIExecuteResume.resume(boolean):void" resolve="resume" />
                  <node concept="3clFbT" id="5XU7UUGb9qg" role="37wK5m">
                    <property role="3clFbU" value="false" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9ql" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9qm" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9qn" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9qo" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9qp" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9qq" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9qr" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTduv" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9qm" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9qt" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9qu" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9qv" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9qw" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9qx" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9qy" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9qz" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9q$" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZQv" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9q4" resolve="target" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9qA" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIBreakpointManagement.getBreakpoints():org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpoint[]" resolve="getBreakpoints" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9qB" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="2ShNRf" id="5XU7UUGb9qC" role="37wK5m">
                      <node concept="3$_iS1" id="5XU7UUGb9qD" role="2ShVmc">
                        <node concept="3$GHV9" id="5XU7UUGb9qE" role="3$GQph">
                          <node concept="3cmrfG" id="5XU7UUGb9qF" role="3$I4v7">
                            <property role="3cmrfH" value="0" />
                          </node>
                        </node>
                        <node concept="3uibUv" id="5XU7UUGb9qG" role="3$_nBY">
                          <ref role="3uigEE" to="n06z:~ICDIBreakpoint" resolve="ICDIBreakpoint" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9qH" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9qI" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9qJ" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9qK" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9qL" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9qM" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9qN" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9qO" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9qP" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9qJ" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9qQ" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9qR" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9qS" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9qT" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9qU" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb9up" resolve="createTopFrameForTarget" />
              <node concept="37vLTw" id="5HxjapvTdVi" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9pX" resolve="sessionAccessorMock" />
              </node>
              <node concept="Xl_RD" id="5XU7UUGb9qW" role="2XxRq1">
                <property role="Xl_RC" value="main" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9qX" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9qY" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdTP" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9q4" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7sNQp62Xe5X" role="3cqZAp">
          <node concept="3uibUv" id="7sNQp62Xg3h" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3$1iqG0sfOc" resolve="WSteppingFailedException" />
          </node>
          <node concept="3clFbF" id="7sNQp62Xlg0" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9r1" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdTG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9pQ" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9r3" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2EZD5Qbw6km" resolve="stepOut" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9r4" role="1SL9yI">
      <property role="TrG5h" value="stepOutFromAnotherFunctionThenMain" />
      <node concept="3cqZAl" id="5XU7UUGb9r5" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9r6" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9r7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9r8" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9r9" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ra" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9rb" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9rc" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9rd" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9re" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9rf" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9rg" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZce" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9r8" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ri" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9rj" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9rk" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9rl" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <node concept="3uibUv" id="5XU7UUGb9rm" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9rn" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9ro" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9r8" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9rp" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9rq" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9rr" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9rs" role="3clFbG">
            <node concept="2WthIp" id="5XU7UUGb9rt" role="2Oq$k0" />
            <node concept="2XshWL" id="5XU7UUGb9ru" role="2OqNvi">
              <ref role="2WH_rO" node="5XU7UUGb9up" resolve="createTopFrameForTarget" />
              <node concept="37vLTw" id="5HxjapvQZgn" role="2XxRq1">
                <ref role="3cqZAo" node="5XU7UUGb9rl" resolve="sessionAccessorMock" />
              </node>
              <node concept="Xl_RD" id="5XU7UUGb9rw" role="2XxRq1">
                <property role="Xl_RC" value="getCounter" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9rx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9ry" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9rz" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9r$" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTelv" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9r8" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9rA" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9rB" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9rR" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9rS" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9rT" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9ry" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="7sNQp62XtJu" role="3cqZAp">
          <node concept="3uibUv" id="7sNQp62Xvly" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3$1iqG0sfOc" resolve="WSteppingFailedException" />
          </node>
          <node concept="3clFbF" id="7sNQp62XvKz" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9rV" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9rW" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9re" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9rX" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2EZD5Qbw6km" resolve="stepOut" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9rY" role="1SL9yI">
      <property role="TrG5h" value="exceptionFromTargetDuringStepOut" />
      <node concept="3cqZAl" id="5XU7UUGb9rZ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9s0" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9s1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9s2" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9s3" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9s4" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9s5" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9s6" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9tt" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9s7" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9s8" role="3cpWs9">
            <property role="TrG5h" value="stepper" />
            <node concept="3uibUv" id="5XU7UUGb9s9" role="1tU5fm">
              <ref role="3uigEE" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9sa" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZS2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9s2" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9sc" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9sd" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9se" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9sf" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9sg" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9sh" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9si" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9s2" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9sj" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9sk" role="37wK5m">
                  <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9sl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9sm" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <node concept="3uibUv" id="5XU7UUGb9sn" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9so" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ7r" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9s2" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9sq" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9sr" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9ss" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9st" role="3cpWs9">
            <property role="TrG5h" value="threadMock" />
            <node concept="3uibUv" id="5XU7UUGb9su" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIThread" resolve="ICDIThread" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9sv" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9sw" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIThread" resolve="ICDIThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9sx" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9sy" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9sz" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9s$" role="3clFbG">
                <node concept="2YIFZM" id="5XU7UUGb9s_" role="2Oq$k0">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <node concept="2OqwBi" id="5XU7UUGb9sA" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvTdza" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9sf" resolve="target" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9sC" role="2OqNvi">
                      <ref role="37wK5l" to="n06z:~ICDIThreadGroup.getCurrentThread():org.eclipse.cdt.debug.core.cdi.model.ICDIThread" resolve="getCurrentThread" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9sD" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="5HxjapvTdZE" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGb9st" resolve="threadMock" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3cpWs8" id="5XU7UUGb9sF" role="3cqZAp">
              <node concept="3cpWsn" id="5XU7UUGb9sG" role="3cpWs9">
                <property role="TrG5h" value="stackFrames" />
                <node concept="10Q1$e" id="5XU7UUGb9sH" role="1tU5fm">
                  <node concept="3uibUv" id="5XU7UUGb9sI" role="10Q1$1">
                    <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
                  </node>
                </node>
                <node concept="2ShNRf" id="5XU7UUGb9sJ" role="33vP2m">
                  <node concept="3$_iS1" id="5XU7UUGb9sK" role="2ShVmc">
                    <node concept="3$GHV9" id="5XU7UUGb9sL" role="3$GQph">
                      <node concept="3cmrfG" id="5XU7UUGb9sM" role="3$I4v7">
                        <property role="3cmrfH" value="1" />
                      </node>
                    </node>
                    <node concept="3uibUv" id="5XU7UUGb9sN" role="3$_nBY">
                      <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9sO" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9sP" role="3clFbG">
                <node concept="2YIFZM" id="5XU7UUGb9sQ" role="2Oq$k0">
                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="2OqwBi" id="5XU7UUGb9sR" role="37wK5m">
                    <node concept="37vLTw" id="5HxjapvTemK" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9st" resolve="threadMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9sT" role="2OqNvi">
                      <ref role="37wK5l" to="n06z:~ICDIThread.getStackFrames():org.eclipse.cdt.debug.core.cdi.model.ICDIStackFrame[]" resolve="getStackFrames" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9sU" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                  <node concept="37vLTw" id="5HxjapvQZDR" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGb9sG" resolve="stackFrames" />
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9t0" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9t1" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9t2" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9t3" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9t4" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9t5" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9t6" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvQZNu" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9t1" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9t8" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9t9" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9ta" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9tb" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9tc" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9td" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGb9te" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9tf" role="2ShVmc">
                    <ref role="37wK5l" to="ys5c:~CDIException.&lt;init&gt;()" resolve="CDIException" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9tg" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9th" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9ti" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ4d" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9sf" resolve="target" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9tk" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9tl" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZxI" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9st" resolve="threadMock" />
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9tn" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb9to" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9tp" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9tq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9s8" resolve="stepper" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9tr" role="2OqNvi">
                <ref role="37wK5l" to="x30c:2EZD5Qbw6km" resolve="stepOut" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb9ts" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:3$1iqG0sfOc" resolve="WSteppingFailedException" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9tt" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGb9tu" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb9tv" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9tw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9tx" role="3cpWs9">
            <property role="TrG5h" value="targetMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGb9ty" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9tz" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9t$" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9t_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9tA" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9tB" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9tC" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGb9tD" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb9tE" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb9tF" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb9tG" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb9tH" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb9tI" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb9tJ" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb9tK" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb9tL" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb9tM" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb9tN" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb9tO" role="37wK5m">
                                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb9tP" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5XU7UUGb9tQ" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb9tx" resolve="targetMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb9tR" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb9tS" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb9tT" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb9tU" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb9tV" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="2YIFZM" id="5XU7UUGb9tW" role="37wK5m">
                                <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                <node concept="3VsKOn" id="5XU7UUGb9tX" role="37wK5m">
                                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb9tY" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb9tZ" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb9u0" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb9u1" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:7n6Wve7WZzw" resolve="IWStepper" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb9u2" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb9u3" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:2fjdrD4FF7Q" resolve="WStepperImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9u4" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9u5" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9u6" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9u7" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb9u8" role="37wK5m">
                  <node concept="2OqwBi" id="5XU7UUGb9u9" role="2Oq$k0">
                    <node concept="37vLTw" id="5HxjapvTdGI" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9tA" resolve="injector" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9ub" role="2OqNvi">
                      <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                      <node concept="3VsKOn" id="5XU7UUGb9uc" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9ud" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9ue" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb9uf" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9tx" resolve="targetMock" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9ug" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9uh" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9ui" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="2OqwBi" id="5XU7UUGb9uj" role="37wK5m">
              <node concept="37vLTw" id="5HxjapvQZEX" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9tA" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9ul" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9um" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb9un" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTeqh" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9tA" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9up" role="1qtyYc">
      <property role="TrG5h" value="createTopFrameForTarget" />
      <node concept="37vLTG" id="5XU7UUGb9uq" role="3clF46">
        <property role="TrG5h" value="sessionAccessorMock" />
        <node concept="3uibUv" id="5XU7UUGb9ur" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb9us" role="3clF46">
        <property role="TrG5h" value="functionName" />
        <node concept="17QB3L" id="5XU7UUGb9ut" role="1tU5fm" />
      </node>
      <node concept="3cqZAl" id="5XU7UUGb9uu" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9uv" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9uw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9ux" role="3cpWs9">
            <property role="TrG5h" value="mockedLocator" />
            <node concept="3uibUv" id="5XU7UUGb9uy" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILocator" resolve="ICDILocator" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9uz" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9u$" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILocator" resolve="ICDILocator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9u_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9uA" role="3cpWs9">
            <property role="TrG5h" value="mockedStackFrame" />
            <node concept="3uibUv" id="5XU7UUGb9uB" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9uC" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb9uD" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9uE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9uF" role="3cpWs9">
            <property role="TrG5h" value="mockedThread" />
            <node concept="3uibUv" id="5XU7UUGb9uG" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIThread" resolve="ICDIThread" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9uH" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9uI" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIThread" resolve="ICDIThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9uJ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9uK" role="3cpWs9">
            <property role="TrG5h" value="stackFrameContainer" />
            <node concept="10Q1$e" id="5XU7UUGb9uL" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9uM" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9uN" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeiJ" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9uA" resolve="mockedStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9uP" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9uQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9uR" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9uS" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9uT" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb9uU" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9uV" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9ux" resolve="mockedLocator" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9uW" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDIFunctionLocation.getFunction():java.lang.String" resolve="getFunction" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9uX" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2ShNRf" id="5XU7UUGb9uY" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9uZ" role="2ShVmc">
                    <ref role="37wK5l" to="wyt6:~String.&lt;init&gt;(java.lang.String)" resolve="String" />
                    <node concept="37vLTw" id="5XU7UUGb9v0" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9us" resolve="functionName" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9v1" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9v2" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9v3" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9v4" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9v5" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9v6" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9v7" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9uA" resolve="mockedStackFrame" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9v8" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIStackFrame.getLocator():org.eclipse.cdt.debug.core.cdi.ICDILocator" resolve="getLocator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9v9" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTe3t" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9ux" resolve="mockedLocator" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9vb" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9vc" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9vd" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9ve" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9vf" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb9vg" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9vh" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9uF" resolve="mockedThread" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9vi" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIThread.getStackFrames():org.eclipse.cdt.debug.core.cdi.model.ICDIStackFrame[]" resolve="getStackFrames" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9vj" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb9vk" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9uK" resolve="stackFrameContainer" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9vl" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9vm" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9vn" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9vo" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9vp" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9vq" role="37wK5m">
                  <node concept="2OqwBi" id="5XU7UUGb9vr" role="2Oq$k0">
                    <node concept="37vLTw" id="5XU7UUGb9vs" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9uq" resolve="sessionAccessorMock" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9vt" role="2OqNvi">
                      <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9vu" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIThreadGroup.getCurrentThread():org.eclipse.cdt.debug.core.cdi.model.ICDIThread" resolve="getCurrentThread" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9vv" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb9vw" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9uF" resolve="mockedThread" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9vx" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9vy" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9vz" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9v$" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZCf" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9uF" resolve="mockedThread" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9vA" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9vB" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTepF" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9ux" resolve="mockedLocator" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9vD" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9vE" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdUf" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9uA" resolve="mockedStackFrame" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="5XU7UUGb9vG" role="Sfmx6">
        <ref role="3uigEE" to="ys5c:~CDIException" resolve="CDIException" />
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGb9vH">
    <property role="TrG5h" value="Variables" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGb9vI" role="1SL9yI">
      <property role="TrG5h" value="integralVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9vJ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9vK" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9vL" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9vM" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9vN" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9vO" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9vP" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9vQ" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9vR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9vS" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9vT" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9vU" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdu9" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9vM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9vW" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9vX" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9vY" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9vZ" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9w0" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9w1" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9w2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9vM" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9w3" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9w4" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9w5" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9w6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9w7" role="3cpWs9">
            <property role="TrG5h" value="variable" />
            <node concept="3uibUv" id="7sNQp630KYQ" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9w9" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9wa" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9wb" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Kn" resolve="createPrimitiveLocalVariable" />
                <node concept="2YIFZM" id="5XU7UUGb9wc" role="2XxRq1">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="7sNQp64$NKB" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIIntType" resolve="ICDIIntType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGpVuU" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGpVuV" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGpVuI" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGpVuL" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGpVuW" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGpVuX" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGpVuY" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGpVuZ" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9w7" resolve="variable" />
                </node>
                <node concept="37vLTw" id="3hwpFGpVv0" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9vZ" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9wk" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9wl" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9wm" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZsc" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9vZ" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9wo" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9wp" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9wq" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9wr" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9ws" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9wt" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdKJ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9vS" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9wv" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGq6rB" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGqaO_" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGq5U7" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGpVuV" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9wx" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9wy" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9wz" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9w$" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdPf" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9wq" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9wA" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9wB" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9wC" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9wD" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9wE" role="2ZW6bz">
              <node concept="37vLTw" id="5HxjapvTeo3" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9wq" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9wG" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9wH" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9wI" role="3tpDZA">
            <node concept="37vLTw" id="5HxjapvQZcs" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9w7" resolve="variable" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9wK" role="2OqNvi">
              <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getName():java.lang.String" resolve="getName" />
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9wL" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9wM" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdYc" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9wq" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9wO" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9wP" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9wQ" role="1SL9yI">
      <property role="TrG5h" value="voidVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9wR" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9wS" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9wT" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9wU" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9wV" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9wW" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9wX" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9wY" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9wZ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9x0" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9x1" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9x2" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdUp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9wU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9x4" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9x5" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9x6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9x7" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9x8" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9x9" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdCt" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9wU" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9xb" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9xc" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9xd" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9xe" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9xf" role="3cpWs9">
            <property role="TrG5h" value="variable" />
            <node concept="3uibUv" id="7sNQp64ls26" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9xh" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9xi" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9xj" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Kn" resolve="createPrimitiveLocalVariable" />
                <node concept="2YIFZM" id="5XU7UUGb9xk" role="2XxRq1">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="7sNQp64$ASM" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIVoidType" resolve="ICDIVoidType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGqaWn" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGqaWo" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGqaWp" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGqaWq" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGqaWr" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGqaWs" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGqaWt" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGqaWu" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9xf" resolve="variable" />
                </node>
                <node concept="37vLTw" id="3hwpFGqaWv" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9x7" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9xs" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9xt" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9xu" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9xv" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9x7" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9xw" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb9xx" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9xy" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9xz" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9x$" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9x_" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9xA" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZ85" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9x0" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9xC" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGqpWi" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGqq5g" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGqpCj" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGqaWo" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9xE" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9xF" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9xG" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9xH" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdDz" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9xz" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9xJ" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9xK" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9xL" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9xM" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9xN" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9xO" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9xz" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9xP" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9xQ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9xR" role="3tpDZA">
            <node concept="37vLTw" id="5XU7UUGb9xS" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9xf" resolve="variable" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9xT" role="2OqNvi">
              <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getName():java.lang.String" resolve="getName" />
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9xU" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9xV" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdKU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9xz" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9xX" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9xY" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9xZ" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9y0" role="3tpDZA">
            <property role="Xl_RC" value="123" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9y1" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGb9y2" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGb9y3" role="1eOMHV">
                <node concept="3uibUv" id="5XU7UUGb9y4" role="10QFUM">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGb9y5" role="10QFUP">
                  <node concept="37vLTw" id="5HxjapvTdwj" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9xz" resolve="variables" />
                  </node>
                  <node concept="1uHKPH" id="5XU7UUGb9y7" role="2OqNvi" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9y8" role="2OqNvi">
              <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9y9" role="1SL9yI">
      <property role="TrG5h" value="floatVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9ya" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9yb" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9yc" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9yd" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9ye" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9yf" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9yg" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9yh" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9yi" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9yj" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9yk" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9yl" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZN2" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yd" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9yn" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9yo" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9yp" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9yq" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9yr" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9ys" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTeoR" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yd" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9yu" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9yv" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9yw" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9yx" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9yy" role="3cpWs9">
            <property role="TrG5h" value="variable" />
            <node concept="3uibUv" id="7sNQp64wgxm" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9y$" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9y_" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9yA" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Kn" resolve="createPrimitiveLocalVariable" />
                <node concept="2YIFZM" id="5XU7UUGb9yB" role="2XxRq1">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="7sNQp64$Oc$" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIFloatType" resolve="ICDIFloatType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGqusc" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGqusd" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGquse" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGqusf" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGqusg" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGqush" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGqusi" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGqusj" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9yy" resolve="variable" />
                </node>
                <node concept="37vLTw" id="3hwpFGqusk" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9yq" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9yJ" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9yK" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9yL" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdV3" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9yq" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9yN" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9yO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9yP" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9yQ" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9yR" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9yS" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9yT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yj" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9yU" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGqLv4" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGqPL2" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGqLc5" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGqusd" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9yW" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9yX" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9yY" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9yZ" role="3uHU7B">
              <node concept="37vLTw" id="5XU7UUGb9z0" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yP" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9z1" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9z2" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9z3" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9z4" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9z5" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9z6" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yP" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9z7" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9z8" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9z9" role="3tpDZA">
            <node concept="37vLTw" id="5HxjapvTdxs" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9yy" resolve="variable" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9zb" role="2OqNvi">
              <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getName():java.lang.String" resolve="getName" />
            </node>
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9zc" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9zd" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZ3V" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9yP" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9zf" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9zg" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9zh" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9zi" role="3tpDZA">
            <property role="Xl_RC" value="123" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9zj" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGb9zk" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGb9zl" role="1eOMHV">
                <node concept="3uibUv" id="5XU7UUGb9zm" role="10QFUM">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="2OqwBi" id="5XU7UUGb9zn" role="10QFUP">
                  <node concept="37vLTw" id="5HxjapvTdvG" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9yP" resolve="variables" />
                  </node>
                  <node concept="1uHKPH" id="5XU7UUGb9zp" role="2OqNvi" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9zq" role="2OqNvi">
              <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9zr" role="1SL9yI">
      <property role="TrG5h" value="singleValuePointerVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9zs" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9zt" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9zu" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9zv" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9zw" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9zx" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9zy" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9zz" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9z$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9z_" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9zA" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9zB" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9zC" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9zv" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9zD" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9zE" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9zF" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9zG" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9zH" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9zI" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdTd" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9zv" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9zK" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9zL" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7sNQp64its2" role="3cqZAp" />
        <node concept="3cpWs8" id="7sNQp64ioVS" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp64ioVT" role="3cpWs9">
            <property role="TrG5h" value="value" />
            <node concept="3uibUv" id="7sNQp64ioVU" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
            </node>
            <node concept="2YIFZM" id="7sNQp64ioVV" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64iuwy" role="37wK5m">
                <ref role="3VsUkX" to="o80d:~ICDIPointerValue" resolve="ICDIPointerValue" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9$3" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9$4" role="3cpWs9">
            <property role="TrG5h" value="pointerVar" />
            <node concept="3uibUv" id="7sNQp63Y$jF" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9$6" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9$7" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9$8" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Ix" resolve="createTypeWithChildren" />
                <node concept="2YIFZM" id="5XU7UUGb9$9" role="2XxRq1">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="7sNQp63Y$By" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIPointerType" resolve="ICDIPointerType" />
                  </node>
                </node>
                <node concept="37vLTw" id="7sNQp64iM9U" role="2XxRq1">
                  <ref role="3cqZAo" node="7sNQp64ioVT" resolve="value" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGqW0Q" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGqW0R" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGqW0S" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGqW0T" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGqW0U" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGqW0V" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGqW0W" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGr2fh" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9$4" resolve="pointerVar" />
                </node>
                <node concept="37vLTw" id="3hwpFGqW0Y" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9zG" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9$i" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9$j" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9$k" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdZK" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9zG" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9$m" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9$o" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9$p" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9$q" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9$r" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9$s" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTd$1" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9z_" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9$u" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGr2NW" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGr30G" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGr2sc" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGqW0R" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9$w" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9$x" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9$y" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9$z" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZNk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9$p" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9$_" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9$A" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9$B" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9$C" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXphl" resolve="WPointerVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9$D" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9$E" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9$p" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9$F" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9$G" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9$H" role="3tpDZA">
            <property role="Xl_RC" value="counter" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9$I" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9$J" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZvb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9$p" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9$L" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9$M" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9$N" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9$O" role="3cpWs9">
            <property role="TrG5h" value="pointingValue" />
            <node concept="3uibUv" id="5XU7UUGb9$P" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9$Q" role="33vP2m">
              <node concept="2OqwBi" id="5XU7UUGb9$R" role="2Oq$k0">
                <node concept="1eOMI4" id="5XU7UUGb9$S" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9$T" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9$U" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXphl" resolve="WPointerVariable" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGb9$V" role="10QFUP">
                      <node concept="37vLTw" id="5HxjapvQZC_" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9$p" resolve="variables" />
                      </node>
                      <node concept="1uHKPH" id="5XU7UUGb9$X" role="2OqNvi" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9$Y" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
                </node>
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9$Z" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="2Hmddi" id="5XU7UUGb9_0" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZgX" role="2Hmdds">
            <ref role="3cqZAo" node="5XU7UUGb9$O" resolve="pointingValue" />
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9_2" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9_3" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9_4" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
            </node>
            <node concept="37vLTw" id="5HxjapvTdLJ" role="2ZW6bz">
              <ref role="3cqZAo" node="5XU7UUGb9$O" resolve="pointingValue" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9_6" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9_7" role="3tpDZA">
            <property role="Xl_RC" value="counter" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9_8" role="3tpDZB">
            <node concept="37vLTw" id="5XU7UUGb9_9" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9$O" resolve="pointingValue" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9_a" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9_b" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9_c" role="3tpDZA">
            <property role="Xl_RC" value="123" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9_d" role="3tpDZB">
            <node concept="1eOMI4" id="5XU7UUGb9_e" role="2Oq$k0">
              <node concept="10QFUN" id="5XU7UUGb9_f" role="1eOMHV">
                <node concept="3uibUv" id="5XU7UUGb9_g" role="10QFUM">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="37vLTw" id="5XU7UUGb9_h" role="10QFUP">
                  <ref role="3cqZAo" node="5XU7UUGb9$O" resolve="pointingValue" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9_i" role="2OqNvi">
              <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9_j" role="1SL9yI">
      <property role="TrG5h" value="multiValuePointerVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9_k" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9_l" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9_m" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9_n" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9_o" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9_p" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9_q" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9_r" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9_s" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9_t" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9_u" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9_v" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTep5" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9_n" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9_x" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9_y" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9_z" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9_$" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9__" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9_A" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdIA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9_n" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9_C" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9_D" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9_E" role="3cqZAp" />
        <node concept="3cpWs8" id="7sNQp64ihJp" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp64ihJq" role="3cpWs9">
            <property role="TrG5h" value="value" />
            <node concept="3uibUv" id="7sNQp64ihJr" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
            </node>
            <node concept="2YIFZM" id="7sNQp64ihJs" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64ij5n" role="37wK5m">
                <ref role="3VsUkX" to="o80d:~ICDIPointerValue" resolve="ICDIPointerValue" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9A4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9A5" role="3cpWs9">
            <property role="TrG5h" value="pointerVar" />
            <node concept="3uibUv" id="7sNQp63YyEn" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9A7" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9A8" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9A9" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Ix" resolve="createTypeWithChildren" />
                <node concept="2YIFZM" id="5XU7UUGb9Aa" role="2XxRq1">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="7sNQp63YzIt" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIPointerType" resolve="ICDIPointerType" />
                  </node>
                </node>
                <node concept="37vLTw" id="7sNQp64ikNE" role="2XxRq1">
                  <ref role="3cqZAo" node="7sNQp64ihJq" resolve="value" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGr8ox" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGr8oy" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGr8oz" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGr8o$" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGr8o_" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGr8oA" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGr8oB" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGr8oC" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9A5" resolve="pointerVar" />
                </node>
                <node concept="37vLTw" id="3hwpFGr8oD" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9_$" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Aj" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9Ak" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Al" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTejL" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9_$" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9An" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb9Ao" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9Ap" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Aq" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9Ar" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9As" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9At" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9Au" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9_t" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9Av" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGreUs" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGrfpU" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGreea" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGr8oy" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9Ax" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9Ay" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9Az" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9A$" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvQZBb" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Aq" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9AA" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9AB" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9AC" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9AD" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXphl" resolve="WPointerVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9AE" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9AF" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Aq" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9AG" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9AH" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9AI" role="3tpDZA">
            <property role="Xl_RC" value="counter" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9AJ" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9AK" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvQZnj" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Aq" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9AM" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9AN" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9AO" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9AP" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9AQ" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9AR" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGb9AS" role="2Oq$k0">
                <node concept="1eOMI4" id="5XU7UUGb9AT" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9AU" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9AV" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXphl" resolve="WPointerVariable" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGb9AW" role="10QFUP">
                      <node concept="37vLTw" id="5XU7UUGb9AX" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Aq" resolve="variables" />
                      </node>
                      <node concept="1uHKPH" id="5XU7UUGb9AY" role="2OqNvi" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9AZ" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
                </node>
              </node>
              <node concept="34oBXx" id="5XU7UUGb9B0" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9B1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9B2" role="3cpWs9">
            <property role="TrG5h" value="pointingVariables" />
            <node concept="_YKpA" id="5XU7UUGb9B3" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9B4" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9B5" role="33vP2m">
              <node concept="1eOMI4" id="5XU7UUGb9B6" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGb9B7" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGb9B8" role="10QFUM">
                    <ref role="3uigEE" to="x30c:35BAyTmXphl" resolve="WPointerVariable" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGb9B9" role="10QFUP">
                    <node concept="37vLTw" id="5XU7UUGb9Ba" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9Aq" resolve="variables" />
                    </node>
                    <node concept="1uHKPH" id="5XU7UUGb9Bb" role="2OqNvi" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Bc" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb9Bd" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb9Be" role="2Gsz3X">
            <property role="TrG5h" value="pointingVariable" />
          </node>
          <node concept="37vLTw" id="5XU7UUGb9Bf" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb9B2" resolve="pointingVariables" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb9Bg" role="2LFqv$">
            <node concept="2Hmddi" id="5XU7UUGb9Bh" role="3cqZAp">
              <node concept="37vLTw" id="5HxjapvTdWy" role="2Hmdds">
                <ref role="3cqZAo" node="5XU7UUGb9B2" resolve="pointingVariables" />
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGb9Bj" role="3cqZAp">
              <node concept="2ZW3vV" id="5XU7UUGb9Bk" role="3vwVQn">
                <node concept="3uibUv" id="5XU7UUGb9Bl" role="2ZW6by">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="2GrUjf" id="5XU7UUGb9Bm" role="2ZW6bz">
                  <ref role="2Gs0qQ" node="5XU7UUGb9Be" resolve="pointingVariable" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9Bn" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9Bo" role="3tpDZA">
                <property role="Xl_RC" value="counter" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9Bp" role="3tpDZB">
                <node concept="2GrUjf" id="5XU7UUGb9Bq" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb9Be" resolve="pointingVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9Br" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9Bs" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9Bt" role="3tpDZA">
                <property role="Xl_RC" value="123" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9Bu" role="3tpDZB">
                <node concept="1eOMI4" id="5XU7UUGb9Bv" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9Bw" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9Bx" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                    </node>
                    <node concept="2GrUjf" id="5XU7UUGb9By" role="10QFUP">
                      <ref role="2Gs0qQ" node="5XU7UUGb9Be" resolve="pointingVariable" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Bz" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9B$" role="1SL9yI">
      <property role="TrG5h" value="arrayVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9B_" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9BA" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9BB" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9BC" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9BD" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9BE" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9BF" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9BG" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9BH" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9BI" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9BJ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9BK" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdZp" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9BC" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9BM" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9BN" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9BO" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9BP" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9BQ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9BR" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZOh" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9BC" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9BT" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9BU" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9BV" role="3cqZAp" />
        <node concept="3cpWs8" id="7sNQp64i7Uy" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp64i7Uz" role="3cpWs9">
            <property role="TrG5h" value="value" />
            <node concept="3uibUv" id="7sNQp64i7U$" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
            </node>
            <node concept="2YIFZM" id="7sNQp64i7U_" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7sNQp64iepB" role="37wK5m">
                <ref role="3VsUkX" to="o80d:~ICDIArrayValue" resolve="ICDIArrayValue" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Cl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Cm" role="3cpWs9">
            <property role="TrG5h" value="arrayVar" />
            <node concept="3uibUv" id="7sNQp63Yy21" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Co" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9Cp" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9Cq" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Ix" resolve="createTypeWithChildren" />
                <node concept="2YIFZM" id="5XU7UUGb9Cr" role="2XxRq1">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGb9Cs" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIArrayType" resolve="ICDIArrayType" />
                  </node>
                </node>
                <node concept="37vLTw" id="7sNQp64igi6" role="2XxRq1">
                  <ref role="3cqZAo" node="7sNQp64i7Uz" resolve="value" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGrh1L" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGrh1M" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGrh1N" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGrh1O" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGrh1P" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGrh1Q" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGrh1R" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGrihH" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9Cm" resolve="arrayVar" />
                </node>
                <node concept="37vLTw" id="3hwpFGrh1T" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9BP" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9C$" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9C_" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9CA" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5XU7UUGb9CB" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9BP" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9CC" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9CD" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9CE" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9CF" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9CG" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9CH" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdPU" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9BI" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9CJ" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGrjtG" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGrjXc" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGriLo" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGrh1M" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9CL" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9CM" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9CN" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9CO" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTdOG" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9CE" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9CQ" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9CR" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9CS" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9CT" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXoGH" resolve="WArrayVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9CU" role="2ZW6bz">
              <node concept="37vLTw" id="5HxjapvTd$h" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9CE" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9CW" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9CX" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9CY" role="3tpDZA">
            <property role="Xl_RC" value="counter" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9CZ" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9D0" role="2Oq$k0">
              <node concept="37vLTw" id="5HxjapvTdQQ" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9CE" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9D2" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9D3" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9D4" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9D5" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9D6" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9D7" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGb9D8" role="2Oq$k0">
                <node concept="1eOMI4" id="5XU7UUGb9D9" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9Da" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9Db" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXoGH" resolve="WArrayVariable" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGb9Dc" role="10QFUP">
                      <node concept="37vLTw" id="5XU7UUGb9Dd" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9CE" resolve="variables" />
                      </node>
                      <node concept="1uHKPH" id="5XU7UUGb9De" role="2OqNvi" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Df" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
                </node>
              </node>
              <node concept="34oBXx" id="5XU7UUGb9Dg" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Dh" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Di" role="3cpWs9">
            <property role="TrG5h" value="pointingVariables" />
            <node concept="_YKpA" id="5XU7UUGb9Dj" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9Dk" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Dl" role="33vP2m">
              <node concept="1eOMI4" id="5XU7UUGb9Dm" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGb9Dn" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGb9Do" role="10QFUM">
                    <ref role="3uigEE" to="x30c:35BAyTmXoGH" resolve="WArrayVariable" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGb9Dp" role="10QFUP">
                    <node concept="37vLTw" id="5XU7UUGb9Dq" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9CE" resolve="variables" />
                    </node>
                    <node concept="1uHKPH" id="5XU7UUGb9Dr" role="2OqNvi" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Ds" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb9Dt" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb9Du" role="2Gsz3X">
            <property role="TrG5h" value="pointingVariable" />
          </node>
          <node concept="37vLTw" id="5XU7UUGb9Dv" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb9Di" resolve="pointingVariables" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb9Dw" role="2LFqv$">
            <node concept="2Hmddi" id="5XU7UUGb9Dx" role="3cqZAp">
              <node concept="37vLTw" id="5HxjapvTe4U" role="2Hmdds">
                <ref role="3cqZAo" node="5XU7UUGb9Di" resolve="pointingVariables" />
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGb9Dz" role="3cqZAp">
              <node concept="2ZW3vV" id="5XU7UUGb9D$" role="3vwVQn">
                <node concept="3uibUv" id="5XU7UUGb9D_" role="2ZW6by">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="2GrUjf" id="5XU7UUGb9DA" role="2ZW6bz">
                  <ref role="2Gs0qQ" node="5XU7UUGb9Du" resolve="pointingVariable" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9DB" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9DC" role="3tpDZA">
                <property role="Xl_RC" value="counter" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9DD" role="3tpDZB">
                <node concept="2GrUjf" id="5XU7UUGb9DE" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb9Du" resolve="pointingVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9DF" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9DG" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9DH" role="3tpDZA">
                <property role="Xl_RC" value="123" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9DI" role="3tpDZB">
                <node concept="1eOMI4" id="5XU7UUGb9DJ" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9DK" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9DL" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                    </node>
                    <node concept="2GrUjf" id="5XU7UUGb9DM" role="10QFUP">
                      <ref role="2Gs0qQ" node="5XU7UUGb9Du" resolve="pointingVariable" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9DN" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9DO" role="1SL9yI">
      <property role="TrG5h" value="structVariable" />
      <node concept="3cqZAl" id="5XU7UUGb9DP" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9DQ" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9DR" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9DS" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9DT" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9DU" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9DV" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9DW" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9DX" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9DY" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9DZ" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9E0" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTe3n" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9DS" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9E2" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9E3" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9E4" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9E5" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9E6" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9E7" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdFA" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9DS" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9E9" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9Ea" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7sNQp646Qq7" role="3cqZAp" />
        <node concept="3cpWs8" id="7sNQp64hSXt" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp64hSXu" role="3cpWs9">
            <property role="TrG5h" value="value" />
            <node concept="3uibUv" id="7sNQp64hSXv" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
            </node>
            <node concept="2YIFZM" id="7sNQp64hXDz" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64hXJh" role="37wK5m">
                <ref role="3VsUkX" to="o80d:~ICDIStructValue" resolve="ICDIStructValue" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9EI" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9EJ" role="3cpWs9">
            <property role="TrG5h" value="arrayVar" />
            <node concept="3uibUv" id="7sNQp63Ylgo" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9EL" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9EM" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9EN" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Ix" resolve="createTypeWithChildren" />
                <node concept="2YIFZM" id="5XU7UUGb9EO" role="2XxRq1">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="7sNQp63Yf5R" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIStructType" resolve="ICDIStructType" />
                  </node>
                </node>
                <node concept="37vLTw" id="7sNQp64i2jB" role="2XxRq1">
                  <ref role="3cqZAo" node="7sNQp64hSXu" resolve="value" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGrpIx" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGrpIy" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGrpIz" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGrpI$" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGrpI_" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGrpIA" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGrpIB" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGrv1$" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9EJ" resolve="arrayVar" />
                </node>
                <node concept="37vLTw" id="3hwpFGrpID" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9E5" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9EX" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9EY" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9EZ" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9F0" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9E5" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9F1" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9F2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9F3" role="3cpWs9">
            <property role="TrG5h" value="variables" />
            <node concept="_YKpA" id="5XU7UUGb9F4" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9F5" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9F6" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZLx" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9DY" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9F8" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGrzMe" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGrCfX" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGrz03" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGrpIy" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9Fa" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9Fb" role="3vwVQn">
            <node concept="3cmrfG" id="5XU7UUGb9Fc" role="3uHU7w">
              <property role="3cmrfH" value="1" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Fd" role="3uHU7B">
              <node concept="37vLTw" id="5HxjapvTenT" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9F3" resolve="variables" />
              </node>
              <node concept="34oBXx" id="5XU7UUGb9Ff" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9Fg" role="3cqZAp">
          <node concept="2ZW3vV" id="5XU7UUGb9Fh" role="3vwVQn">
            <node concept="3uibUv" id="5XU7UUGb9Fi" role="2ZW6by">
              <ref role="3uigEE" to="x30c:35BAyTmXph0" resolve="WStructVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Fj" role="2ZW6bz">
              <node concept="37vLTw" id="5XU7UUGb9Fk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9F3" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9Fl" role="2OqNvi" />
            </node>
          </node>
        </node>
        <node concept="3vlDli" id="5XU7UUGb9Fm" role="3cqZAp">
          <node concept="Xl_RD" id="5XU7UUGb9Fn" role="3tpDZA">
            <property role="Xl_RC" value="counter" />
          </node>
          <node concept="2OqwBi" id="5XU7UUGb9Fo" role="3tpDZB">
            <node concept="2OqwBi" id="5XU7UUGb9Fp" role="2Oq$k0">
              <node concept="37vLTw" id="5XU7UUGb9Fq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9F3" resolve="variables" />
              </node>
              <node concept="1uHKPH" id="5XU7UUGb9Fr" role="2OqNvi" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9Fs" role="2OqNvi">
              <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
            </node>
          </node>
        </node>
        <node concept="3vwNmj" id="5XU7UUGb9Ft" role="3cqZAp">
          <node concept="3clFbC" id="5XU7UUGb9Fu" role="3vwVQn">
            <node concept="2OqwBi" id="5XU7UUGb9Fv" role="3uHU7B">
              <node concept="2OqwBi" id="5XU7UUGb9Fw" role="2Oq$k0">
                <node concept="1eOMI4" id="5XU7UUGb9Fx" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9Fy" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9Fz" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXph0" resolve="WStructVariable" />
                    </node>
                    <node concept="2OqwBi" id="5XU7UUGb9F$" role="10QFUP">
                      <node concept="37vLTw" id="5HxjapvTend" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9F3" resolve="variables" />
                      </node>
                      <node concept="1uHKPH" id="5XU7UUGb9FA" role="2OqNvi" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9FB" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
                </node>
              </node>
              <node concept="34oBXx" id="5XU7UUGb9FC" role="2OqNvi" />
            </node>
            <node concept="3cmrfG" id="5XU7UUGb9FD" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9FE" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9FF" role="3cpWs9">
            <property role="TrG5h" value="elements" />
            <node concept="_YKpA" id="5XU7UUGb9FG" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9FH" role="_ZDj9">
                <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
              </node>
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9FI" role="33vP2m">
              <node concept="1eOMI4" id="5XU7UUGb9FJ" role="2Oq$k0">
                <node concept="10QFUN" id="5XU7UUGb9FK" role="1eOMHV">
                  <node concept="3uibUv" id="5XU7UUGb9FL" role="10QFUM">
                    <ref role="3uigEE" to="x30c:35BAyTmXph0" resolve="WStructVariable" />
                  </node>
                  <node concept="2OqwBi" id="5XU7UUGb9FM" role="10QFUP">
                    <node concept="37vLTw" id="5XU7UUGb9FN" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9F3" resolve="variables" />
                    </node>
                    <node concept="1uHKPH" id="5XU7UUGb9FO" role="2OqNvi" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9FP" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4qrUVeH3W6m" resolve="getChildren" />
              </node>
            </node>
          </node>
        </node>
        <node concept="2Gpval" id="5XU7UUGb9FQ" role="3cqZAp">
          <node concept="2GrKxI" id="5XU7UUGb9FR" role="2Gsz3X">
            <property role="TrG5h" value="pointingVariable" />
          </node>
          <node concept="37vLTw" id="5XU7UUGb9FS" role="2GsD0m">
            <ref role="3cqZAo" node="5XU7UUGb9FF" resolve="elements" />
          </node>
          <node concept="3clFbS" id="5XU7UUGb9FT" role="2LFqv$">
            <node concept="2Hmddi" id="5XU7UUGb9FU" role="3cqZAp">
              <node concept="37vLTw" id="5HxjapvQZ9y" role="2Hmdds">
                <ref role="3cqZAo" node="5XU7UUGb9FF" resolve="elements" />
              </node>
            </node>
            <node concept="3vwNmj" id="5XU7UUGb9FW" role="3cqZAp">
              <node concept="2ZW3vV" id="5XU7UUGb9FX" role="3vwVQn">
                <node concept="3uibUv" id="5XU7UUGb9FY" role="2ZW6by">
                  <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                </node>
                <node concept="2GrUjf" id="5XU7UUGb9FZ" role="2ZW6bz">
                  <ref role="2Gs0qQ" node="5XU7UUGb9FR" resolve="pointingVariable" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9G0" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9G1" role="3tpDZA">
                <property role="Xl_RC" value="counter" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9G2" role="3tpDZB">
                <node concept="2GrUjf" id="5XU7UUGb9G3" role="2Oq$k0">
                  <ref role="2Gs0qQ" node="5XU7UUGb9FR" resolve="pointingVariable" />
                </node>
                <node concept="liA8E" id="5XU7UUGb9G4" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:2RztF939YPM" resolve="getIdentifier" />
                </node>
              </node>
            </node>
            <node concept="3vlDli" id="5XU7UUGb9G5" role="3cqZAp">
              <node concept="Xl_RD" id="5XU7UUGb9G6" role="3tpDZA">
                <property role="Xl_RC" value="123" />
              </node>
              <node concept="2OqwBi" id="5XU7UUGb9G7" role="3tpDZB">
                <node concept="1eOMI4" id="5XU7UUGb9G8" role="2Oq$k0">
                  <node concept="10QFUN" id="5XU7UUGb9G9" role="1eOMHV">
                    <node concept="3uibUv" id="5XU7UUGb9Ga" role="10QFUM">
                      <ref role="3uigEE" to="x30c:35BAyTmXoCe" resolve="WPrimitiveVariable" />
                    </node>
                    <node concept="2GrUjf" id="5XU7UUGb9Gb" role="10QFUP">
                      <ref role="2Gs0qQ" node="5XU7UUGb9FR" resolve="pointingVariable" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Gc" role="2OqNvi">
                  <ref role="37wK5l" to="x30c:4qrUVeH3W6w" resolve="getValueRepresentation" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9Gd" role="1SL9yI">
      <property role="TrG5h" value="resolveUnsupportedType" />
      <node concept="3cqZAl" id="5XU7UUGb9Ge" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9Gf" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9Gg" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Gh" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9Gi" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Gj" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9Gk" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9Gl" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Qs" resolve="injectDependencies" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Gm" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Gn" role="3cpWs9">
            <property role="TrG5h" value="variablesManager" />
            <node concept="3uibUv" id="5XU7UUGb9Go" role="1tU5fm">
              <ref role="3uigEE" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Gp" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9Gq" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Gh" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9Gr" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9Gs" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Gt" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Gu" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessor" />
            <node concept="3uibUv" id="5XU7UUGb9Gv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Gw" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvTdVB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Gh" resolve="injector" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9Gy" role="2OqNvi">
                <ref role="37wK5l" to="ez3t:~Injector.getInstance(java.lang.Class):java.lang.Object" resolve="getInstance" />
                <node concept="3VsKOn" id="5XU7UUGb9Gz" role="37wK5m">
                  <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9G$" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9G_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9GA" role="3cpWs9">
            <property role="TrG5h" value="arrayVar" />
            <node concept="3uibUv" id="7sNQp64kL1v" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9GC" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9GD" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9GE" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9Kn" resolve="createPrimitiveLocalVariable" />
                <node concept="2YIFZM" id="5XU7UUGb9GF" role="2XxRq1">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGb9GG" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIType" resolve="ICDIType" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="3hwpFGrHmg" role="3cqZAp">
          <node concept="3cpWsn" id="3hwpFGrHmh" role="3cpWs9">
            <property role="TrG5h" value="stackframes" />
            <node concept="10Q1$e" id="3hwpFGrHmi" role="1tU5fm">
              <node concept="3uibUv" id="3hwpFGrHmj" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2OqwBi" id="3hwpFGrHmk" role="33vP2m">
              <node concept="2WthIp" id="3hwpFGrHml" role="2Oq$k0" />
              <node concept="2XshWL" id="3hwpFGrHmm" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9M6" resolve="mockSession" />
                <node concept="37vLTw" id="3hwpFGrHmn" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9GA" resolve="arrayVar" />
                </node>
                <node concept="37vLTw" id="3hwpFGrHmo" role="2XxRq1">
                  <ref role="3cqZAo" node="5XU7UUGb9Gu" resolve="sessionAccessor" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9GN" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9GO" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9GP" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdTt" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Gu" resolve="sessionAccessor" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9GR" role="3cqZAp" />
        <node concept="3vwNmj" id="4zwuNkqOxbY" role="3cqZAp">
          <node concept="2OqwBi" id="4zwuNkqOxHb" role="3vwVQn">
            <node concept="2OqwBi" id="4zwuNkqOxnj" role="2Oq$k0">
              <node concept="37vLTw" id="4zwuNkqOxnk" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Gn" resolve="variablesManager" />
              </node>
              <node concept="liA8E" id="4zwuNkqOxnl" role="2OqNvi">
                <ref role="37wK5l" to="x30c:7BdrrY31sIW" resolve="getLocalVariables" />
                <node concept="AH0OO" id="3hwpFGrQ4H" role="37wK5m">
                  <node concept="3cmrfG" id="3hwpFGrQ7J" role="AHEQo">
                    <property role="3cmrfH" value="0" />
                  </node>
                  <node concept="37vLTw" id="3hwpFGrPQE" role="AHHXb">
                    <ref role="3cqZAo" node="3hwpFGrHmh" resolve="stackframes" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="1v1jN8" id="4zwuNkqOzZG" role="2OqNvi" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9GZ" role="1SL9yI">
      <property role="TrG5h" value="invalidCast" />
      <node concept="3cqZAl" id="5XU7UUGb9H0" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9H1" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9H2" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9H3" role="3cpWs9">
            <property role="TrG5h" value="caster" />
            <node concept="3uibUv" id="5XU7UUGb9H4" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1jRCtZT4jc3" resolve="IWVariablesTransformer" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9H5" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9H6" role="37wK5m">
                <ref role="3VsUkX" to="x30c:1jRCtZT4jc3" resolve="IWVariablesTransformer" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9H7" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9H8" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9H9" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9Ha" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9Hb" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTdFk" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9H3" resolve="caster" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Hd" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:1jRCtZT4jcf" resolve="cast" />
                    <node concept="2YIFZM" id="5XU7UUGb9He" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGb9Hf" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGb9Hg" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="5XU7UUGb9Hh" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:35BAyTmXoAX" resolve="WVariable" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Hi" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                <node concept="2ShNRf" id="5XU7UUGb9Hj" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9Hk" role="2ShVmc">
                    <ref role="37wK5l" to="x30c:1PYPO_CCgIg" resolve="WCastingFailedException" />
                    <node concept="Xl_RD" id="5XU7UUGb9Hl" role="37wK5m" />
                    <node concept="Xl_RD" id="5XU7UUGb9Hm" role="37wK5m">
                      <property role="Xl_RC" value="" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9Hn" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Ho" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9Hp" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Hq" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9Hr" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9H3" resolve="caster" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Hs" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9Ht" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Hu" role="3cpWs9">
            <property role="TrG5h" value="cVariable" />
            <node concept="3uibUv" id="5XU7UUGb9Hv" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb9Hw" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb9Hx" role="2ShVmc">
                <ref role="37wK5l" to="x30c:35BAyTmXoCg" resolve="WPrimitiveVariable" />
                <node concept="10Nm6u" id="5XU7UUGb9Hy" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9Hz" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9H$" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9H_" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvQZ$9" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9H3" resolve="caster" />
                </node>
                <node concept="10Nm6u" id="3hwpFGrXuT" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9HB" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb9HC" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9HD" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTeqV" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Hu" resolve="cVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9HF" role="2OqNvi">
                <ref role="37wK5l" to="x30c:1jRCtZT4BfK" resolve="cast" />
                <node concept="10Nm6u" id="5XU7UUGb9HG" role="37wK5m" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb9HH" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~IllegalArgumentException" resolve="IllegalArgumentException" />
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9HI" role="3cqZAp">
          <node concept="3uibUv" id="5XU7UUGb9HJ" role="3$Qgvv">
            <ref role="3uigEE" to="x30c:1PYPO_CCgIe" resolve="WCastingFailedException" />
          </node>
          <node concept="3clFbF" id="5XU7UUGb9HK" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9HL" role="3clFbG">
              <node concept="37vLTw" id="5XU7UUGb9HM" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Hu" resolve="cVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9HN" role="2OqNvi">
                <ref role="37wK5l" to="x30c:1jRCtZT4BfK" resolve="cast" />
                <node concept="Xl_RD" id="5XU7UUGb9HO" role="37wK5m">
                  <property role="Xl_RC" value="anyType" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9HP" role="1SL9yI">
      <property role="TrG5h" value="validCast" />
      <node concept="3cqZAl" id="5XU7UUGb9HQ" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9HR" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9HS" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9HT" role="3cpWs9">
            <property role="TrG5h" value="caster" />
            <node concept="3uibUv" id="5XU7UUGb9HU" role="1tU5fm">
              <ref role="3uigEE" to="x30c:1jRCtZT4jc3" resolve="IWVariablesTransformer" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9HV" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9HW" role="37wK5m">
                <ref role="3VsUkX" to="x30c:1jRCtZT4jc3" resolve="IWVariablesTransformer" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9HX" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9HY" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9HZ" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9I0" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9I1" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZx7" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9HT" resolve="caster" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9I3" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:1jRCtZT4jcf" resolve="cast" />
                    <node concept="2YIFZM" id="5XU7UUGb9I4" role="37wK5m">
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <node concept="3VsKOn" id="5XU7UUGb9I5" role="37wK5m">
                        <ref role="3VsUkX" to="wyt6:~String" resolve="String" />
                      </node>
                    </node>
                    <node concept="2YIFZM" id="5XU7UUGb9I6" role="37wK5m">
                      <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                      <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                      <node concept="3VsKOn" id="5XU7UUGb9I7" role="37wK5m">
                        <ref role="3VsUkX" to="x30c:35BAyTmXoAX" resolve="WVariable" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9I8" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2YIFZM" id="5XU7UUGb9I9" role="37wK5m">
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <node concept="3VsKOn" id="5XU7UUGb9Ia" role="37wK5m">
                    <ref role="3VsUkX" to="x30c:35BAyTmXoAX" resolve="WVariable" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9Ib" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Ic" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9Id" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Ie" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZ7Z" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9HT" resolve="caster" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Ig" role="3cqZAp" />
        <node concept="3clFbH" id="5XU7UUGb9Ih" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9Ii" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Ij" role="3cpWs9">
            <property role="TrG5h" value="cVariable" />
            <node concept="3uibUv" id="5XU7UUGb9Ik" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb9Il" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb9Im" role="2ShVmc">
                <ref role="37wK5l" to="x30c:35BAyTmXoCg" resolve="WPrimitiveVariable" />
                <node concept="10Nm6u" id="5XU7UUGb9In" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9Io" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9Ip" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9Iq" role="37wK5m" />
                <node concept="37vLTw" id="5HxjapvTdSZ" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9HT" resolve="caster" />
                </node>
                <node concept="10Nm6u" id="3hwpFGs1j$" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Is" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9It" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGb9Iu" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGb9Ij" resolve="cVariable" />
            </node>
            <node concept="liA8E" id="5XU7UUGb9Iv" role="2OqNvi">
              <ref role="37wK5l" to="x30c:1jRCtZT4BfK" resolve="cast" />
              <node concept="Xl_RD" id="5XU7UUGb9Iw" role="37wK5m">
                <property role="Xl_RC" value="string" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9Ix" role="1qtyYc">
      <property role="TrG5h" value="createTypeWithChildren" />
      <node concept="37vLTG" id="5XU7UUGb9Iy" role="3clF46">
        <property role="TrG5h" value="type" />
        <node concept="3uibUv" id="5XU7UUGb9Iz" role="1tU5fm">
          <ref role="3uigEE" to="o80d:~ICDIType" resolve="ICDIType" />
        </node>
      </node>
      <node concept="37vLTG" id="7sNQp642PgB" role="3clF46">
        <property role="TrG5h" value="value" />
        <node concept="3uibUv" id="7sNQp642S0q" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
        </node>
      </node>
      <node concept="3uibUv" id="7sNQp63YpGw" role="3clF45">
        <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb9IC" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9ID" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9IE" role="3cpWs9">
            <property role="TrG5h" value="variable" />
            <node concept="3uibUv" id="7sNQp64lfzd" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9IG" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64lhQ5" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9II" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9IJ" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9IK" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9IL" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9IM" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9IN" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9IO" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9IP" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9IE" resolve="variable" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9IQ" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getType():org.eclipse.cdt.debug.core.cdi.model.type.ICDIType" resolve="getType" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9IR" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5XU7UUGb9IS" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9Iy" resolve="type" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9IT" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9IU" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9IV" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9IW" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9IX" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9IY" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9IZ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Iy" resolve="type" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9J0" role="2OqNvi">
                        <ref role="37wK5l" to="o80d:~ICDIType.getTypeName():java.lang.String" resolve="getTypeName" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9J1" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="Xl_RD" id="5XU7UUGb9J2" role="37wK5m">
                      <property role="Xl_RC" value="someName" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9J3" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9J4" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9J5" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9J6" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9J7" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9J8" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9J9" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9Ja" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9Jb" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9J5" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9Jc" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Ji" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9Ec" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Ed" role="3cpWs9">
            <property role="TrG5h" value="childs" />
            <node concept="_YKpA" id="5XU7UUGb9Ee" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9Ef" role="_ZDj9">
                <ref role="3uigEE" to="n06z:~ICDIVariable" resolve="ICDIVariable" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGb9Eg" role="33vP2m">
              <node concept="Tc6Ow" id="5XU7UUGb9Eh" role="2ShVmc">
                <node concept="3uibUv" id="5XU7UUGb9Ei" role="HW$YZ">
                  <ref role="3uigEE" to="n06z:~ICDIVariable" resolve="ICDIVariable" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="1Dw8fO" id="7sNQp64b$Ca" role="3cqZAp">
          <node concept="3clFbS" id="7sNQp64b$Cd" role="2LFqv$">
            <node concept="3clFbF" id="7sNQp64bKAB" role="3cqZAp">
              <node concept="2OqwBi" id="7sNQp64bKP1" role="3clFbG">
                <node concept="37vLTw" id="7sNQp64bKAA" role="2Oq$k0">
                  <ref role="3cqZAo" node="5XU7UUGb9Ed" resolve="childs" />
                </node>
                <node concept="TSZUe" id="7sNQp64bMJ3" role="2OqNvi">
                  <node concept="2OqwBi" id="7sNQp64c0ea" role="25WWJ7">
                    <node concept="2WthIp" id="7sNQp64c0eb" role="2Oq$k0" />
                    <node concept="2XshWL" id="7sNQp64c0ec" role="2OqNvi">
                      <ref role="2WH_rO" node="5XU7UUGb9Kn" resolve="createPrimitiveLocalVariable" />
                      <node concept="2YIFZM" id="7sNQp64c0ed" role="2XxRq1">
                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                        <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                        <node concept="3VsKOn" id="7sNQp64c0ee" role="37wK5m">
                          <ref role="3VsUkX" to="o80d:~ICDIIntType" resolve="ICDIIntType" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node concept="3cpWsn" id="7sNQp64b$Cg" role="1Duv9x">
            <property role="TrG5h" value="index" />
            <node concept="10Oyi0" id="7sNQp64bAbc" role="1tU5fm" />
            <node concept="3cmrfG" id="7sNQp64bAbF" role="33vP2m">
              <property role="3cmrfH" value="0" />
            </node>
          </node>
          <node concept="3eOVzh" id="7sNQp64bC1L" role="1Dwp0S">
            <node concept="3cmrfG" id="7sNQp64bC1O" role="3uHU7w">
              <property role="3cmrfH" value="2" />
            </node>
            <node concept="37vLTw" id="7sNQp64bAbW" role="3uHU7B">
              <ref role="3cqZAo" node="7sNQp64b$Cg" resolve="index" />
            </node>
          </node>
          <node concept="3uNrnE" id="7sNQp64bEN$" role="1Dwrff">
            <node concept="37vLTw" id="7sNQp64bENA" role="2$L3a6">
              <ref role="3cqZAo" node="7sNQp64b$Cg" resolve="index" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp64PHfj" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp64Q4Tw" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp64PLvm" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp64Q48w" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="7sNQp64Q48x" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp64Q48y" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp642PgB" resolve="value" />
                  </node>
                  <node concept="liA8E" id="7sNQp64Q48z" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIValue.getChildrenNumber():int" resolve="getChildrenNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp64Q4zQ" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="7sNQp64Q4Kp" role="37wK5m">
                  <property role="3cmrfH" value="2" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp64Q5SM" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9JF" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9JG" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9JH" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9JI" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9JJ" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTe0e" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9IE" resolve="variable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9JL" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getName():java.lang.String" resolve="getName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9JM" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGb9JN" role="37wK5m">
                  <property role="Xl_RC" value="counter" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9JO" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Jx" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9Jy" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9Jz" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9J$" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb9J_" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvTeoB" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9IE" resolve="variable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9JB" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIVariable.getValue():org.eclipse.cdt.debug.core.cdi.model.ICDIValue" resolve="getValue" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9JC" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="7sNQp643666" role="37wK5m">
                  <ref role="3cqZAo" node="7sNQp642PgB" resolve="value" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9JE" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp647m5D" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp64852f" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp647q12" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp647nx7" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7sNQp645FfX" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp64gj8Q" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp642PgB" resolve="value" />
                  </node>
                  <node concept="liA8E" id="7sNQp645KZk" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIValue.getVariables():org.eclipse.cdt.debug.core.cdi.model.ICDIVariable[]" resolve="getVariables" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp647rBS" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2OqwBi" id="7sNQp64douQ" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp64dnUH" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9Ed" resolve="childs" />
                  </node>
                  <node concept="3_kTaI" id="7sNQp64duUH" role="2OqNvi" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp6487Jc" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp64MHjo" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp64MHjp" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp64MHjq" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp64MHjr" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="7sNQp64MHjs" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp64MHjt" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp642PgB" resolve="value" />
                  </node>
                  <node concept="liA8E" id="7sNQp64MNVj" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIValue.getValueString():java.lang.String" resolve="getValueString" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp64MHjv" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7sNQp64MOgB" role="37wK5m">
                  <property role="Xl_RC" value="123" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp64MHjz" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7sNQp64h_PY" role="3cqZAp" />
        <node concept="3clFbF" id="7sNQp646VU9" role="3cqZAp">
          <node concept="2YIFZM" id="7sNQp646Xjk" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="7sNQp64gjiN" role="37wK5m">
              <ref role="3cqZAo" node="7sNQp642PgB" resolve="value" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Ke" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Kf" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9Kg" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Iy" resolve="type" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Kh" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Ki" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdRY" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9IE" resolve="variable" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Kk" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGb9Kl" role="3cqZAp">
          <node concept="37vLTw" id="5XU7UUGb9Km" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9IE" resolve="variable" />
          </node>
        </node>
      </node>
      <node concept="3uibUv" id="7sNQp64HR2w" role="Sfmx6">
        <ref role="3uigEE" to="ys5c:~CDIException" resolve="CDIException" />
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9Kn" role="1qtyYc">
      <property role="TrG5h" value="createPrimitiveLocalVariable" />
      <node concept="37vLTG" id="5XU7UUGb9Ko" role="3clF46">
        <property role="TrG5h" value="type" />
        <node concept="3uibUv" id="5XU7UUGb9Kp" role="1tU5fm">
          <ref role="3uigEE" to="o80d:~ICDIType" resolve="ICDIType" />
        </node>
      </node>
      <node concept="3uibUv" id="7sNQp649z73" role="3clF45">
        <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb9Kr" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9Ks" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Kt" role="3cpWs9">
            <property role="TrG5h" value="variable" />
            <node concept="3uibUv" id="7sNQp649_j0" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Kv" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp649Ip4" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9Kx" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9Ky" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9Kz" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9K$" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9K_" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9KA" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9KB" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZzZ" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Kt" resolve="variable" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9KD" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getType():org.eclipse.cdt.debug.core.cdi.model.type.ICDIType" resolve="getType" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9KE" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5XU7UUGb9KF" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9Ko" resolve="type" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9KG" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9KH" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9KI" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9KJ" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9KK" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9KL" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9KM" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Ko" resolve="type" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9KN" role="2OqNvi">
                        <ref role="37wK5l" to="o80d:~ICDIType.getTypeName():java.lang.String" resolve="getTypeName" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9KO" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="Xl_RD" id="5XU7UUGb9KP" role="37wK5m">
                      <property role="Xl_RC" value="someType" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9KQ" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9KR" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9KS" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9KT" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9KU" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9KV" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9KW" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9KX" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvQZLY" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9KS" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9KZ" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7sNQp64zuJR" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp64zuJS" role="3cpWs9">
            <property role="TrG5h" value="value" />
            <node concept="3uibUv" id="7sNQp64zuJT" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
            </node>
            <node concept="2YIFZM" id="7sNQp64zzHn" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64zzJ5" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIValue" resolve="ICDIValue" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9Lq" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9Lr" role="SfCbr">
            <node concept="3cpWs8" id="7sNQp64zVbG" role="3cqZAp">
              <node concept="3cpWsn" id="7sNQp64zVbH" role="3cpWs9">
                <property role="TrG5h" value="primitiveValue" />
                <node concept="3uibUv" id="7sNQp64zVbI" role="1tU5fm">
                  <ref role="3uigEE" to="n06z:~ICDIValue" resolve="ICDIValue" />
                </node>
                <node concept="2YIFZM" id="7sNQp64zYZQ" role="33vP2m">
                  <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                  <node concept="3VsKOn" id="7sNQp64zZbf" role="37wK5m">
                    <ref role="3VsUkX" to="o80d:~ICDIIntValue" resolve="ICDIIntValue" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7sNQp64$7_x" role="3cqZAp">
              <node concept="2OqwBi" id="7sNQp64$8F4" role="3clFbG">
                <node concept="2OqwBi" id="7sNQp64$7Y0" role="2Oq$k0">
                  <node concept="2YIFZM" id="7sNQp64$7M4" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="7sNQp64$36M" role="37wK5m">
                      <node concept="37vLTw" id="7sNQp64$31f" role="2Oq$k0">
                        <ref role="3cqZAo" node="7sNQp64zVbH" resolve="primitiveValue" />
                      </node>
                      <node concept="liA8E" id="7sNQp64$3IN" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIValue.getValueString():java.lang.String" resolve="getValueString" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="7sNQp64$8m6" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="Xl_RD" id="7sNQp64$8yv" role="37wK5m">
                      <property role="Xl_RC" value="123" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="7sNQp64$9J$" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="7sNQp64$nAo" role="3cqZAp">
              <node concept="2YIFZM" id="7sNQp64$nBs" role="3clFbG">
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="37vLTw" id="7sNQp64$nV3" role="37wK5m">
                  <ref role="3cqZAo" node="7sNQp64zVbH" resolve="primitiveValue" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9Ls" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9Lt" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9Lu" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9Lv" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9Lw" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZrO" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Kt" resolve="variable" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9Ly" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIVariable.getValue():org.eclipse.cdt.debug.core.cdi.model.ICDIValue" resolve="getValue" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Lz" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="7sNQp64$jz8" role="37wK5m">
                      <ref role="3cqZAo" node="7sNQp64zVbH" resolve="primitiveValue" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9L_" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9LA" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9LB" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9LC" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9LD" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9LE" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9LF" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9LG" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9LH" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9LB" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9LI" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9LJ" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9LK" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9LL" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9LM" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9LN" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9LO" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9Kt" resolve="variable" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9LP" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIVariableDescriptor.getName():java.lang.String" resolve="getName" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9LQ" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGb9LR" role="37wK5m">
                  <property role="Xl_RC" value="counter" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9LS" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9LT" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9LX" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9LY" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9LZ" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Kt" resolve="variable" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9M0" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9M1" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9M2" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Ko" resolve="type" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9M3" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGb9M4" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvQZSH" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9Kt" resolve="variable" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9M6" role="1qtyYc">
      <property role="TrG5h" value="mockSession" />
      <node concept="37vLTG" id="5XU7UUGb9M7" role="3clF46">
        <property role="TrG5h" value="variable" />
        <node concept="3uibUv" id="7sNQp630Lux" role="1tU5fm">
          <ref role="3uigEE" to="n06z:~ICDILocalVariable" resolve="ICDILocalVariable" />
        </node>
      </node>
      <node concept="37vLTG" id="5XU7UUGb9M9" role="3clF46">
        <property role="TrG5h" value="sessionAccessorMock" />
        <node concept="3uibUv" id="5XU7UUGb9Ma" role="1tU5fm">
          <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
        </node>
      </node>
      <node concept="10Q1$e" id="3hwpFGpzcE" role="3clF45">
        <node concept="3uibUv" id="3hwpFGpxsP" role="10Q1$1">
          <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
        </node>
      </node>
      <node concept="3clFbS" id="5XU7UUGb9Mc" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9Md" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Me" role="3cpWs9">
            <property role="TrG5h" value="topStackFrame" />
            <node concept="3uibUv" id="7sNQp63QD_B" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Mg" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7sNQp63QTPR" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="7sNQp63RTQR" role="3cqZAp">
          <node concept="3cpWsn" id="7sNQp63RTQS" role="3cpWs9">
            <property role="TrG5h" value="firstLocator" />
            <node concept="3uibUv" id="7sNQp63RTQT" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDILocator" resolve="ICDILocator" />
            </node>
            <node concept="2YIFZM" id="7sNQp63S7MI" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp63S7RJ" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDILocator" resolve="ICDILocator" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp63RD6d" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp63SeQF" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp63ScA8" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp63RHFm" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="7sNQp63Rqh9" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp63RlNY" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
                  </node>
                  <node concept="liA8E" id="7sNQp63Rwtl" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIStackFrame.getLocator():org.eclipse.cdt.debug.core.cdi.ICDILocator" resolve="getLocator" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp63Sewm" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="7sNQp63SeHE" role="37wK5m">
                  <ref role="3cqZAo" node="7sNQp63RTQS" resolve="firstLocator" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp63SgYv" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp63T8md" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp63TQs3" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp63Tljy" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp63ThEV" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="7sNQp63SPx_" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp63SPxA" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp63RTQS" resolve="firstLocator" />
                  </node>
                  <node concept="liA8E" id="7sNQp63SPxB" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDIFileLocation.getFile():java.lang.String" resolve="getFile" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp63TPW$" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="5XU7UUGb9Mv" role="37wK5m">
                  <property role="Xl_RC" value="local/Main.c" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp63TSK$" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp63SPx$" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp63U1IA" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp63TZ8J" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp63TtdH" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="7sNQp63SHbF" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp63SEUi" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp63RTQS" resolve="firstLocator" />
                  </node>
                  <node concept="liA8E" id="7sNQp63SZvo" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDILineLocation.getLineNumber():int" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp63U1sv" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="7sNQp63U1Cs" role="37wK5m">
                  <property role="3cmrfH" value="5" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp63TZ9l" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp63TuTp" role="3cqZAp">
          <node concept="2OqwBi" id="7sNQp63U4op" role="3clFbG">
            <node concept="2OqwBi" id="7sNQp63TXab" role="2Oq$k0">
              <node concept="2YIFZM" id="7sNQp63TuTq" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="7sNQp63SPO1" role="37wK5m">
                  <node concept="37vLTw" id="7sNQp63SPO2" role="2Oq$k0">
                    <ref role="3cqZAo" node="7sNQp63RTQS" resolve="firstLocator" />
                  </node>
                  <node concept="liA8E" id="7sNQp63SPO3" role="2OqNvi">
                    <ref role="37wK5l" to="ys5c:~ICDIFunctionLocation.getFunction():java.lang.String" resolve="getFunction" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="7sNQp63U4bB" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="Xl_RD" id="7sNQp63Ua_b" role="37wK5m">
                  <property role="Xl_RC" value="main" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="7sNQp63TYU1" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="7sNQp63UxHj" role="3cqZAp">
          <node concept="2YIFZM" id="7sNQp63UAE2" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="7sNQp63UCB6" role="37wK5m">
              <ref role="3cqZAo" node="7sNQp63RTQS" resolve="firstLocator" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="7sNQp63UoCD" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGb9N5" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9N6" role="3cpWs9">
            <property role="TrG5h" value="argDesc" />
            <node concept="3uibUv" id="7sNQp64lkca" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIArgumentDescriptor" resolve="ICDIArgumentDescriptor" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9N8" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="7sNQp64lrDI" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIArgumentDescriptor" resolve="ICDIArgumentDescriptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Na" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Nb" role="3cpWs9">
            <property role="TrG5h" value="topFrameArgDescriptors" />
            <node concept="10Q1$e" id="5XU7UUGb9Nc" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9Nd" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIArgumentDescriptor" resolve="ICDIArgumentDescriptor" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9Ne" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9Nf" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9N6" resolve="argDesc" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Ng" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Nh" role="3cpWs9">
            <property role="TrG5h" value="localVarDesc" />
            <node concept="3uibUv" id="7sNQp63wD5u" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDILocalVariableDescriptor" resolve="ICDILocalVariableDescriptor" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Nj" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="7sNQp63wDFV" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDILocalVariableDescriptor" resolve="ICDILocalVariableDescriptor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Nl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Nm" role="3cpWs9">
            <property role="TrG5h" value="topFrameLocalVarDescriptors" />
            <node concept="10Q1$e" id="5XU7UUGb9Nn" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9No" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDILocalVariableDescriptor" resolve="ICDILocalVariableDescriptor" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9Np" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZAd" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9Nh" resolve="localVarDesc" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Nw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Nx" role="3cpWs9">
            <property role="TrG5h" value="secFrameArgDescriptors" />
            <node concept="10Q1$e" id="5XU7UUGb9Ny" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9Nz" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIArgumentDescriptor" resolve="ICDIArgumentDescriptor" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9N$" role="33vP2m" />
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9N_" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9NA" role="3cpWs9">
            <property role="TrG5h" value="stackFrames" />
            <node concept="10Q1$e" id="5XU7UUGb9NB" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9NC" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIStackFrame" resolve="ICDIStackFrame" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9ND" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZPs" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9NF" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9NG" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9NH" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9NI" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9NJ" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9NK" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9NL" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9NM" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9NN" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIStackFrame.getLocalVariableDescriptors():org.eclipse.cdt.debug.core.cdi.model.ICDILocalVariableDescriptor[]" resolve="getLocalVariableDescriptors" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9NO" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvTdt2" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9Nm" resolve="topFrameLocalVarDescriptors" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9NQ" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9NR" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9NS" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9NT" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9NU" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9NV" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9NW" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9NX" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvQZIr" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9NS" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9NZ" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9O0" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9O1" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9O2" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9O3" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9O4" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9O5" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9O6" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9O7" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9O8" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIStackFrame.getArgumentDescriptors():org.eclipse.cdt.debug.core.cdi.model.ICDIArgumentDescriptor[]" resolve="getArgumentDescriptors" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9O9" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvTdS4" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9Nb" resolve="topFrameArgDescriptors" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Ob" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9Oc" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9Od" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9Oe" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9Of" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9Og" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9Oh" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9Oi" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTdX7" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9Od" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9Ok" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Ol" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Om" role="3cpWs9">
            <property role="TrG5h" value="thread" />
            <node concept="3uibUv" id="5XU7UUGb9On" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIThread" resolve="ICDIThread" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Oo" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb9Op" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIThread" resolve="ICDIThread" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Oq" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Or" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9Os" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2OqwBi" id="5XU7UUGb9Ot" role="33vP2m">
              <node concept="2WthIp" id="5XU7UUGb9Ou" role="2Oq$k0" />
              <node concept="2XshWL" id="5XU7UUGb9Ov" role="2OqNvi">
                <ref role="2WH_rO" node="5XU7UUGb9QY" resolve="createDefaultTarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Ow" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9Ox" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9Oy" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9Oz" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9O$" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9O_" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9M9" resolve="sessionAccessorMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9OA" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:2fjdrD4FFyF" resolve="getTarget" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9OB" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvQZnd" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9Or" resolve="target" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9OD" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9OE" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9OF" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9OG" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9OH" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9OI" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9OJ" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9OK" role="37wK5m">
                      <node concept="37vLTw" id="5XU7UUGb9OL" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Or" resolve="target" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9OM" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIThreadGroup.getCurrentThread():org.eclipse.cdt.debug.core.cdi.model.ICDIThread" resolve="getCurrentThread" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9ON" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvTdB7" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9Om" resolve="thread" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9OP" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
            <node concept="3clFbF" id="5XU7UUGb9OQ" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGb9OR" role="3clFbG">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                <node concept="37vLTw" id="5XU7UUGb9OS" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9Or" resolve="target" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9OT" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9OU" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9OV" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9OW" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9OX" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9OY" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9OZ" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTdV1" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9OU" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9P1" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9P2" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9P3" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9P4" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9P5" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9P6" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9P7" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9P8" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvTdY4" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Om" resolve="thread" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9Pa" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIThread.getStackFrames():org.eclipse.cdt.debug.core.cdi.model.ICDIStackFrame[]" resolve="getStackFrames" />
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Pb" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5HxjapvTe59" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9NA" resolve="stackFrames" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Pd" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9Pe" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9Pf" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9Pg" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9Ph" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9Pi" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9Pj" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9Pk" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9Pl" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9Pf" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9Pm" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9Pn" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9Po" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9Pp" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9Pq" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9Pr" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9Ps" role="2Oq$k0">
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <node concept="2OqwBi" id="5XU7UUGb9Pt" role="37wK5m">
                      <node concept="37vLTw" id="7sNQp63VO7H" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9Pv" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDIStackFrame.createLocalVariable(org.eclipse.cdt.debug.core.cdi.model.ICDILocalVariableDescriptor):org.eclipse.cdt.debug.core.cdi.model.ICDILocalVariable" resolve="createLocalVariable" />
                        <node concept="37vLTw" id="5HxjapvQZr3" role="37wK5m">
                          <ref role="3cqZAo" node="5XU7UUGb9Nh" resolve="localVarDesc" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Px" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5XU7UUGb9Py" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9M7" resolve="variable" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9Pz" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9P$" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9P_" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9PA" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9PB" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9PC" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9PD" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9PE" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGb9PF" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9P_" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9PG" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9PH" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9PI" role="3cpWs9">
            <property role="TrG5h" value="session" />
            <node concept="3uibUv" id="5XU7UUGb9PJ" role="1tU5fm">
              <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9PK" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb9PL" role="37wK5m">
                <ref role="3VsUkX" to="ys5c:~ICDISession" resolve="ICDISession" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9PW" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9PX" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9PY" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9PZ" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9Q0" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9Q1" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9M9" resolve="sessionAccessorMock" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Q2" role="2OqNvi">
                    <ref role="37wK5l" to="x30c:3YEMYtJsTYy" resolve="getSession" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Q3" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5XU7UUGb9Q4" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9PI" resolve="session" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9Q5" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Q6" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9Q7" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Q8" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvTdHI" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9PI" resolve="session" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Qa" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Qb" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZGR" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Om" resolve="thread" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Qg" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Qh" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTeqt" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Me" resolve="topStackFrame" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Qm" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Qn" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvQZrr" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9N6" resolve="argDesc" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Qp" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Qq" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTduV" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Nh" resolve="localVarDesc" />
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="3hwpFGpF3z" role="3cqZAp">
          <node concept="37vLTw" id="3hwpFGpLhy" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9NA" resolve="stackFrames" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9Qs" role="1qtyYc">
      <property role="TrG5h" value="injectDependencies" />
      <node concept="3uibUv" id="5XU7UUGb9Qt" role="3clF45">
        <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb9Qu" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9Qv" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Qw" role="3cpWs9">
            <property role="TrG5h" value="sessionAccessorMock" />
            <property role="3TUv4t" value="true" />
            <node concept="3uibUv" id="5XU7UUGb9Qx" role="1tU5fm">
              <ref role="3uigEE" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Qy" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9Qz" role="37wK5m">
                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Q$" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Q_" role="3cpWs9">
            <property role="TrG5h" value="injector" />
            <node concept="3uibUv" id="5XU7UUGb9QA" role="1tU5fm">
              <ref role="3uigEE" to="ez3t:~Injector" resolve="Injector" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9QB" role="33vP2m">
              <ref role="37wK5l" to="ez3t:~Guice.createInjector(com.google.inject.Module...):com.google.inject.Injector" resolve="createInjector" />
              <ref role="1Pybhc" to="ez3t:~Guice" resolve="Guice" />
              <node concept="2ShNRf" id="5XU7UUGb9QC" role="37wK5m">
                <node concept="YeOm9" id="5XU7UUGb9QD" role="2ShVmc">
                  <node concept="1Y3b0j" id="5XU7UUGb9QE" role="YeSDq">
                    <property role="2bfB8j" value="true" />
                    <ref role="37wK5l" to="ez3t:~AbstractModule.&lt;init&gt;()" resolve="AbstractModule" />
                    <ref role="1Y3XeK" to="ez3t:~AbstractModule" resolve="AbstractModule" />
                    <node concept="3Tm1VV" id="5XU7UUGb9QF" role="1B3o_S" />
                    <node concept="3clFb_" id="5XU7UUGb9QG" role="jymVt">
                      <property role="1EzhhJ" value="false" />
                      <property role="TrG5h" value="configure" />
                      <property role="DiZV1" value="false" />
                      <property role="IEkAT" value="false" />
                      <node concept="3Tmbuc" id="5XU7UUGb9QH" role="1B3o_S" />
                      <node concept="3cqZAl" id="5XU7UUGb9QI" role="3clF45" />
                      <node concept="3clFbS" id="5XU7UUGb9QJ" role="3clF47">
                        <node concept="3clFbF" id="5XU7UUGb9QK" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb9QL" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb9QM" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb9QN" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:3YEMYtJsTYw" resolve="IWSessionAccessor" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb9QO" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.toInstance(java.lang.Object):void" resolve="toInstance" />
                              <node concept="37vLTw" id="5HxjapvTdx4" role="37wK5m">
                                <ref role="3cqZAo" node="5XU7UUGb9Qw" resolve="sessionAccessorMock" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3clFbF" id="5XU7UUGb9QQ" role="3cqZAp">
                          <node concept="2OqwBi" id="5XU7UUGb9QR" role="3clFbG">
                            <node concept="3P9mCS" id="5XU7UUGb9QS" role="2Oq$k0">
                              <ref role="37wK5l" to="ez3t:~AbstractModule.bind(java.lang.Class):com.google.inject.binder.AnnotatedBindingBuilder" resolve="bind" />
                              <node concept="3VsKOn" id="5XU7UUGb9QT" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8zcnX" resolve="IWVariablesManager" />
                              </node>
                            </node>
                            <node concept="liA8E" id="5XU7UUGb9QU" role="2OqNvi">
                              <ref role="37wK5l" to="hr7j:~LinkedBindingBuilder.to(java.lang.Class):com.google.inject.binder.ScopedBindingBuilder" resolve="to" />
                              <node concept="3VsKOn" id="5XU7UUGb9QV" role="37wK5m">
                                <ref role="3VsUkX" to="x30c:5I6yYB8$yIN" resolve="WVariablesManagerImpl" />
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="5XU7UUGb9QW" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTep_" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9Q_" resolve="injector" />
          </node>
        </node>
      </node>
    </node>
    <node concept="2XrIbr" id="5XU7UUGb9QY" role="1qtyYc">
      <property role="TrG5h" value="createDefaultTarget" />
      <node concept="3uibUv" id="5XU7UUGb9QZ" role="3clF45">
        <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
      </node>
      <node concept="3clFbS" id="5XU7UUGb9R0" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9R1" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9R2" role="3cpWs9">
            <property role="TrG5h" value="target" />
            <node concept="3uibUv" id="5XU7UUGb9R3" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDITarget" resolve="ICDITarget" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9R4" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb9R5" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDITarget" resolve="ICDITarget" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9R6" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9R7" role="3cpWs9">
            <property role="TrG5h" value="firstInstruction" />
            <node concept="3uibUv" id="5XU7UUGb9R8" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9R9" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGb9Ra" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Rb" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9Rc" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9Rd" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9Re" role="2Oq$k0">
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGb9Rf" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9Rg" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9R7" resolve="firstInstruction" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Rh" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIMixedInstruction.getLineNumber():int" resolve="getLineNumber" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Ri" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="3cmrfG" id="5XU7UUGb9Rj" role="37wK5m">
                  <property role="3cmrfH" value="4" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9Rk" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9Rl" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Rm" role="3cpWs9">
            <property role="TrG5h" value="firstInstructionOfFirstInstruction" />
            <node concept="3uibUv" id="5XU7UUGb9Rn" role="1tU5fm">
              <ref role="3uigEE" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
            </node>
            <node concept="2YIFZM" id="5XU7UUGb9Ro" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="5XU7UUGb9Rp" role="37wK5m">
                <ref role="3VsUkX" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Rq" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9Rr" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9Rs" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9Rt" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9Ru" role="37wK5m">
                  <node concept="37vLTw" id="5XU7UUGb9Rv" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9Rm" resolve="firstInstructionOfFirstInstruction" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9Rw" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIInstruction.getAdress():java.math.BigInteger" resolve="getAdress" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9Rx" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="2ShNRf" id="5XU7UUGb9Ry" role="37wK5m">
                  <node concept="1pGfFk" id="5XU7UUGb9Rz" role="2ShVmc">
                    <ref role="37wK5l" to="xlxw:~BigInteger.&lt;init&gt;(java.lang.String)" resolve="BigInteger" />
                    <node concept="Xl_RD" id="5XU7UUGb9R$" role="37wK5m">
                      <property role="Xl_RC" value="500" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9R_" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9RA" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9RB" role="3cpWs9">
            <property role="TrG5h" value="instructionsOfFirstInstruction" />
            <node concept="10Q1$e" id="5XU7UUGb9RC" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9RD" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIInstruction" resolve="ICDIInstruction" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9RE" role="33vP2m">
              <node concept="37vLTw" id="5HxjapvQZhZ" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9Rm" resolve="firstInstructionOfFirstInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9RG" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGb9RH" role="3clFbG">
            <node concept="2OqwBi" id="5XU7UUGb9RI" role="2Oq$k0">
              <node concept="2YIFZM" id="5XU7UUGb9RJ" role="2Oq$k0">
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                <node concept="2OqwBi" id="5XU7UUGb9RK" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZpl" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGb9R7" resolve="firstInstruction" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9RM" role="2OqNvi">
                    <ref role="37wK5l" to="n06z:~ICDIMixedInstruction.getInstructions():org.eclipse.cdt.debug.core.cdi.model.ICDIInstruction[]" resolve="getInstructions" />
                  </node>
                </node>
              </node>
              <node concept="liA8E" id="5XU7UUGb9RN" role="2OqNvi">
                <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                <node concept="37vLTw" id="5HxjapvTe3l" role="37wK5m">
                  <ref role="3cqZAo" node="5XU7UUGb9RB" resolve="instructionsOfFirstInstruction" />
                </node>
              </node>
            </node>
            <node concept="liA8E" id="5XU7UUGb9RP" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGb9RQ" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9RR" role="3cpWs9">
            <property role="TrG5h" value="mixedInstructions" />
            <node concept="10Q1$e" id="5XU7UUGb9RS" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGb9RT" role="10Q1$1">
                <ref role="3uigEE" to="n06z:~ICDIMixedInstruction" resolve="ICDIMixedInstruction" />
              </node>
            </node>
            <node concept="2BsdOp" id="5XU7UUGb9RU" role="33vP2m">
              <node concept="37vLTw" id="5XU7UUGb9RV" role="2BsfMF">
                <ref role="3cqZAo" node="5XU7UUGb9R7" resolve="firstInstruction" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGb9RW" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGb9RX" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGb9RY" role="3cqZAp">
              <node concept="2OqwBi" id="5XU7UUGb9RZ" role="3clFbG">
                <node concept="2OqwBi" id="5XU7UUGb9S0" role="2Oq$k0">
                  <node concept="2YIFZM" id="5XU7UUGb9S1" role="2Oq$k0">
                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                    <node concept="2OqwBi" id="5XU7UUGb9S2" role="37wK5m">
                      <node concept="37vLTw" id="5HxjapvQZDu" role="2Oq$k0">
                        <ref role="3cqZAo" node="5XU7UUGb9R2" resolve="target" />
                      </node>
                      <node concept="liA8E" id="5XU7UUGb9S4" role="2OqNvi">
                        <ref role="37wK5l" to="n06z:~ICDISourceManagement.getMixedInstructions(java.lang.String,int):org.eclipse.cdt.debug.core.cdi.model.ICDIMixedInstruction[]" resolve="getMixedInstructions" />
                        <node concept="Xl_RD" id="5XU7UUGb9S5" role="37wK5m">
                          <property role="Xl_RC" value="Main.c" />
                        </node>
                        <node concept="3cmrfG" id="5XU7UUGb9S6" role="37wK5m">
                          <property role="3cmrfH" value="4" />
                        </node>
                      </node>
                    </node>
                  </node>
                  <node concept="liA8E" id="5XU7UUGb9S7" role="2OqNvi">
                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                    <node concept="37vLTw" id="5XU7UUGb9S8" role="37wK5m">
                      <ref role="3cqZAo" node="5XU7UUGb9RR" resolve="mixedInstructions" />
                    </node>
                  </node>
                </node>
                <node concept="liA8E" id="5XU7UUGb9S9" role="2OqNvi">
                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGb9Sa" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGb9Sb" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGb9Sc" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGb9Sd" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGb9Se" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGb9Sf" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGb9Sg" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTdUl" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGb9Sb" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGb9Si" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Sj" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGb9Sk" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9Sl" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5XU7UUGb9Sm" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9R7" resolve="firstInstruction" />
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGb9Sn" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGb9So" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdCv" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGb9Rm" resolve="firstInstructionOfFirstInstruction" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGb9Sq" role="3cqZAp" />
        <node concept="3cpWs6" id="5XU7UUGb9Sr" role="3cqZAp">
          <node concept="37vLTw" id="5HxjapvTdH6" role="3cqZAk">
            <ref role="3cqZAo" node="5XU7UUGb9R2" resolve="target" />
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGb9St" role="1SL9yI">
      <property role="TrG5h" value="resolveChildrenForPrimitive" />
      <node concept="3cqZAl" id="5XU7UUGb9Su" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGb9Sv" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGb9Sw" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGb9Sx" role="3cpWs9">
            <property role="TrG5h" value="primitiveVariable" />
            <node concept="3uibUv" id="5XU7UUGb9Sy" role="1tU5fm">
              <ref role="3uigEE" to="x30c:2RztF939YPK" resolve="IWVariable" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGb9Sz" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGb9S$" role="2ShVmc">
                <ref role="37wK5l" to="x30c:35BAyTmXoCg" resolve="WPrimitiveVariable" />
                <node concept="10Nm6u" id="5XU7UUGb9S_" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9SA" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9SB" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9SC" role="37wK5m" />
                <node concept="10Nm6u" id="5XU7UUGb9SD" role="37wK5m" />
                <node concept="10Nm6u" id="3hwpFGs52D" role="37wK5m" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3$NI$W" id="5XU7UUGb9SE" role="3cqZAp">
          <node concept="3clFbF" id="5XU7UUGb9SF" role="3$Oloe">
            <node concept="2OqwBi" id="5XU7UUGb9SG" role="3clFbG">
              <node concept="37vLTw" id="5HxjapvTdPB" role="2Oq$k0">
                <ref role="3cqZAo" node="5XU7UUGb9Sx" resolve="primitiveVariable" />
              </node>
              <node concept="liA8E" id="5XU7UUGb9SI" role="2OqNvi">
                <ref role="37wK5l" to="x30c:4qrUVeH3W6f" resolve="getChildren" />
              </node>
            </node>
          </node>
          <node concept="3uibUv" id="5XU7UUGb9SJ" role="3$Qgvv">
            <ref role="3uigEE" to="wyt6:~UnsupportedOperationException" resolve="UnsupportedOperationException" />
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="1lH9Xt" id="5XU7UUGbayU">
    <property role="TrG5h" value="WaitingAttach" />
    <property role="3GE5qa" value="wrapper" />
    <node concept="1LZb2c" id="5XU7UUGbayV" role="1SL9yI">
      <property role="TrG5h" value="timerTaskReportsTimeout" />
      <node concept="3cqZAl" id="5XU7UUGbayW" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGbayX" role="3clF47">
        <node concept="3cpWs8" id="5XU7UUGbazb" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbazc" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="5XU7UUGbazd" role="1tU5fm">
              <ref role="3uigEE" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
            </node>
            <node concept="2YIFZM" id="2ZXSOCt7MOd" role="33vP2m">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <node concept="3VsKOn" id="2ZXSOCt7MOe" role="37wK5m">
                <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="2ZXSOCt7MO7" role="3cqZAp">
          <node concept="2YIFZM" id="2ZXSOCt7MO8" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="3VsKOn" id="2ZXSOCt7MO9" role="37wK5m">
              <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGbazi" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbazj" role="3cpWs9">
            <property role="TrG5h" value="eventDummy" />
            <node concept="10Q1$e" id="5XU7UUGbazk" role="1tU5fm">
              <node concept="3uibUv" id="5XU7UUGbazl" role="10Q1$1">
                <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
              </node>
            </node>
            <node concept="2ShNRf" id="5XU7UUGbazm" role="33vP2m">
              <node concept="3$_iS1" id="5XU7UUGbazn" role="2ShVmc">
                <node concept="3$GHV9" id="5XU7UUGbazo" role="3$GQph">
                  <node concept="3cmrfG" id="5XU7UUGbazp" role="3$I4v7">
                    <property role="3cmrfH" value="1" />
                  </node>
                </node>
                <node concept="3uibUv" id="5XU7UUGbazq" role="3$_nBY">
                  <ref role="3uigEE" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbazr" role="3cqZAp">
          <node concept="37vLTI" id="5XU7UUGbazs" role="3clFbG">
            <node concept="AH0OO" id="5XU7UUGbazt" role="37vLTJ">
              <node concept="3cmrfG" id="5XU7UUGbazu" role="AHEQo">
                <property role="3cmrfH" value="0" />
              </node>
              <node concept="37vLTw" id="5HxjapvQZNs" role="AHHXb">
                <ref role="3cqZAo" node="5XU7UUGbazj" resolve="eventDummy" />
              </node>
            </node>
            <node concept="2YIFZM" id="5XU7UUGbazw" role="37vLTx">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="5XU7UUGbazx" role="37wK5m">
                <ref role="3VsUkX" to="d5bg:~ICDIEvent" resolve="ICDIEvent" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbazy" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbazz" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGbaz$" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbazc" resolve="eventListener" />
            </node>
            <node concept="liA8E" id="5XU7UUGbaz_" role="2OqNvi">
              <ref role="37wK5l" to="d5bg:~ICDIEventListener.handleDebugEvents(org.eclipse.cdt.debug.core.cdi.event.ICDIEvent[]):void" resolve="handleDebugEvents" />
              <node concept="2YIFZM" id="5XU7UUGbazA" role="37wK5m">
                <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                <node concept="2OqwBi" id="5XU7UUGbazB" role="37wK5m">
                  <node concept="37vLTw" id="5HxjapvQZm7" role="2Oq$k0">
                    <ref role="3cqZAo" node="5XU7UUGbazj" resolve="eventDummy" />
                  </node>
                  <node concept="liA8E" id="5XU7UUGbazD" role="2OqNvi">
                    <ref role="37wK5l" to="wyt6:~Object.getClass():java.lang.Class" resolve="getClass" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbazE" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbazF" role="3clFbG">
            <node concept="2YIFZM" id="5XU7UUGbazG" role="2Oq$k0">
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <ref role="37wK5l" to="rgba:~EasyMock.expectLastCall():org.easymock.IExpectationSetters" resolve="expectLastCall" />
            </node>
            <node concept="liA8E" id="5XU7UUGbazH" role="2OqNvi">
              <ref role="37wK5l" to="rgba:~IExpectationSetters.times(int):org.easymock.IExpectationSetters" resolve="times" />
              <node concept="3cmrfG" id="5XU7UUGbazI" role="37wK5m">
                <property role="3cmrfH" value="1" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbazJ" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGbazK" role="3clFbG">
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <node concept="37vLTw" id="5HxjapvTdAK" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbazc" resolve="eventListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGbazM" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGbazN" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGbazO" role="3cpWs9">
            <property role="TrG5h" value="timer" />
            <node concept="3uibUv" id="5XU7UUGbazP" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Timer" resolve="Timer" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGbazQ" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGbazR" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~Timer.&lt;init&gt;()" resolve="Timer" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGbazS" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGbazT" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTdto" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbazO" resolve="timer" />
            </node>
            <node concept="liA8E" id="5XU7UUGbazV" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Timer.schedule(java.util.TimerTask,long):void" resolve="schedule" />
              <node concept="2ShNRf" id="2ZXSOCt7MOh" role="37wK5m">
                <node concept="1pGfFk" id="2ZXSOCt7MOt" role="2ShVmc">
                  <ref role="37wK5l" to="x30c:2fmVzkSaIU6" resolve="WaitingAttachTimerTask" />
                  <node concept="37vLTw" id="5HxjapvQZOj" role="37wK5m">
                    <ref role="3cqZAo" node="5XU7UUGbazc" resolve="eventListener" />
                  </node>
                </node>
              </node>
              <node concept="3cmrfG" id="5XU7UUGbazX" role="37wK5m">
                <property role="3cmrfH" value="20" />
              </node>
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGbazY" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGbazZ" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGba$0" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGba$1" role="3clFbG">
                <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                <node concept="3cmrfG" id="5XU7UUGba$2" role="37wK5m">
                  <property role="3cmrfH" value="25" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGba$3" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGba$4" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGba$5" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGba$6" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGba$7" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGba$8" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGba$9" role="3_1BAH">
                    <node concept="37vLTw" id="5HxjapvTdHK" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGba$4" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGba$b" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGba$c" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGba$d" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTdXM" role="37wK5m">
              <ref role="3cqZAo" node="5XU7UUGbazc" resolve="eventListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGba$f" role="3cqZAp" />
        <node concept="3clFbF" id="5XU7UUGba$g" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGba$h" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGba$i" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGbazO" resolve="timer" />
            </node>
            <node concept="liA8E" id="5XU7UUGba$j" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Timer.cancel():void" resolve="cancel" />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1LZb2c" id="5XU7UUGba$k" role="1SL9yI">
      <property role="TrG5h" value="timerTaskCanceledBeforeTimeout" />
      <node concept="3cqZAl" id="5XU7UUGba$l" role="3clF45" />
      <node concept="3clFbS" id="5XU7UUGba$m" role="3clF47">
        <node concept="3cpWs8" id="2ZXSOCt7MOF" role="3cqZAp">
          <node concept="3cpWsn" id="2ZXSOCt7MOG" role="3cpWs9">
            <property role="TrG5h" value="eventListener" />
            <node concept="3uibUv" id="2ZXSOCt7MOH" role="1tU5fm">
              <ref role="3uigEE" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
            </node>
            <node concept="2YIFZM" id="2ZXSOCt7MOI" role="33vP2m">
              <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
              <node concept="3VsKOn" id="2ZXSOCt7MOJ" role="37wK5m">
                <ref role="3VsUkX" to="d5bg:~ICDIEventListener" resolve="ICDIEventListener" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="5XU7UUGba$t" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGba$u" role="3cpWs9">
            <property role="TrG5h" value="timerTask" />
            <node concept="3uibUv" id="5XU7UUGba$v" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~TimerTask" resolve="TimerTask" />
            </node>
            <node concept="2ShNRf" id="2ZXSOCt7MON" role="33vP2m">
              <node concept="1pGfFk" id="2ZXSOCt7MOT" role="2ShVmc">
                <ref role="37wK5l" to="x30c:2fmVzkSaIU6" resolve="WaitingAttachTimerTask" />
                <node concept="37vLTw" id="5HxjapvTdOE" role="37wK5m">
                  <ref role="3cqZAo" node="2ZXSOCt7MOG" resolve="eventListener" />
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGba$F" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGba$G" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
            <node concept="37vLTw" id="5HxjapvQZmf" role="37wK5m">
              <ref role="3cqZAo" node="2ZXSOCt7MOG" resolve="eventListener" />
            </node>
          </node>
        </node>
        <node concept="3clFbH" id="5XU7UUGba$I" role="3cqZAp" />
        <node concept="3cpWs8" id="5XU7UUGba$J" role="3cqZAp">
          <node concept="3cpWsn" id="5XU7UUGba$K" role="3cpWs9">
            <property role="TrG5h" value="timer" />
            <node concept="3uibUv" id="5XU7UUGba$L" role="1tU5fm">
              <ref role="3uigEE" to="33ny:~Timer" resolve="Timer" />
            </node>
            <node concept="2ShNRf" id="5XU7UUGba$M" role="33vP2m">
              <node concept="1pGfFk" id="5XU7UUGba$N" role="2ShVmc">
                <ref role="37wK5l" to="33ny:~Timer.&lt;init&gt;()" resolve="Timer" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGba$O" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGba$P" role="3clFbG">
            <node concept="37vLTw" id="5HxjapvTejb" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGba$K" resolve="timer" />
            </node>
            <node concept="liA8E" id="5XU7UUGba$R" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Timer.schedule(java.util.TimerTask,long):void" resolve="schedule" />
              <node concept="37vLTw" id="5HxjapvQZoZ" role="37wK5m">
                <ref role="3cqZAo" node="5XU7UUGba$u" resolve="timerTask" />
              </node>
              <node concept="3cmrfG" id="6L3DaT70LS$" role="37wK5m">
                <property role="3cmrfH" value="20" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGba$U" role="3cqZAp">
          <node concept="2OqwBi" id="5XU7UUGba$V" role="3clFbG">
            <node concept="37vLTw" id="5XU7UUGba$W" role="2Oq$k0">
              <ref role="3cqZAo" node="5XU7UUGba$K" resolve="timer" />
            </node>
            <node concept="liA8E" id="5XU7UUGba$X" role="2OqNvi">
              <ref role="37wK5l" to="33ny:~Timer.cancel():void" resolve="cancel" />
            </node>
          </node>
        </node>
        <node concept="SfApY" id="5XU7UUGba$Y" role="3cqZAp">
          <node concept="3clFbS" id="5XU7UUGba$Z" role="SfCbr">
            <node concept="3clFbF" id="5XU7UUGba_0" role="3cqZAp">
              <node concept="2YIFZM" id="5XU7UUGba_1" role="3clFbG">
                <ref role="1Pybhc" to="wyt6:~Thread" resolve="Thread" />
                <ref role="37wK5l" to="wyt6:~Thread.sleep(long):void" resolve="sleep" />
                <node concept="3cmrfG" id="5XU7UUGba_2" role="37wK5m">
                  <property role="3cmrfH" value="25" />
                </node>
              </node>
            </node>
          </node>
          <node concept="TDmWw" id="5XU7UUGba_3" role="TEbGg">
            <node concept="3cpWsn" id="5XU7UUGba_4" role="TDEfY">
              <property role="TrG5h" value="e" />
              <node concept="3uibUv" id="5XU7UUGba_5" role="1tU5fm">
                <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
              </node>
            </node>
            <node concept="3clFbS" id="5XU7UUGba_6" role="TDEfX">
              <node concept="3xETmq" id="5XU7UUGba_7" role="3cqZAp">
                <node concept="3_1$Yv" id="5XU7UUGba_8" role="3_9lra">
                  <node concept="2OqwBi" id="5XU7UUGba_9" role="3_1BAH">
                    <node concept="37vLTw" id="5XU7UUGba_a" role="2Oq$k0">
                      <ref role="3cqZAo" node="5XU7UUGba_4" resolve="e" />
                    </node>
                    <node concept="liA8E" id="5XU7UUGba_b" role="2OqNvi">
                      <ref role="37wK5l" to="wyt6:~Throwable.getMessage():java.lang.String" resolve="getMessage" />
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbF" id="5XU7UUGba_c" role="3cqZAp">
          <node concept="2YIFZM" id="5XU7UUGba_d" role="3clFbG">
            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
            <ref role="37wK5l" to="rgba:~EasyMock.verify(java.lang.Object...):void" resolve="verify" />
            <node concept="37vLTw" id="5HxjapvTdSC" role="37wK5m">
              <ref role="3cqZAo" node="2ZXSOCt7MOG" resolve="eventListener" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="4jk7wJvEQiM">
    <property role="3GE5qa" value="api" />
    <property role="TrG5h" value="DebuggerSettingsDummy" />
    <node concept="3Tm1VV" id="4jk7wJvEQiN" role="1B3o_S" />
    <node concept="3uibUv" id="4jk7wJvEQjQ" role="EKbjA">
      <ref role="3uigEE" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkk" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getProject" />
      <node concept="3uibUv" id="4jk7wJvEQkl" role="3clF45">
        <ref role="3uigEE" to="4nm9:~Project" resolve="Project" />
      </node>
      <node concept="3Tm1VV" id="4jk7wJvEQkm" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQko" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQkq" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQkp" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkr" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getBinary" />
      <node concept="3uibUv" id="4jk7wJvEQks" role="3clF45">
        <ref role="3uigEE" to="mhbf:~SNode" resolve="SNode" />
      </node>
      <node concept="3Tm1VV" id="4jk7wJvEQkt" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkv" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQkx" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQkw" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQky" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getModel" />
      <node concept="H_c77" id="4jk7wJvEQkz" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQk$" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkA" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQyL" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQyK" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkB" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getModules" />
      <node concept="2I9FWS" id="4jk7wJvEQkC" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQkD" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkF" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQz9" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQza" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkG" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getTracePath" />
      <node concept="17QB3L" id="4jk7wJvEQkH" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQkI" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkK" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQzv" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQzw" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkL" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getBinaryPath" />
      <node concept="17QB3L" id="4jk7wJvEQkM" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQkN" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkP" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQzP" role="3cqZAp">
          <node concept="10Nm6u" id="4jk7wJvEQzQ" role="3clFbG" />
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkQ" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getLaunchTimeout" />
      <node concept="10Oyi0" id="4jk7wJvEQkR" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQkS" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkU" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQAJ" role="3cqZAp">
          <node concept="3cmrfG" id="4jk7wJvEQAI" role="3clFbG">
            <property role="3cmrfH" value="-1" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQkV" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="getCommandTimeout" />
      <node concept="10Oyi0" id="4jk7wJvEQkW" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQkX" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQkZ" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQ_C" role="3cqZAp">
          <node concept="3cmrfG" id="4jk7wJvEQ_B" role="3clFbG">
            <property role="3cmrfH" value="-1" />
          </node>
        </node>
      </node>
    </node>
    <node concept="3clFb_" id="4jk7wJvEQl0" role="jymVt">
      <property role="1EzhhJ" value="false" />
      <property role="TrG5h" value="showUnmappedVariables" />
      <node concept="10P_77" id="4jk7wJvEQl1" role="3clF45" />
      <node concept="3Tm1VV" id="4jk7wJvEQl2" role="1B3o_S" />
      <node concept="3clFbS" id="4jk7wJvEQl4" role="3clF47">
        <node concept="3clFbF" id="4jk7wJvEQl6" role="3cqZAp">
          <node concept="3clFbT" id="4jk7wJvEQl5" role="3clFbG" />
        </node>
      </node>
    </node>
  </node>
  <node concept="312cEu" id="4jk7wJvGH$i">
    <property role="3GE5qa" value="api" />
    <property role="TrG5h" value="BackendProviderFactoryUtil" />
    <node concept="2tJIrI" id="4jk7wJvH0Lp" role="jymVt" />
    <node concept="2YIFZL" id="4jk7wJvH01L" role="jymVt">
      <property role="TrG5h" value="getBackendProviderThatReturns" />
      <property role="IEkAT" value="false" />
      <property role="DiZV1" value="false" />
      <property role="od$2w" value="false" />
      <node concept="3clFbS" id="4jk7wJvGHD6" role="3clF47">
        <node concept="1gVbGN" id="4jk7wJvGHD7" role="3cqZAp">
          <node concept="pVQyQ" id="4jk7wJvGHD8" role="1gVkn0">
            <node concept="3y3z36" id="4jk7wJvGHD9" role="3uHU7w">
              <node concept="10Nm6u" id="4jk7wJvGHDa" role="3uHU7w" />
              <node concept="37vLTw" id="4jk7wJvGHDb" role="3uHU7B">
                <ref role="3cqZAo" node="4jk7wJvGHD3" resolve="session" />
              </node>
            </node>
            <node concept="3y3z36" id="4jk7wJvGHDc" role="3uHU7B">
              <node concept="37vLTw" id="4jk7wJvGHDd" role="3uHU7B">
                <ref role="3cqZAo" node="4jk7wJvGHD1" resolve="exc" />
              </node>
              <node concept="10Nm6u" id="4jk7wJvGHDe" role="3uHU7w" />
            </node>
          </node>
        </node>
        <node concept="3cpWs8" id="4jk7wJvGHDf" role="3cqZAp">
          <node concept="3cpWsn" id="4jk7wJvGHDg" role="3cpWs9">
            <property role="TrG5h" value="backendProviderFactory" />
            <node concept="3uibUv" id="4jk7wJvGHDh" role="1tU5fm">
              <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
            </node>
            <node concept="2ShNRf" id="4jk7wJvGHDi" role="33vP2m">
              <node concept="YeOm9" id="4jk7wJvGHDj" role="2ShVmc">
                <node concept="1Y3b0j" id="4jk7wJvGHDk" role="YeSDq">
                  <property role="2bfB8j" value="true" />
                  <ref role="1Y3XeK" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
                  <ref role="37wK5l" to="wyt6:~Object.&lt;init&gt;()" resolve="Object" />
                  <node concept="3Tm1VV" id="4jk7wJvGHDl" role="1B3o_S" />
                  <node concept="3clFb_" id="4jk7wJvGHDm" role="jymVt">
                    <property role="1EzhhJ" value="false" />
                    <property role="TrG5h" value="getBackendProvider" />
                    <node concept="37vLTG" id="4jk7wJvGHDn" role="3clF46">
                      <property role="TrG5h" value="debuggerSettings" />
                      <node concept="3uibUv" id="4jk7wJvGHDo" role="1tU5fm">
                        <ref role="3uigEE" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                      </node>
                    </node>
                    <node concept="3uibUv" id="4jk7wJvGHDp" role="3clF45">
                      <ref role="3uigEE" to="blwm:7B__YhMLdfT" resolve="IDebuggerBackendProvider" />
                    </node>
                    <node concept="3Tm1VV" id="4jk7wJvGHDq" role="1B3o_S" />
                    <node concept="3clFbS" id="4jk7wJvGHDr" role="3clF47">
                      <node concept="3cpWs8" id="4jk7wJvGHDs" role="3cqZAp">
                        <node concept="3cpWsn" id="4jk7wJvGHDt" role="3cpWs9">
                          <property role="TrG5h" value="backendProviderMock" />
                          <node concept="3uibUv" id="4jk7wJvGHDu" role="1tU5fm">
                            <ref role="3uigEE" to="blwm:7B__YhMLdfT" resolve="IDebuggerBackendProvider" />
                          </node>
                          <node concept="2YIFZM" id="4jk7wJvGHDv" role="33vP2m">
                            <ref role="37wK5l" to="rgba:~EasyMock.createMock(java.lang.Class):java.lang.Object" resolve="createMock" />
                            <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                            <node concept="3VsKOn" id="4jk7wJvGHDw" role="37wK5m">
                              <ref role="3VsUkX" to="blwm:7B__YhMLdfT" resolve="IDebuggerBackendProvider" />
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbF" id="4jk7wJvGHDx" role="3cqZAp">
                        <node concept="2OqwBi" id="4jk7wJvGHDy" role="3clFbG">
                          <node concept="2OqwBi" id="4jk7wJvGHDz" role="2Oq$k0">
                            <node concept="2YIFZM" id="4jk7wJvGHD$" role="2Oq$k0">
                              <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                              <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                              <node concept="2OqwBi" id="4jk7wJvGHD_" role="37wK5m">
                                <node concept="37vLTw" id="4jk7wJvGHDA" role="2Oq$k0">
                                  <ref role="3cqZAo" node="4jk7wJvGHDt" resolve="backendProviderMock" />
                                </node>
                                <node concept="liA8E" id="4jk7wJvGHDB" role="2OqNvi">
                                  <ref role="37wK5l" to="blwm:7B__YhMLdfU" resolve="acceptsRunConfigType" />
                                  <node concept="2YIFZM" id="4jk7wJvGHDC" role="37wK5m">
                                    <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                    <node concept="3VsKOn" id="4jk7wJvGHDD" role="37wK5m">
                                      <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node concept="liA8E" id="4jk7wJvGHDE" role="2OqNvi">
                              <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                              <node concept="3clFbT" id="4jk7wJvGHDF" role="37wK5m">
                                <property role="3clFbU" value="true" />
                              </node>
                            </node>
                          </node>
                          <node concept="liA8E" id="4jk7wJvGHDG" role="2OqNvi">
                            <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbJ" id="4jk7wJvGHDH" role="3cqZAp">
                        <node concept="3clFbS" id="4jk7wJvGHDI" role="3clFbx">
                          <node concept="3clFbF" id="4jk7wJvGHDJ" role="3cqZAp">
                            <node concept="2OqwBi" id="4jk7wJvGHDK" role="3clFbG">
                              <node concept="2OqwBi" id="4jk7wJvGHDL" role="2Oq$k0">
                                <node concept="2YIFZM" id="4jk7wJvGHDM" role="2Oq$k0">
                                  <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                                  <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                  <node concept="2OqwBi" id="4jk7wJvGHDN" role="37wK5m">
                                    <node concept="37vLTw" id="4jk7wJvGHDO" role="2Oq$k0">
                                      <ref role="3cqZAo" node="4jk7wJvGHDt" resolve="backendProviderMock" />
                                    </node>
                                    <node concept="liA8E" id="4jk7wJvGHDP" role="2OqNvi">
                                      <ref role="37wK5l" to="blwm:7B__YhMLdg0" resolve="createSession" />
                                      <node concept="2YIFZM" id="4jk7wJvGHDQ" role="37wK5m">
                                        <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                                        <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                        <node concept="3VsKOn" id="4jk7wJvGHDR" role="37wK5m">
                                          <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node concept="liA8E" id="4jk7wJvGHDS" role="2OqNvi">
                                  <ref role="37wK5l" to="rgba:~IExpectationSetters.andThrow(java.lang.Throwable):org.easymock.IExpectationSetters" resolve="andThrow" />
                                  <node concept="2ShNRf" id="4jk7wJvGHDT" role="37wK5m">
                                    <node concept="1pGfFk" id="4jk7wJvGHDU" role="2ShVmc">
                                      <ref role="37wK5l" to="wyt6:~Exception.&lt;init&gt;()" resolve="Exception" />
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node concept="liA8E" id="4jk7wJvGHDV" role="2OqNvi">
                                <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                              </node>
                            </node>
                          </node>
                        </node>
                        <node concept="3y3z36" id="4jk7wJvGHDW" role="3clFbw">
                          <node concept="10Nm6u" id="4jk7wJvGHDX" role="3uHU7w" />
                          <node concept="37vLTw" id="4jk7wJvGHDY" role="3uHU7B">
                            <ref role="3cqZAo" node="4jk7wJvGHD1" resolve="exc" />
                          </node>
                        </node>
                        <node concept="9aQIb" id="4jk7wJvGHDZ" role="9aQIa">
                          <node concept="3clFbS" id="4jk7wJvGHE0" role="9aQI4">
                            <node concept="3clFbF" id="4jk7wJvGHE1" role="3cqZAp">
                              <node concept="2OqwBi" id="4jk7wJvGHE2" role="3clFbG">
                                <node concept="2OqwBi" id="4jk7wJvGHE3" role="2Oq$k0">
                                  <node concept="2YIFZM" id="4jk7wJvGHE4" role="2Oq$k0">
                                    <ref role="37wK5l" to="rgba:~EasyMock.expect(java.lang.Object):org.easymock.IExpectationSetters" resolve="expect" />
                                    <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                    <node concept="2OqwBi" id="4jk7wJvGHE5" role="37wK5m">
                                      <node concept="37vLTw" id="4jk7wJvGHE6" role="2Oq$k0">
                                        <ref role="3cqZAo" node="4jk7wJvGHDt" resolve="backendProviderMock" />
                                      </node>
                                      <node concept="liA8E" id="4jk7wJvGHE7" role="2OqNvi">
                                        <ref role="37wK5l" to="blwm:7B__YhMLdg0" resolve="createSession" />
                                        <node concept="2YIFZM" id="4jk7wJvGHE8" role="37wK5m">
                                          <ref role="37wK5l" to="rgba:~EasyMock.anyObject(java.lang.Class):java.lang.Object" resolve="anyObject" />
                                          <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                                          <node concept="3VsKOn" id="4jk7wJvGHE9" role="37wK5m">
                                            <ref role="3VsUkX" to="x30c:3gwY0Fae6Vj" resolve="IMbeddrDebuggerSettings" />
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node concept="liA8E" id="4jk7wJvGHEa" role="2OqNvi">
                                    <ref role="37wK5l" to="rgba:~IExpectationSetters.andReturn(java.lang.Object):org.easymock.IExpectationSetters" resolve="andReturn" />
                                    <node concept="37vLTw" id="4jk7wJvGHEb" role="37wK5m">
                                      <ref role="3cqZAo" node="4jk7wJvGHD3" resolve="session" />
                                    </node>
                                  </node>
                                </node>
                                <node concept="liA8E" id="4jk7wJvGHEc" role="2OqNvi">
                                  <ref role="37wK5l" to="rgba:~IExpectationSetters.anyTimes():org.easymock.IExpectationSetters" resolve="anyTimes" />
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node concept="3clFbH" id="4jk7wJvGHEd" role="3cqZAp" />
                      <node concept="3clFbF" id="4jk7wJvGHEe" role="3cqZAp">
                        <node concept="2YIFZM" id="4jk7wJvGHEf" role="3clFbG">
                          <ref role="1Pybhc" to="rgba:~EasyMock" resolve="EasyMock" />
                          <ref role="37wK5l" to="rgba:~EasyMock.replay(java.lang.Object...):void" resolve="replay" />
                          <node concept="37vLTw" id="4jk7wJvGHEg" role="37wK5m">
                            <ref role="3cqZAo" node="4jk7wJvGHDt" resolve="backendProviderMock" />
                          </node>
                        </node>
                      </node>
                      <node concept="3cpWs6" id="4jk7wJvGHEh" role="3cqZAp">
                        <node concept="37vLTw" id="4jk7wJvGHEi" role="3cqZAk">
                          <ref role="3cqZAo" node="4jk7wJvGHDt" resolve="backendProviderMock" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="4jk7wJvGHEj" role="3cqZAp">
          <node concept="37vLTw" id="4jk7wJvGHEk" role="3cqZAk">
            <ref role="3cqZAo" node="4jk7wJvGHDg" resolve="backendProviderFactory" />
          </node>
        </node>
      </node>
      <node concept="37vLTG" id="4jk7wJvGHD1" role="3clF46">
        <property role="TrG5h" value="exc" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="4jk7wJvGHD2" role="1tU5fm">
          <ref role="3uigEE" to="wyt6:~Exception" resolve="Exception" />
        </node>
      </node>
      <node concept="37vLTG" id="4jk7wJvGHD3" role="3clF46">
        <property role="TrG5h" value="session" />
        <property role="3TUv4t" value="true" />
        <node concept="3uibUv" id="4jk7wJvGHD4" role="1tU5fm">
          <ref role="3uigEE" to="ys5c:~ICDISession" resolve="ICDISession" />
        </node>
      </node>
      <node concept="3uibUv" id="4jk7wJvGHD5" role="3clF45">
        <ref role="3uigEE" to="x30c:4jk7wJvpMju" resolve="IWBackendProviderFactory" />
      </node>
    </node>
    <node concept="2tJIrI" id="4jk7wJvGH$Y" role="jymVt" />
    <node concept="3Tm1VV" id="4jk7wJvGH$j" role="1B3o_S" />
  </node>
</model>

