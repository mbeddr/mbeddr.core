<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:38897e08-83fd-42c7-91d3-65b102721940(com.mbeddr.tutorial.documentation.ug.cextensions)" content="root">
  <persistence version="9" />
  <imports>
    <import index="1842" ref="r:af9946fd-1a63-4ece-b383-78243d689d45(com.mbeddr.tutorial.documentation.ug.common)" implicit="true" />
    <import index="e1tx" ref="r:bd5ec23c-c294-47cc-a078-675c03abdb69(mbeddr.tutorial.main.defaultExtensions)" implicit="true" />
    <import index="us0v" ref="r:22b9d29d-483d-4f08-8d1b-4e6567157caf(com.mbeddr.tutorial.documentation.ug.analyses)" implicit="true" />
  </imports>
  <registry>
    <language id="92d2ea16-5a42-4fdf-a676-c7604efe3504" name="de.slisson.mps.richtext">
      <concept id="2557074442922380897" name="de.slisson.mps.richtext.structure.Text" flags="ng" index="19SGf9">
        <child id="2557074442922392302" name="words" index="19SJt6" />
      </concept>
      <concept id="2557074442922438156" name="de.slisson.mps.richtext.structure.Word" flags="ng" index="19SUe$">
        <property id="2557074442922438158" name="escapedValue" index="19SUeA" />
      </concept>
    </language>
    <language id="2374bc90-7e37-41f1-a9c4-c2e35194c36a" name="com.mbeddr.doc">
      <concept id="6165313375055797476" name="com.mbeddr.doc.structure.FormattedText" flags="ng" index="$DsGX">
        <child id="6165313375055797477" name="text" index="$DsGW" />
      </concept>
      <concept id="6657644269295214799" name="com.mbeddr.doc.structure.IDocumentLike" flags="ng" index="G9hjZ">
        <reference id="6657644269295214800" name="config" index="G9hjw" />
        <child id="8730648445433290694" name="dependsOn" index="1DXQ57" />
      </concept>
      <concept id="2286331641395252232" name="com.mbeddr.doc.structure.NamedNodeModelContentPointerElement" flags="ng" index="2NCMab">
        <reference id="2286331641395252233" name="node" index="2NCMaa" />
      </concept>
      <concept id="2286331641395238583" name="com.mbeddr.doc.structure.ModelContentPointer" flags="ng" index="2NCZwO">
        <child id="2286331641395252236" name="elements" index="2NCMaf" />
      </concept>
      <concept id="2286331641391049225" name="com.mbeddr.doc.structure.KeyPressFormattedText" flags="ng" index="2OoWia" />
      <concept id="6386504476136263187" name="com.mbeddr.doc.structure.ImageParagraph" flags="ng" index="2SaynC">
        <child id="6386504476136278696" name="description" index="2SaI5j" />
        <child id="6386504476136531838" name="resource" index="2SbwM5" />
        <child id="8624890525767908695" name="sizeSpec" index="3SHJ_F" />
      </concept>
      <concept id="6386504476136521407" name="com.mbeddr.doc.structure.Resource" flags="ng" index="2Sb_l4">
        <property id="6386504476136521408" name="fileName" index="2Sb_kV" />
        <reference id="6386504476136521409" name="path" index="2Sb_kU" />
      </concept>
      <concept id="4457500422381571986" name="com.mbeddr.doc.structure.CodeFormattedText" flags="ng" index="1jUjqm" />
      <concept id="6955693250238922820" name="com.mbeddr.doc.structure.AbstractModelContentParagraph" flags="ng" index="3z_lpG">
        <property id="6955693250238922823" name="showContents" index="3z_lpJ" />
        <child id="6955693250238922822" name="codeptr" index="3z_lpI" />
      </concept>
      <concept id="6955693250238922834" name="com.mbeddr.doc.structure.ModelContentAsTextParagraph" flags="ng" index="3z_lpU">
        <property id="6955693250238922835" name="text" index="3z_lpV" />
        <property id="6955693250238922836" name="language" index="3z_lpW" />
      </concept>
      <concept id="3350625596580225385" name="com.mbeddr.doc.structure.DocumentRef" flags="ng" index="1_0j5j">
        <reference id="3350625596580225386" name="doc" index="1_0j5g" />
      </concept>
      <concept id="3350625596580108709" name="com.mbeddr.doc.structure.SectRefWord" flags="ng" index="1_0GAv">
        <reference id="3350625596580108719" name="target" index="1_0GAl" />
      </concept>
      <concept id="3350625596580089586" name="com.mbeddr.doc.structure.TextParagraph" flags="ng" index="1_0LV8">
        <child id="3350625596580089613" name="text" index="1_0LWR" />
      </concept>
      <concept id="3350625596580064249" name="com.mbeddr.doc.structure.IDocContentContainer" flags="ng" index="1_0VJ3">
        <child id="3350625596580064250" name="contents" index="1_0VJ0" />
      </concept>
      <concept id="3350625596580064222" name="com.mbeddr.doc.structure.AbstractSection" flags="ng" index="1_0VJ$">
        <property id="3350625596580064225" name="text" index="1_0VJr" />
      </concept>
      <concept id="3350625596580064455" name="com.mbeddr.doc.structure.Section" flags="ng" index="1_0VNX" />
      <concept id="3350625596579911728" name="com.mbeddr.doc.structure.Document" flags="ng" index="1_1swa">
        <property id="5572730672710143343" name="chapterStartIndex" index="yApLE" />
      </concept>
      <concept id="3350625596579911760" name="com.mbeddr.doc.structure.EmptyDocContent" flags="ng" index="1_1sxE" />
      <concept id="8730648445434044903" name="com.mbeddr.doc.structure.ListingParagraph" flags="ng" index="1DKdXA">
        <property id="8730648445434044905" name="language" index="1DKdXC" />
        <property id="8730648445434044906" name="text" index="1DKdXF" />
      </concept>
      <concept id="8624890525767637976" name="com.mbeddr.doc.structure.PageWidthSizeSpec" flags="ng" index="3SGHZ$">
        <property id="8624890525767637977" name="percentage" index="3SGHZ_" />
      </concept>
    </language>
    <language id="d4280a54-f6df-4383-aa41-d1b2bffa7eb1" name="com.mbeddr.core.base">
      <concept id="8375407818529178006" name="com.mbeddr.core.base.structure.TextBlock" flags="ng" index="OjmMv">
        <child id="8375407818529178007" name="text" index="OjmMu" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
  </registry>
  <node concept="1_1swa" id="6UY8Kx5iuLF">
    <property role="TrG5h" value="B_DecisionTables" />
    <property role="yApLE" value="7" />
    <ref role="G9hjw" to="1842:2fBMM_3XZ4C" resolve="Config" />
    <node concept="1_0VNX" id="3mn43GO8cnY" role="1_0VJ0">
      <property role="TrG5h" value="decisionTables" />
      <property role="1_0VJr" value="Decision Tables" />
      <node concept="1_0LV8" id="6UY8Kx5izzY" role="1_0VJ0">
        <node concept="19SGf9" id="6UY8Kx5izzZ" role="1_0LWR">
          <node concept="19SUe$" id="6UY8Kx5iz$0" role="19SJt6">
            <property role="19SUeA" value="Let us implement another interface, one that lets us judge flights (we do this in a new section in the " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iz$a" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iz$b" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iz$c" role="19SJt6">
                <property role="19SUeA" value="Components" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iz$9" role="19SJt6">
            <property role="19SUeA" value=" module). The idea is that clients add trackpoints, and the " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iAjj" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iAjk" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iAjl" role="19SJt6">
                <property role="19SUeA" value="FlightJudger" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iAji" role="19SJt6">
            <property role="19SUeA" value=" computes some kind of score from it (consider some kind of biking/flying competition as a context):" />
          </node>
        </node>
      </node>
      <node concept="3z_lpU" id="6UY8Kx5iAjv" role="1_0VJ0">
        <property role="3z_lpW" value="mbeddr" />
        <property role="3z_lpV" value="exported cs interface FlightJudger {&#10;  void reset()                      &#10;  void addTrackpoint(Trackpoint* tp)&#10;  int16 getResult()                 &#10;}                                   " />
        <property role="3z_lpJ" value="false" />
        <node concept="2NCZwO" id="1YUFCeGolCE" role="3z_lpI">
          <node concept="2NCMab" id="1YUFCeGolCF" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:1w5Xuj1QYPN" resolve="Components" />
          </node>
          <node concept="2NCMab" id="1YUFCeGolCG" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:1w5Xuj1SfMm" resolve="FlightJudger" />
          </node>
        </node>
      </node>
      <node concept="1_0LV8" id="6UY8Kx5iAjV" role="1_0VJ0">
        <node concept="19SGf9" id="6UY8Kx5iAjW" role="1_0LWR">
          <node concept="19SUe$" id="6UY8Kx5iAjX" role="19SJt6">
            <property role="19SUeA" value="Here is the basic implementation of a component that provides this interface." />
          </node>
        </node>
      </node>
      <node concept="1DKdXA" id="6UY8Kx5iIXH" role="1_0VJ0">
        <property role="1DKdXC" value="mbeddr" />
        <property role="1DKdXF" value="exported component Judge extends nothing { &#10;  provides FlightJudger judger &#10;  int16 points = 0; &#10;  void judger_reset() &lt;- op judger.reset { &#10;    points = 0; &#10;  }  &#10;  void judger_addTrackpoint(Trackpoint* tp) &lt;- op judger.addTrackpoint { &#10;    points += 0; // to be changed&#10;  }  &#10;  int16 judger_getResult() &lt;- op judger.getResult { &#10;    return points; &#10;  }  &#10;}" />
      </node>
      <node concept="1_0LV8" id="6UY8Kx5iIY0" role="1_0VJ0">
        <node concept="19SGf9" id="6UY8Kx5iIY1" role="1_0LWR">
          <node concept="19SUe$" id="6UY8Kx5iIY2" role="19SJt6">
            <property role="19SUeA" value="Of course the implementation of " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iKlS" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iKlT" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iKlU" role="19SJt6">
                <property role="19SUeA" value="addTrackpoint" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iKlR" role="19SJt6">
            <property role="19SUeA" value=" that just adds " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iLHx" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iLHy" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iLHz" role="19SJt6">
                <property role="19SUeA" value="0" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iLHw" role="19SJt6">
            <property role="19SUeA" value=" to the " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iLHI" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iLHJ" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iLHK" role="19SJt6">
                <property role="19SUeA" value="points" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iLHH" role="19SJt6">
            <property role="19SUeA" value=" doesn't make much sense yet. The amount of points added should depend on how fast and how high the plane (or whatever) was going. The following screenshot shows an embedded decision table that computes points (Notice we mix the components language, the decision tables and the units in one integrated program):" />
          </node>
        </node>
      </node>
      <node concept="2SaynC" id="6UY8Kx5iUgN" role="1_0VJ0">
        <property role="TrG5h" value="dectab" />
        <node concept="2Sb_l4" id="6UY8Kx5iUhy" role="2SbwM5">
          <property role="2Sb_kV" value="tutorial/dectab.png" />
          <ref role="2Sb_kU" to="1842:2fBMM_3XZ4D" resolve="images" />
        </node>
        <node concept="OjmMv" id="6UY8Kx5iUgR" role="2SaI5j">
          <node concept="19SGf9" id="6UY8Kx5iUgS" role="OjmMu">
            <node concept="19SUe$" id="6UY8Kx5iUgT" role="19SJt6" />
          </node>
        </node>
        <node concept="3SGHZ$" id="6UY8Kx5iVD4" role="3SHJ_F">
          <property role="3SGHZ_" value="90" />
        </node>
      </node>
      <node concept="1_0LV8" id="6UY8Kx5iZ4u" role="1_0VJ0">
        <node concept="19SGf9" id="6UY8Kx5iZ4v" role="1_0LWR">
          <node concept="19SUe$" id="6UY8Kx5iZ4w" role="19SJt6">
            <property role="19SUeA" value="You can create the decision on your own by first of all typing the keyword " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iZ5b" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iZ5c" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iZ5d" role="19SJt6">
                <property role="19SUeA" value="dectab" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iZ5a" role="19SJt6">
            <property role="19SUeA" value=" - this instanciates the concept.  To add a column, hit " />
          </node>
          <node concept="2OoWia" id="yaVrOuw0L9" role="19SJt6">
            <node concept="19SGf9" id="yaVrOuw0Lc" role="$DsGW">
              <node concept="19SUe$" id="yaVrOuw0Ld" role="19SJt6">
                <property role="19SUeA" value="enter" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iZ5j" role="19SJt6">
            <property role="19SUeA" value=" in one of the cells. For adding a row, move your cursor  on the left side of the table (between the default return value and the table) and hit " />
          </node>
          <node concept="2OoWia" id="yaVrOuw0LK" role="19SJt6">
            <node concept="19SGf9" id="yaVrOuw0LN" role="$DsGW">
              <node concept="19SUe$" id="yaVrOuw0LO" role="19SJt6">
                <property role="19SUeA" value="enter" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iZ5w" role="19SJt6">
            <property role="19SUeA" value=".  Now, let us write a test. Of course we first need an instance of " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5iZ6_" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5iZ6A" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5iZ6B" role="19SJt6">
                <property role="19SUeA" value="Judge" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5iZ6$" role="19SJt6">
            <property role="19SUeA" value=":" />
          </node>
        </node>
      </node>
      <node concept="3z_lpU" id="6UY8Kx5j6iB" role="1_0VJ0">
        <property role="3z_lpW" value="mbeddr" />
        <property role="3z_lpV" value="instances instancesJudging {&#10;  instance Judge theJudge   &#10;  adapt j -&gt; theJudge.judger&#10;}                           " />
        <property role="3z_lpJ" value="false" />
        <node concept="2NCZwO" id="1YUFCeGolG4" role="3z_lpI">
          <node concept="2NCMab" id="1YUFCeGolG5" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:1w5Xuj1QYPN" resolve="Components" />
          </node>
          <node concept="2NCMab" id="1YUFCeGolG6" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:4usdeMNSHXS" resolve="instancesJudging" />
          </node>
        </node>
      </node>
      <node concept="1_0LV8" id="6UY8Kx5j7FX" role="1_0VJ0">
        <node concept="19SGf9" id="6UY8Kx5j7FY" role="1_0LWR">
          <node concept="19SUe$" id="6UY8Kx5j7FZ" role="19SJt6">
            <property role="19SUeA" value="Below is the test case. It contains two things you maybe haven't seen before. There is a second form of the " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5j7GY" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5j7GZ" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5j7H0" role="19SJt6">
                <property role="19SUeA" value="for" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5j7GX" role="19SJt6">
            <property role="19SUeA" value=" statement that iterates over a range of values. The range can be exclusive the ends or inclusive (to be changed via an intention). In the example we iterate from 0 to 4, since 5 is excluded. The " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5j7H7" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5j7H8" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5j7H9" role="19SJt6">
                <property role="19SUeA" value="introduceunit" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5j7H6" role="19SJt6">
            <property role="19SUeA" value=" construct can be used to &quot;sneak in&quot; a unit into a regular value. This is useful for interacting with non-unit-aware (library) code. Note how the expression for " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5j7Hk" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5j7Hl" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5j7Hm" role="19SJt6">
                <property role="19SUeA" value="speed" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5j7Hj" role="19SJt6">
            <property role="19SUeA" value=" is a way of expressing the same thing without the " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5j7H_" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5j7HA" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5j7HB" role="19SJt6">
                <property role="19SUeA" value="introduceunit" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5j7H$" role="19SJt6">
            <property role="19SUeA" value=" in this case. Any expression can be surrounded by " />
          </node>
          <node concept="1jUjqm" id="6UY8Kx5j7HU" role="19SJt6">
            <node concept="19SGf9" id="6UY8Kx5j7HV" role="$DsGW">
              <node concept="19SUe$" id="6UY8Kx5j7HW" role="19SJt6">
                <property role="19SUeA" value="introduceunit" />
              </node>
            </node>
          </node>
          <node concept="19SUe$" id="6UY8Kx5j7HT" role="19SJt6">
            <property role="19SUeA" value=" via an intention." />
          </node>
        </node>
      </node>
      <node concept="3z_lpU" id="6UY8Kx5jdyS" role="1_0VJ0">
        <property role="3z_lpW" value="mbeddr" />
        <property role="3z_lpV" value="exported testcase testJudging {                          &#10;  initialize instancesJudging;                           &#10;  j.reset();                                             &#10;  Trackpoint[5] points;                                  &#10;  for (i ++ in [0..5[) {                                 &#10;  points[i].id = ((int8) i);                             &#10;  points[i].alt = 1810 + 100 * i m;                      &#10;  points[i].speed = 130 mps+ 10 mps* i;                  &#10;  j.addTrackpoint(&amp;points[i]);                           &#10;} for                                                    &#10;  assert-equals(0) j.getResult() == 0 + 0 + 20 + 20 + 20;&#10;} testJudging(test case)                                 " />
        <property role="3z_lpJ" value="false" />
        <node concept="2NCZwO" id="1YUFCeGolET" role="3z_lpI">
          <node concept="2NCMab" id="1YUFCeGolEU" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:1w5Xuj1QYPN" resolve="Components" />
          </node>
          <node concept="2NCMab" id="1YUFCeGolEV" role="2NCMaf">
            <ref role="2NCMaa" to="e1tx:4usdeMNSGkI" resolve="testJudging" />
          </node>
        </node>
      </node>
      <node concept="1_1sxE" id="6UY8Kx5jd$b" role="1_0VJ0">
        <property role="TrG5h" value="empty_1394875531895_21" />
      </node>
      <node concept="1_0VNX" id="6UY8Kx5jdAM" role="1_0VJ0">
        <property role="TrG5h" value="verifyDectab" />
        <property role="1_0VJr" value="Verifying the Decision Table" />
        <node concept="1_0LV8" id="6UY8Kx5jfFp" role="1_0VJ0">
          <node concept="19SGf9" id="6UY8Kx5jfFq" role="1_0LWR">
            <node concept="19SUe$" id="6UY8Kx5jfFr" role="19SJt6">
              <property role="19SUeA" value="So far so good. The test case is fine. However, as with many tests, this one only tests part of the overall functionality. And in fact, you may have noticed that an error lurks inside our decision table: for 2000 m of altitude, the table is non-deterministic: both conditions in the column header work! We could find this problem with more tests, or we could use formal verification as described in " />
            </node>
            <node concept="1_0GAv" id="2JeiqU7feA5" role="19SJt6">
              <ref role="1_0GAl" to="us0v:3JyX84yPgyl" resolve="decision_tables" />
            </node>
            <node concept="19SUe$" id="2JeiqU7feA4" role="19SJt6">
              <property role="19SUeA" value=". " />
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1_0j5j" id="3ZdGyCRQBxZ" role="1DXQ57">
      <ref role="1_0j5g" to="us0v:7OKLwZ_7fp5" resolve="C_FormalVerification" />
    </node>
  </node>
</model>

